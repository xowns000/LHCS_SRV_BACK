<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="kr.co.hkcloud.palette3.chat.main.dao.ChatMainMapper">
    <!-- git업데이트 -->
    
<!-- 상담대기 리스트 정보를 조회한다.(상담톡 메인에서 사용) -->	
<select id="selectRtnTalkReadySearch"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
SELECT '' AS CHT_CUTT_ID
     , TUR.CUST_ID
     , TUR.SNDR_KEY
     , CT3.DSPTCH_PRF_NM AS SNDR_KEY_NM
     , TUR.TALK_SERIAL_NUMBER
     , TO_CHAR(TO_DATE(TUR.TALK_DIST_DT,'YYYYMMDDHH24MISS'), 'YYYY/MM/DD HH24:MI:SS') AS TALK_DIST_DT
     , TO_CHAR(TO_DATE(TUR.TALK_READ_DT,'YYYYMMDDHH24MISS'), 'YYYY/MM/DD HH24:MI:SS') AS TALK_READ_DT
     , TUR.TALK_READY_CD AS CUTT_STTS_CD
     , (SELECT CD_NM FROM PLT_COMN_CD WHERE GROUP_CD  ='TALK001' AND CD = TUR.TALK_READY_CD) AS TALK_STAT_NM
     , Z.CONTENT  AS TALK_TITLE
     , COALESCE(C.CUSTOMER_NM, '알수없음') AS CUSTOMER_NM
     , COALESCE(C.CUSTOMER_ID, TUR.CUST_ID) AS CUSTOMER_ID
     , '' AS TALK_TYPE
     , '' AS TALK_START_DT
     , '' AS CUTT_END_DT
     , (SELECT TO_CHAR(TRUNC( (SELECT CAST(TO_CHAR(NOW() - TO_DATE(TUR.TALK_READ_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) /3600),'FM9900') || ':' ||  
               TO_CHAR(TRUNC(MOD( (SELECT CAST(TO_CHAR(NOW() - TO_DATE(TUR.TALK_READ_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,3600)/60),'FM00') || ':' ||  
               TO_CHAR(MOD( (SELECT CAST(TO_CHAR(NOW() - TO_DATE(TUR.TALK_READ_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,60),'FM00') AS WAIT_TIME
          
       ) AS WAIT_TIME
     , TUR.ORDER_NUMBER
     , ROW_NUMBER() OVER(ORDER BY TUR.TALK_DIST_DT ASC) AS ROW_NUMBER
  FROM PLT_CHT_USER_RDY TUR 
  LEFT OUTER JOIN PLT_CUS C
     ON	TUR.CUST_ID = C.CUST_ID
  LEFT OUTER JOIN PLT_ASP_CUS_CHN CT3 
	 ON CT3.SNDR_KEY=TUR.SNDR_KEY 
  LEFT OUTER JOIN
	   (	                
          SELECT A.CUST_ID
               , A.CONTENT
            FROM PLT_CHT_USER_RDY_DTL A
                  INNER JOIN (
  		                      SELECT CUST_ID
		                           , MAX(REG_DT) AS REG_DT
      		                    FROM PLT_CHT_USER_RDY_DTL
		                       WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
		                         AND TALK_API_CD = '/message'
		                         AND TYPE = 'text'
		                       GROUP BY CUST_ID
                        ) B
                     ON A.CUST_ID = B.CUST_ID
                    AND A.REG_DT = B.REG_DT
           WHERE #{CUSTCO_ID} LIKE ('%' || A.CUSTCO_ID || '%')
             AND A.TALK_API_CD = '/message'
             AND A.MSG_TYPE_CD = 'text'
       ) Z
    ON TUR.CUST_ID = Z.CUST_ID
 WHERE #{CUSTCO_ID} LIKE ('%' || TUR.CUSTCO_ID || '%')
    AND TUR.USER_ID = #{USER_ID}
<if test="SNDR_KEY_NM !='' and SNDR_KEY_NM != null">
   AND CT3.DSPTCH_PRF_NM = #{SNDR_KEY_NM}
</if>
<if test="CNSL_DT_FROM !='' and CNSL_DT_FROM != null">
<![CDATA[
   AND TUR.TALK_DIST_DT >= #{CNSL_DT_FROM} || '000000'
]]>
</if>
<if test="CNSL_DT_TO !='' and CNSL_DT_TO != null">
<![CDATA[
   AND TUR.TALK_DIST_DT <= #{CNSL_DT_TO} || '235959'
]]>
</if>
<if test="CUTT_STTS_CD !='' and CUTT_STTS_CD != null">
   AND TUR.TALK_READY_CD = #{CUTT_STTS_CD}
</if>
<if test="CUTT_STTS_CD_ALL !='' and CUTT_STTS_CD_ALL != null">
   AND TUR.TALK_READY_CD  IN  (SELECT CD FROM PLT_COMN_CD WHERE GROUP_CD ='TALK001' AND ETC_INFO01 = #{CUTT_STTS_CD_ALL})
</if>
 /* ORDER BY TUR.TALK_DIST_DT ASC */
</select>

    
<!-- 상담이력 리스트 정보를 조회한다.(상담톡 메인에서 사용) -->
<!-- 20190910 HYG :: 상담메인 - 상담이력, 상담메인 - 상담완료목록에서 상담이력관리 화면과 맞게 상담종료일시, 상담소요시간, 총소요시간 수정 -->
<select id="selectRtnTalkSearch"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
SELECT DD.YYYYMMDD
     , DD.WORK_TIME_FROM
     , DD.WORK_TIME_TO
     , DD.WORK_START
     , DD.WORK_END
     
     , CC.CUST_ID
     , COALESCE(
              (SELECT CUSTOMER_NM
                 FROM PLT_CUS
                WHERE 1 = 1
                  AND CUST_ID = CC.CUST_ID
               ) 
            , '알수없음'
              )
    AS CUSTOMER_NM
     , CC.TALK_QST 
    AS TALK_TITLE
     , (SELECT CD_NM FROM PLT_COMN_CD WHERE GROUP_CD = 'TALK001' AND CD = CC.CUTT_STTS_CD AND CD_TYPE = '1') 
    AS TALK_STAT_NM
     , (SELECT CD_NM FROM PLT_COMN_CD WHERE GROUP_CD = 'TALK005' AND CD = CC.CNSL_RST_CD AND CD_TYPE = '1')
    AS CNSL_RST_NM
     , COALESCE((SELECT CNSL_TYP_NM FROM PLT_CHT_CUTT_TYP WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER AND CNSL_TYP_CD = CC.CNSL_TYP_CD AND CNSL_TYP_DIV_CD = '1'), ' ')
            || ' > '
            || COALESCE((SELECT CNSL_TYP_NM FROM PLT_CHT_CUTT_TYP WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER AND CNSL_TYP_CD = CC.CNSL_TYP_CD_2 AND CNSL_TYP_DIV_CD = '2'), ' ')
            || ' > '
            || COALESCE((SELECT CNSL_TYP_NM FROM PLT_CHT_CUTT_TYP WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER AND CNSL_TYP_CD = CC.CNSL_TYP_CD_3 AND CNSL_TYP_DIV_CD = '3'), ' ')
            || ' > '
            || COALESCE((SELECT CNSL_TYP_NM FROM PLT_CHT_CUTT_TYP WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER AND CNSL_TYP_CD = CC.CNSL_TYP_CD_4 AND CNSL_TYP_DIV_CD = '4'), ' ')
    AS TALK_TYPE
     , TO_CHAR(TO_DATE(CC.TALK_DIST_DT,'YYYYMMDDHH24MISS'),'YYYY/MM/DD HH24:MI:SS')
    AS TALK_DIST_DT
     , TO_CHAR(TO_DATE(CC.TALK_START_DT,'YYYYMMDDHH24MISS'),'YYYY/MM/DD HH24:MI:SS')
    AS TALK_START_DT
     , CASE WHEN CC.AFTPRCS_REG_DT IS NULL AND (CC.CUTT_END_DT IS NULL OR CC.CUTT_END_DT = '')
     	THEN NULL 
    	ELSE TO_CHAR(TO_DATE( COALESCE( CC.AFTPRCS_REG_DT, CC.CUTT_END_DT)  ,'YYYYMMDDHH24MISS') , 'YYYY/MM/DD HH24:MI:SS')       
    	END
    	AS CUTT_END_DT
     , CASE WHEN (CC.AFTPRCS_REG_DT IS NULL AND (CC.CUTT_END_DT IS NULL OR CC.CUTT_END_DT = ''))
             OR CC.TALK_START_DT IS NULL
             OR CC.CUTT_STTS_CD NOT IN ('14','20','21')
            THEN NULL
            ELSE (SELECT TO_CHAR(TRUNC( (SELECT CAST(TO_CHAR(TO_DATE(CC.CUTT_END_DT, 'YYYYMMDDHH24MISS') - TO_DATE(CC.TALK_START_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) /3600),'FM9900') || ':' ||  
                         TO_CHAR(TRUNC(MOD( (SELECT CAST(TO_CHAR(TO_DATE(CC.CUTT_END_DT, 'YYYYMMDDHH24MISS') - TO_DATE(CC.TALK_START_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,3600)/60),'FM00') || ':' ||  
                         TO_CHAR(MOD( (SELECT CAST(TO_CHAR(TO_DATE(CC.CUTT_END_DT, 'YYYYMMDDHH24MISS') - TO_DATE(CC.TALK_START_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,60),'FM00') AS WAIT_TIME
                    
                 )
        END
     AS TALK_TIME
     , CASE WHEN CC.CUTT_END_DT IS NULL
             OR CC.TALK_START_DT IS NULL
             OR CC.CUTT_STTS_CD NOT IN ('14','21')
            THEN NULL
            ELSE (SELECT TO_CHAR(TRUNC( (SELECT CAST(TO_CHAR(TO_DATE(CC.CUTT_END_DT, 'YYYYMMDDHH24MISS') - TO_DATE(CC.TALK_START_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) /3600),'FM9900') || ':' ||  
                         TO_CHAR(TRUNC(MOD( (SELECT CAST(TO_CHAR(TO_DATE(CC.CUTT_END_DT, 'YYYYMMDDHH24MISS') - TO_DATE(CC.TALK_START_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,3600)/60),'FM00') || ':' ||  
                         TO_CHAR(MOD( (SELECT CAST(TO_CHAR(TO_DATE(CC.CUTT_END_DT, 'YYYYMMDDHH24MISS') - TO_DATE(CC.TALK_START_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,60),'FM00') AS WAIT_TIME
                    
                 )
        END
     AS TOTAL_TALK_TIME
  FROM (
                SELECT AA.YYYYMMDD
                     , BB.WORK_TIME_FROM
                     , BB.WORK_TIME_TO
                     , AA.YYYYMMDD
                            || BB.WORK_TIME_FROM
                            || '00'
                		       AS WORK_START
                     , CASE WHEN BB.WORK_TIME_FROM
                                      > BB.WORK_TIME_TO
                                   THEN TO_CHAR(TO_DATE(AA.YYYYMMDD, 'YYYYMMDD') + 1, 'YYYYMMDD')
                                   ELSE AA.YYYYMMDD
                               END
                            || BB.WORK_TIME_TO
                            || '00'
                               AS WORK_END
                  FROM (
						SELECT YYYYMMDD 
						  FROM PLT_CAL
                       	 WHERE YYYYMMDD BETWEEN #{SEARCH_FROM}  AND #{SEARCH_TO}
                        ) AA
        		  JOIN PLT_CHT_WRK_TIME_HST BB
                    ON AA.YYYYMMDD BETWEEN BB.MANAGE_DATE_FROM
                                       AND BB.MANAGE_DATE_TO
                 WHERE #{CUSTCO_ID} LIKE ('%' || BB.CUSTCO_ID || '%')
                   AND BB.USE_YN = 'Y'
        ) DD
<![CDATA[
          JOIN PLT_CHT_CUTT CC
            ON ((    DD.WORK_START <= CC.TALK_DIST_DT
                 AND                  CC.TALK_DIST_DT < DD.WORK_END
                 )
]]>
           AND #{CUSTCO_ID} LIKE ('%' || CC.CUSTCO_ID || '%')
           AND CC.CUTT_STTS_CD IN ('80'
                                 , '82'
                                 , '90'
                                 , '81'
                                 , '83'
                                 , '91'
                                 , '92'
                                 , '20'
                                 , '21'
                                 , '14'
                                 , '93'
                                   )
           AND CC.USER_ID = #{USER_ID}
		<if test="CNSL_RST_CD !=''">
           AND CC.CNSL_RST_CD = #{CNSL_RST_CD}
		</if>
                )
         ORDER BY CC.TALK_DIST_DT
</select>

<select id="selectRtnTalkSearch_back"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
SELECT TC.CHT_CUTT_ID
     , TC.CUST_ID
     , TC.SNDR_KEY
     , CT3.DSPTCH_PRF_NM                  												 AS SNDR_KEY_NM
     , TO_CHAR(TO_DATE(TALK_DIST_DT,'YYYYMMDDHH24MISS'),'YYYY/MM/DD HH24:MI:SS')         AS TALK_DIST_DT
     , TO_CHAR(TO_DATE(TALK_READ_DT,'YYYYMMDDHH24MISS'),'YYYY/MM/DD HH24:MI:SS')         AS TALK_READ_DT
     , TC.CUTT_STTS_CD                                                                   AS CUTT_STTS_CD       -- 처리상태
     , TC.CNSL_RST_CD                                                                    AS CNSL_RST_CD        -- 상담결과코드
     , CT2.CD_NM                              											 AS CNSL_RST_NM        -- 상담결과
     , (SELECT CD_NM FROM PLT_COMN_CD WHERE GROUP_CD  ='TALK001' AND CD = TC.CUTT_STTS_CD) AS TALK_STAT_NM
     , TC.TALK_QST AS TALK_TITLE
     , COALESCE(C.CUSTOMER_NM, '알수없음') AS CUSTOMER_NM
     , COALESCE(C.CUSTOMER_ID, TC.CUST_ID)											AS CUSTOMER_ID
     , CNSL_TYP.TYP_NM AS TALK_TYPE
     , TO_CHAR(TO_DATE(TC.TALK_START_DT,'YYYYMMDDHH24MISS'),'YYYY/MM/DD HH24:MI:SS')     AS TALK_START_DT
     , CASE TC.CUTT_END_DT WHEN '' THEN NULL ELSE TO_CHAR(TO_DATE(TC.CUTT_END_DT,'YYYYMMDDHH24MISS'),'YYYY/MM/DD HH24:MI:SS') END       AS CUTT_END_DT
     , (SELECT TO_CHAR(TRUNC( (SELECT CAST(TO_CHAR(TO_DATE(TC.TALK_START_DT, 'YYYYMMDDHH24MISS') - TO_DATE(TC.TALK_READ_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) /3600),'FM9900') || ':' ||  
               TO_CHAR(TRUNC(MOD( (SELECT CAST(TO_CHAR(TO_DATE(TC.TALK_START_DT, 'YYYYMMDDHH24MISS') - TO_DATE(TC.TALK_READ_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,3600)/60),'FM00') || ':' ||  
               TO_CHAR(MOD( (SELECT CAST(TO_CHAR(TO_DATE(TC.TALK_START_DT, 'YYYYMMDDHH24MISS') - TO_DATE(TC.TALK_READ_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,60),'FM00') AS WAIT_TIME
          
       ) AS WAIT_TIME
     , (SELECT TO_CHAR(TRUNC( (SELECT CAST(TO_CHAR(NOW() - TO_DATE(TC.TALK_START_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) /3600),'FM9900') || ':' ||  
               TO_CHAR(TRUNC(MOD( (SELECT CAST(TO_CHAR(NOW() - TO_DATE(TC.TALK_START_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,3600)/60),'FM00') || ':' ||  
               TO_CHAR(MOD( (SELECT CAST(TO_CHAR(NOW() - TO_DATE(TC.TALK_START_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,60),'FM00') AS WAIT_TIME
          
       ) AS PAST_TIME
     , ROW_NUMBER() OVER(ORDER BY TALK_DIST_DT ASC) AS ROW_NUMBER
     , CASE WHEN TC.CUTT_END_DT IS NULL OR TC.TALK_START_DT IS NULL THEN ''
            ELSE FLOOR( TO_DATE( TC.CUTT_END_DT, 'YYYYMMDDHH24MISS') - TO_DATE( TC.TALK_START_DT, 'YYYYMMDDHH24MISS'))
                 || '일 ' || (SELECT TO_CHAR(TRUNC( (SELECT CAST(TO_CHAR(TO_DATE(TC.CUTT_END_DT,'YYYYMMDDHH24MISS') - TO_DATE(TC.TALK_START_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) /3600),'FM9900') || ':' ||  
                                    TO_CHAR(TRUNC(MOD( (SELECT CAST(TO_CHAR(TO_DATE(TC.CUTT_END_DT,'YYYYMMDDHH24MISS') - TO_DATE(TC.TALK_START_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,3600)/60),'FM00') || ':' ||  
                                    TO_CHAR(MOD( (SELECT CAST(TO_CHAR(TO_DATE(TC.CUTT_END_DT,'YYYYMMDDHH24MISS') - TO_DATE(TC.TALK_START_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,60),'FM00') AS WAIT_TIME
                                
                            )
       END                                                                                AS TALK_TIME
     , CASE WHEN TC.CUTT_END_DT IS NULL OR TC.TALK_DIST_DT IS NULL THEN ''
            ELSE FLOOR( TO_DATE( TC.CUTT_END_DT, 'YYYYMMDDHH24MISS') - TO_DATE( TC.TALK_DIST_DT, 'YYYYMMDDHH24MISS'))
                 || '일 ' || (SELECT TO_CHAR(TRUNC( (SELECT CAST(TO_CHAR(TO_DATE(TC.CUTT_END_DT,'YYYYMMDDHH24MISS') - TO_DATE(TC.TALK_DIST_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) /3600),'FM9900') || ':' ||  
                                    TO_CHAR(TRUNC(MOD( (SELECT CAST(TO_CHAR(TO_DATE(TC.CUTT_END_DT,'YYYYMMDDHH24MISS') - TO_DATE(TC.TALK_DIST_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,3600)/60),'FM00') || ':' ||  
                                    TO_CHAR(MOD( (SELECT CAST(TO_CHAR(TO_DATE(TC.CUTT_END_DT,'YYYYMMDDHH24MISS') - TO_DATE(TC.TALK_DIST_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,60),'FM00') AS WAIT_TIME
                                
                            )
       END																				  AS TOTAL_TALK_TIME
     , TC.ORDER_NUMBER
     , COALESCE(C.MEMBER_YN, 'N') AS MEMBER_YN
     , COALESCE(C.CUSTOMER_SEQ,0) AS CUSTOMER_SEQ
  FROM PLT_CHT_CUTT TC 
  LEFT OUTER JOIN PLT_CUS C
 	ON TC.CUST_ID = C.CUST_ID
  LEFT OUTER JOIN PLT_ASP_CUS_CHN CT3 
	ON CT3.SNDR_KEY=TC.SNDR_KEY
  LEFT OUTER JOIN PLT_COMN_CD CT2 
	ON CT2.GROUP_CD = 'TALK005' AND CT2.CD=TC.CNSL_RST_CD AND CT2.CD_TYPE  = '1'		
  LEFT OUTER JOIN
  	( 
  		 SELECT DECODE( LEV_1.CNSL_TYP_NM, NULL, '', LEV_1.CNSL_TYP_NM || ' > ')
                       || DECODE( LEV_2.CNSL_TYP_NM, NULL, '', LEV_2.CNSL_TYP_NM || ' > ')
                       || DECODE( LEV_3.CNSL_TYP_NM, NULL, '', LEV_3.CNSL_TYP_NM || ' > ')
                       || LEV_4.CNSL_TYP_NM
                AS TYP_NM
  		 	  , LEV_4.CNSL_TYP_CD
		  FROM PLT_CHT_CUTT_TYP LEV_4
			 LEFT JOIN PLT_CHT_CUTT_TYP LEV_3  
				ON LEV_3.CNSL_TYP_CD = LEV_4.SPST_CNSL_TYP_CD
				AND #{CUSTCO_ID} LIKE ('%' || LEV_3.CUSTCO_ID || '%')
             LEFT JOIN PLT_CHT_CUTT_TYP LEV_2  
				ON LEV_2.CNSL_TYP_CD = LEV_3.SPST_CNSL_TYP_CD
				AND #{CUSTCO_ID} LIKE ('%' || LEV_2.CUSTCO_ID || '%')
             LEFT JOIN PLT_CHT_CUTT_TYP LEV_1  
				ON LEV_1.CNSL_TYP_CD = LEV_2.SPST_CNSL_TYP_CD
				AND #{CUSTCO_ID} LIKE ('%' || LEV_1.CUSTCO_ID || '%')
		 WHERE #{CUSTCO_ID} LIKE ('%' || LEV_4.CUSTCO_ID || '%')
  	) CNSL_TYP
  	ON CNSL_TYP.CNSL_TYP_CD = DECODE(TC.CNSL_TYP_CD_4, NULL, TC.CNSL_TYP_CD_3, TC.CNSL_TYP_CD_4)
  WHERE #{CUSTCO_ID} LIKE ('%' || TC.CUSTCO_ID || '%')
  AND TC.USER_ID = #{USER_ID}
<if test="SNDR_KEY_NM !='' and SNDR_KEY_NM != null">
   AND CT3.SNDR_KEY_NM LIKE '%' || #{SNDR_KEY_NM} || '%'
</if>
<if test="CNSL_DT_FROM !='' and CNSL_DT_FROM != null">
<![CDATA[
   AND TC.TALK_START_DT >= #{CNSL_DT_FROM} || '000000'
]]>
</if>
<if test="CNSL_DT_TO !='' and CNSL_DT_TO != null">
<![CDATA[
   AND TC.TALK_START_DT <= #{CNSL_DT_TO} || '235959'
]]>
</if>
<if test="TALK_TITLE !='' and TALK_TITLE != null">
   AND TC.TALK_TITLE    LIKE '%' || #{TALK_TITLE} || '%'
</if>
<if test="TALK_USER_NM !='' and TALK_USER_NM != null">
   AND C.TALK_USER_NM    LIKE '%' || #{TALK_USER_NM} || '%'
</if>
<if test="CUSTOMER_ID !='' and CUSTOMER_ID != null">
   AND TC.CUST_ID    LIKE '%' || #{CUSTOMER_ID} || '%'
</if>
<if test="CNSL_RST_CD !='' and CNSL_RST_CD != null">
   AND TC.CNSL_RST_CD  = #{CNSL_RST_CD}
</if>
<if test="CUTT_STTS_CD !='' and CUTT_STTS_CD != null">
   AND TC.CUTT_STTS_CD  = #{CUTT_STTS_CD}
</if>
<if test="CUTT_STTS_CD_ALL !='' and CUTT_STTS_CD_ALL != null">
   AND TC.CUTT_STTS_CD  IN  (SELECT CD FROM PLT_COMN_CD WHERE GROUP_CD ='TALK001' AND ETC_INFO01 = #{CUTT_STTS_CD_ALL})
</if>
/* ORDER BY TALK_DIST_DT */
</select>

<!-- 상담이력 리스트 정보를 조회한다.(상담톡 메인에서 사용) -->
<!-- 20190910 HYG :: 상담메인 - 상담이력, 상담메인 - 상담완료목록에서 상담이력관리 화면과 맞게 상담종료일시, 상담소요시간, 총소요시간 수정 -->
<select id="selectRtnTalkSearch4"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
SELECT DD.YYYYMMDD
     , DD.WORK_TIME_FROM
     , DD.WORK_TIME_TO
     , DD.WORK_START
     , DD.WORK_END
     
     , CC.USER_ID
     , (SELECT USER_NM FROM PLT_USER WHERE USER_ID = CC.USER_ID)
    AS USER_NM
     , CC.TALK_QST 
    AS TALK_TITLE
     , (SELECT CD_NM FROM PLT_COMN_CD WHERE GROUP_CD = 'TALK001' AND CD = CC.CUTT_STTS_CD AND CD_TYPE = '1') 
    AS TALK_STAT_NM
     , (SELECT CD_NM FROM PLT_COMN_CD WHERE GROUP_CD = 'TALK005' AND CD = CC.CNSL_RST_CD AND CD_TYPE = '1')
    AS CNSL_RST_NM
     , COALESCE((SELECT CNSL_TYP_NM FROM PLT_CHT_CUTT_TYP WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER AND CNSL_TYP_CD = CC.CNSL_TYP_CD AND CNSL_TYP_DIV_CD = '1'), ' ')
            || ' > '
            || COALESCE((SELECT CNSL_TYP_NM FROM PLT_CHT_CUTT_TYP WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER AND CNSL_TYP_CD = CC.CNSL_TYP_CD_2 AND CNSL_TYP_DIV_CD = '2'), ' ')
            || ' > '
            || COALESCE((SELECT CNSL_TYP_NM FROM PLT_CHT_CUTT_TYP WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER AND CNSL_TYP_CD = CC.CNSL_TYP_CD_3 AND CNSL_TYP_DIV_CD = '3'), ' ')
            || ' > '
            || COALESCE((SELECT CNSL_TYP_NM FROM PLT_CHT_CUTT_TYP WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER AND CNSL_TYP_CD = CC.CNSL_TYP_CD_4 AND CNSL_TYP_DIV_CD = '4'), ' ')
    AS TALK_TYPE
     , TO_CHAR(TO_DATE(CC.TALK_DIST_DT,'YYYYMMDDHH24MISS'),'YYYY/MM/DD HH24:MI:SS')
    AS TALK_DIST_DT
     , TO_CHAR(TO_DATE(CC.TALK_START_DT,'YYYYMMDDHH24MISS'),'YYYY/MM/DD HH24:MI:SS')
    AS TALK_START_DT
     , CASE WHEN CC.AFTPRCS_REG_DT IS NULL AND (CC.CUTT_END_DT IS NULL OR CC.CUTT_END_DT = '')
     THEN NULL
     ELSE TO_CHAR(TO_DATE(COALESCE(CC.AFTPRCS_REG_DT, CC.CUTT_END_DT)  ,'YYYYMMDDHH24MISS'),'YYYY/MM/DD HH24:MI:SS')       
     END       
    AS CUTT_END_DT
     , CASE WHEN (CC.AFTPRCS_REG_DT IS NULL AND (CC.CUTT_END_DT IS NULL OR CC.CUTT_END_DT = ''))
             OR CC.TALK_START_DT IS NULL
            THEN NULL
            ELSE (SELECT TO_CHAR(TRUNC( (SELECT CAST(TO_CHAR(TO_DATE(COALESCE(CC.AFTPRCS_REG_DT, CC.CUTT_END_DT), 'YYYYMMDDHH24MISS') - TO_DATE(CC.TALK_START_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) /3600),'FM9900') || ':' ||  
                         TO_CHAR(TRUNC(MOD( (SELECT CAST(TO_CHAR(TO_DATE(COALESCE(CC.AFTPRCS_REG_DT, CC.CUTT_END_DT), 'YYYYMMDDHH24MISS') - TO_DATE(CC.TALK_START_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,3600)/60),'FM00') || ':' ||  
                         TO_CHAR(MOD( (SELECT CAST(TO_CHAR(TO_DATE(COALESCE(CC.AFTPRCS_REG_DT, CC.CUTT_END_DT), 'YYYYMMDDHH24MISS') - TO_DATE(CC.TALK_START_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,60),'FM00') AS WAIT_TIME
                    
                 )
        END
     AS TALK_TIME
     , CASE WHEN CC.CUTT_END_DT IS NULL
             OR CC.TALK_START_DT IS NULL
            THEN NULL
            ELSE (SELECT TO_CHAR(TRUNC( (SELECT CAST(TO_CHAR(TO_DATE(CC.CUTT_END_DT, 'YYYYMMDDHH24MISS') - TO_DATE(CC.TALK_START_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) /3600),'FM9900') || ':' ||  
                         TO_CHAR(TRUNC(MOD( (SELECT CAST(TO_CHAR(TO_DATE(CC.CUTT_END_DT, 'YYYYMMDDHH24MISS') - TO_DATE(CC.TALK_START_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,3600)/60),'FM00') || ':' ||  
                         TO_CHAR(MOD( (SELECT CAST(TO_CHAR(TO_DATE(CC.CUTT_END_DT, 'YYYYMMDDHH24MISS') - TO_DATE(CC.TALK_START_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,60),'FM00') AS WAIT_TIME
                    
                 )
        END
     AS TOTAL_TALK_TIME
     , CC.CHT_CUTT_ID
     , CC.CUST_ID
     , CC.CUTT_STTS_CD
     , CC.CUSTOMER_ID
     , COALESCE(
              (SELECT CUSTOMER_NM
                 FROM PLT_CUS
                WHERE 1 = 1
                  AND CUST_ID = CC.CUST_ID
               ) 
            , '알수없음'
              )
    AS CUSTOMER_NM
  FROM (
                SELECT AA.YYYYMMDD
                     , BB.WORK_TIME_FROM
                     , BB.WORK_TIME_TO
                     , AA.YYYYMMDD
                            || BB.WORK_TIME_FROM
                            || '00'
                		      AS WORK_START
                     , CASE WHEN BB.WORK_TIME_FROM
                                      > BB.WORK_TIME_TO
                                   THEN TO_CHAR( TO_DATE(AA.YYYYMMDD, 'YYYYMMDD') + 1
                                                  , 'YYYYMMDD'
                                                    )
                                   ELSE AA.YYYYMMDD
                               END
                            || BB.WORK_TIME_TO
                            || '00'
                               AS WORK_END
                  FROM (
						SELECT YYYYMMDD 
						  FROM PLT_CAL
                       	 WHERE YYYYMMDD BETWEEN #{SEARCH_FROM}  AND #{SEARCH_TO}
                        ) AA
        		  JOIN PLT_CHT_WRK_TIME_HST BB
                    ON AA.YYYYMMDD BETWEEN BB.MANAGE_DATE_FROM
                                       AND BB.MANAGE_DATE_TO
                 WHERE #{CUSTCO_ID} LIKE ('%' || BB.CUSTCO_ID || '%')
                   AND BB.USE_YN = 'Y'
        ) DD
<![CDATA[
          JOIN PLT_CHT_CUTT CC
            ON ((    DD.WORK_START <= CC.TALK_DIST_DT
                 AND                  CC.TALK_DIST_DT < DD.WORK_END
                 )
]]>
           AND #{CUSTCO_ID} LIKE ('%' || CC.CUSTCO_ID || '%')
           AND CC.CUTT_STTS_CD IN ('80'
                                 , '82'
                                 , '90'
                                 , '81'
                                 , '83'
                                 , '91'
                                 , '92'
                                 , 'ING'
                                 , '20'
                                 , '21'
                                 , '14'
                                 , '93'
                                   )
           AND CC.CUTT_STTS_CD = '21'
           AND CC.CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
                )
         ORDER BY CC.TALK_DIST_DT DESC
</select>
<select id="selectRtnTalkSearch4_back"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
	SELECT 
		TC.CHT_CUTT_ID
	     , TC.CUST_ID
	     , TC.SNDR_KEY
	     , TC.USER_ID
	     , USR.USER_NM                                       								 AS USER_NM
	     , (SELECT DSPTCH_PRF_NM FROM PLT_ASP_CUS_CHN CT WHERE CT.SNDR_KEY=TC.SNDR_KEY) AS SNDR_KEY_NM
	     , TO_CHAR(TO_DATE(TALK_DIST_DT,'YYYYMMDDHH24MISS'),'YYYY/MM/DD HH24:MI:SS')         AS TALK_DIST_DT
	     , TO_CHAR(TO_DATE(TALK_READ_DT,'YYYYMMDDHH24MISS'),'YYYY/MM/DD HH24:MI:SS')         AS TALK_READ_DT
	     , TC.CUTT_STTS_CD                                                                   AS CUTT_STTS_CD       -- 처리결과코드
	     , TC.CNSL_RST_CD                                                                    AS CNSL_RST_CD        -- 상담결과코드
         , (SELECT CD_NM FROM PLT_COMN_CD CT WHERE CT.GROUP_CD = 'TALK005' AND CT.CD=TC.CNSL_RST_CD AND CT.CD_TYPE  = '1') AS CNSL_RST_NM        -- 상담결과명
	     , (SELECT CD_NM FROM PLT_COMN_CD WHERE GROUP_CD  ='TALK001' AND CD = TC.CUTT_STTS_CD) AS TALK_STAT_NM
	     , TC.TALK_QST AS TALK_TITLE
	     , TC.TALK_ANS AS TALK_CONTENT
	     , COALESCE(C.CUSTOMER_NM, '알수없음') AS CUSTOMER_NM
	     , COALESCE(C.CUSTOMER_ID, TC.CUST_ID)                                                     AS CUSTOMER_ID
	     , CNSL_TYP.TYP_NM AS TALK_TYPE
	     , TO_CHAR(TO_DATE(TC.TALK_START_DT,'YYYYMMDDHH24MISS'),'YYYY/MM/DD HH24:MI:SS')AS TALK_START_DT
	     , TO_CHAR(TO_DATE(TC.CUTT_END_DT,'YYYYMMDDHH24MISS'),'YYYY/MM/DD HH24:MI:SS')  AS CUTT_END_DT
	     , CASE WHEN TC.CUTT_END_DT IS NULL OR TC.TALK_START_DT IS NULL THEN ''
	            ELSE FLOOR( TO_DATE( TC.CUTT_END_DT, 'YYYYMMDDHH24MISS') - TO_DATE( TC.TALK_START_DT, 'YYYYMMDDHH24MISS'))
	                 || '일 ' || (SELECT TO_CHAR(TRUNC( (SELECT CAST(TO_CHAR(TO_DATE(TC.CUTT_END_DT,'YYYYMMDDHH24MISS') - TO_DATE(TC.TALK_START_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) /3600),'FM9900') || ':' ||  
                                        TO_CHAR(TRUNC(MOD( (SELECT CAST(TO_CHAR(TO_DATE(TC.CUTT_END_DT,'YYYYMMDDHH24MISS') - TO_DATE(TC.TALK_START_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,3600)/60),'FM00') || ':' ||  
                                        TO_CHAR(MOD( (SELECT CAST(TO_CHAR(TO_DATE(TC.CUTT_END_DT,'YYYYMMDDHH24MISS') - TO_DATE(TC.TALK_START_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,60),'FM00') AS WAIT_TIME
                                    
                                )
	       END                                                                               AS TALK_TIME
	     , CASE WHEN TC.CUTT_END_DT IS NULL OR TC.TALK_DIST_DT IS NULL THEN ''
	            ELSE FLOOR( TO_DATE( TC.CUTT_END_DT, 'YYYYMMDDHH24MISS') - TO_DATE( TC.TALK_DIST_DT, 'YYYYMMDDHH24MISS'))
	                 || '일 ' || (SELECT TO_CHAR(TRUNC( (SELECT CAST(TO_CHAR(TO_DATE(TC.CUTT_END_DT,'YYYYMMDDHH24MISS') - TO_DATE(TC.TALK_DIST_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) /3600),'FM9900') || ':' ||  
                                        TO_CHAR(TRUNC(MOD( (SELECT CAST(TO_CHAR(TO_DATE(TC.CUTT_END_DT,'YYYYMMDDHH24MISS') - TO_DATE(TC.TALK_DIST_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,3600)/60),'FM00') || ':' ||  
                                        TO_CHAR(MOD( (SELECT CAST(TO_CHAR(TO_DATE(TC.CUTT_END_DT,'YYYYMMDDHH24MISS') - TO_DATE(TC.TALK_DIST_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,60),'FM00') AS WAIT_TIME
                                    
                                )
	       END                                                                               AS TOTAL_TALK_TIME
	     , CASE WHEN TC.CUTT_STTS_CD IN ('ING','20')   -- 상담중, 후처리대기
	            THEN '00'                                                                                           
	            ELSE '11'                                                                                           
	       END                                                                               AS CONTENT_VIEW
		 , (SELECT TO_CHAR(TRUNC( (SELECT CAST(TO_CHAR(TO_DATE(TC.TALK_START_DT,'YYYYMMDDHH24MISS') - TO_DATE(TC.TALK_DIST_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) /3600),'FM9900') || ':' ||  
                   TO_CHAR(TRUNC(MOD( (SELECT CAST(TO_CHAR(TO_DATE(TC.TALK_START_DT,'YYYYMMDDHH24MISS') - TO_DATE(TC.TALK_DIST_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,3600)/60),'FM00') || ':' ||  
                   TO_CHAR(MOD( (SELECT CAST(TO_CHAR(TO_DATE(TC.TALK_START_DT,'YYYYMMDDHH24MISS') - TO_DATE(TC.TALK_DIST_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,60),'FM00') AS WAIT_TIME
              
           ) AS TALK_STANDBY_DT
		 
	     , ROW_NUMBER() OVER(ORDER BY TC.TALK_DIST_DT DESC)                                  AS ROW_NUMBER
	     , TC.ORDER_NUMBER
	  FROM PLT_CHT_CUTT TC
	  LEFT OUTER JOIN  PLT_CUS C
			ON TC.CUST_ID = C.CUST_ID
	  LEFT OUTER JOIN PLT_USER USR
	  		ON TC.USER_ID = USR.USER_ID		
	  LEFT OUTER JOIN
	  	( 
	  		 SELECT DECODE( LEV_1.CNSL_TYP_NM, NULL, '', LEV_1.CNSL_TYP_NM || ' > ')
                       || DECODE( LEV_2.CNSL_TYP_NM, NULL, '', LEV_2.CNSL_TYP_NM || ' > ')
                       || DECODE( LEV_3.CNSL_TYP_NM, NULL, '', LEV_3.CNSL_TYP_NM || ' > ')
                       || LEV_4.CNSL_TYP_NM
                AS TYP_NM
	  		 	  , LEV_4.CNSL_TYP_CD
			  FROM PLT_CHT_CUTT_TYP LEV_4
				 LEFT JOIN PLT_CHT_CUTT_TYP LEV_3  
					ON LEV_3.CNSL_TYP_CD = LEV_4.SPST_CNSL_TYP_CD
					AND #{CUSTCO_ID} LIKE ('%' || LEV_3.CUSTCO_ID || '%')
	             LEFT JOIN PLT_CHT_CUTT_TYP LEV_2  
					ON LEV_2.CNSL_TYP_CD = LEV_3.SPST_CNSL_TYP_CD
					AND #{CUSTCO_ID} LIKE ('%' || LEV_2.CUSTCO_ID || '%')
	             LEFT JOIN PLT_CHT_CUTT_TYP LEV_1  
					ON LEV_1.CNSL_TYP_CD = LEV_2.SPST_CNSL_TYP_CD  
					AND #{CUSTCO_ID} LIKE ('%' || LEV_2.CUSTCO_ID || '%')
			 WHERE #{CUSTCO_ID} LIKE ('%' || LEV_4.CUSTCO_ID || '%')
	  	) CNSL_TYP
	  	ON CNSL_TYP.CNSL_TYP_CD = DECODE(TC.CNSL_TYP_CD_4, NULL, TC.CNSL_TYP_CD_3, TC.CNSL_TYP_CD_4)
	WHERE #{CUSTCO_ID} LIKE ('%' || TC.CUSTCO_ID || '%')
	<if test="CNSL_DT_FROM !='' and CNSL_DT_FROM != null">
	<![CDATA[
	   AND TC.TALK_START_DT >= #{CNSL_DT_FROM} || '000000'
	]]>
	</if>
	<if test="CNSL_DT_TO !='' and CNSL_DT_TO != null">
	<![CDATA[
	   AND TC.TALK_START_DT <= #{CNSL_DT_TO} || '235959'
	]]>
	</if>
	<if test="CHT_CUTT_ID !='' and CHT_CUTT_ID != null">
	   AND TC.CUST_ID IN ( SELECT CUST_ID FROM PLT_CHT_CUTT WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER AND CHT_CUTT_ID = #{CHT_CUTT_ID})
	</if>
	<if test="CUST_ID !='' and CUST_ID != null">
	   AND TC.CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
	</if>
	<!-- 완료목록만 보여주기 위해 주석처리  
	<if test="CUTT_STTS_CD !='' and CUTT_STTS_CD != null">
	   AND TC.CUTT_STTS_CD = #{CUTT_STTS_CD}
	</if>
	-->
	   AND TC.CUTT_STTS_CD = '21'
	 /* ORDER BY TC.TALK_DIST_DT DESC */
</select>

<select id="selectRtnTalkSearch5"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">

SELECT ROW_TBL.*
         , ROW_NUMBER() OVER(
	 <choose>
		<when test="SORT_BY !='' and SORT_BY != null">
			<if test="SORT_BY !='' and SORT_BY == 'TALK_DIST_DT'">
	   			ORDER BY ROW_TBL.TALK_DIST_DT
			</if>
			<if test="SORT_BY !='' and SORT_BY == 'TALK_TITLE'">
	   			ORDER BY ROW_TBL.TALK_TITLE
			</if>
			<if test="SORT_BY !='' and SORT_BY == 'USER_ID'">
	   			ORDER BY ROW_TBL.USER_ID
			</if>
			<choose>
				<when test="DECENDING !='' and DECENDING == 'ASC'">
					ASC
				</when>
				<otherwise>
					DESC
				</otherwise>
			</choose>
		</when>
		<otherwise>
			ORDER BY ROW_TBL.TALK_DIST_DT DESC
		</otherwise>
	</choose>
         ) AS ROW_NUMBER
     FROM ( 	
			SELECT 
				TC.CHT_CUTT_ID
			     , TC.CUST_ID
			     , TC.SNDR_KEY
			     , TC.USER_ID
			     , TC.BOT_CALL_ID
			     , USR.USER_NM                                        								 AS USER_NM
			     , (SELECT DSPTCH_PRF_NM FROM PLT_ASP_CUS_CHN CT WHERE CT.SNDR_KEY=TC.SNDR_KEY) AS SNDR_KEY_NM
			     , TO_CHAR(TO_DATE(TALK_DIST_DT,'YYYYMMDDHH24MISS'),'YYYY/MM/DD HH24:MI:SS')         AS TALK_DIST_DT
			     , TO_CHAR(TO_DATE(TALK_READ_DT,'YYYYMMDDHH24MISS'),'YYYY/MM/DD HH24:MI:SS')         AS TALK_READ_DT
			     , TC.CUTT_STTS_CD
			     , (SELECT CD_NM FROM PLT_COMN_CD WHERE GROUP_CD  ='TALK001' AND CD = TC.CUTT_STTS_CD) AS TALK_STAT_NM
			     , TC.TALK_QST AS TALK_TITLE
			     , TC.TALK_ANS AS TALK_CONTENT
			     , COALESCE(C.CUSTOMER_NM, '알수없음') AS CUSTOMER_NM 
			     , COALESCE(C.CUSTOMER_ID, TC.CUST_ID)                                                         AS CUSTOMER_ID
			     , CNSL_TYP.TYP_NM AS TALK_TYPE
			     , TO_CHAR(TO_DATE(TC.TALK_START_DT,'YYYYMMDDHH24MISS'),'YYYY/MM/DD HH24:MI:SS')AS TALK_START_DT
			     , TO_CHAR(TO_DATE(TC.CUTT_END_DT,'YYYYMMDDHH24MISS'),'YYYY/MM/DD HH24:MI:SS')  AS CUTT_END_DT
			     , CASE WHEN TC.CUTT_END_DT IS NULL OR TC.TALK_START_DT IS NULL THEN ''
			            ELSE FLOOR( TO_DATE( TC.CUTT_END_DT, 'YYYYMMDDHH24MISS') - TO_DATE( TC.TALK_START_DT, 'YYYYMMDDHH24MISS'))
			                 || '일 ' || (SELECT TO_CHAR(TRUNC( (SELECT CAST(TO_CHAR(TO_DATE(TC.CUTT_END_DT,'YYYYMMDDHH24MISS') - TO_DATE(TC.TALK_START_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) /3600),'FM9900') || ':' ||  
                                                TO_CHAR(TRUNC(MOD( (SELECT CAST(TO_CHAR(TO_DATE(TC.CUTT_END_DT,'YYYYMMDDHH24MISS') - TO_DATE(TC.TALK_START_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,3600)/60),'FM00') || ':' ||  
                                                TO_CHAR(MOD( (SELECT CAST(TO_CHAR(TO_DATE(TC.CUTT_END_DT,'YYYYMMDDHH24MISS') - TO_DATE(TC.TALK_START_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,60),'FM00') AS WAIT_TIME
                                            
                                        )
			       END                                                                               AS TALK_TIME
			     , CASE WHEN TC.CUTT_END_DT IS NULL OR TC.TALK_DIST_DT IS NULL THEN ''
			            ELSE FLOOR( TO_DATE( TC.CUTT_END_DT, 'YYYYMMDDHH24MISS') - TO_DATE( TC.TALK_DIST_DT, 'YYYYMMDDHH24MISS'))
			                 || '일 ' || (SELECT TO_CHAR(TRUNC( (SELECT CAST(TO_CHAR(TO_DATE(TC.CUTT_END_DT,'YYYYMMDDHH24MISS') - TO_DATE(TC.TALK_DIST_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) /3600),'FM9900') || ':' ||  
                                                TO_CHAR(TRUNC(MOD( (SELECT CAST(TO_CHAR(TO_DATE(TC.CUTT_END_DT,'YYYYMMDDHH24MISS') - TO_DATE(TC.TALK_DIST_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,3600)/60),'FM00') || ':' ||  
                                                TO_CHAR(MOD( (SELECT CAST(TO_CHAR(TO_DATE(TC.CUTT_END_DT,'YYYYMMDDHH24MISS') - TO_DATE(TC.TALK_DIST_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,60),'FM00') AS WAIT_TIME
                                            
                                        )
			       END                                                                               AS TOTAL_TALK_TIME
			     , CASE WHEN TC.CUTT_STTS_CD IN ('ING','20')   -- 상담중, 후처리대기
			            THEN '00'                                                                                           
			            ELSE '11'                                                                                           
			       END                                                                               AS CONTENT_VIEW
				 , (SELECT TO_CHAR(TRUNC( (SELECT CAST(TO_CHAR(TO_DATE(TC.TALK_START_DT,'YYYYMMDDHH24MISS') - TO_DATE(TC.TALK_DIST_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) /3600),'FM9900') || ':' ||  
                           TO_CHAR(TRUNC(MOD( (SELECT CAST(TO_CHAR(TO_DATE(TC.TALK_START_DT,'YYYYMMDDHH24MISS') - TO_DATE(TC.TALK_DIST_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,3600)/60),'FM00') || ':' ||  
                           TO_CHAR(MOD( (SELECT CAST(TO_CHAR(TO_DATE(TC.TALK_START_DT,'YYYYMMDDHH24MISS') - TO_DATE(TC.TALK_DIST_DT, 'YYYYMMDDHH24MISS')) AS INTEGER) * (24*60*60) AS SEC ) ,60),'FM00') AS WAIT_TIME
                      
                   ) AS TALK_STANDBY_DT
			     , C.UPDATEYN
			     , COALESCE(C.MEMBER_YN, 'N') AS MEMBER_YN
			     , COALESCE(C.CUSTOMER_SEQ, 0) AS CUSTOMER_SEQ
			     , TC.ORDER_NUMBER  AS TALK_ORDER_NUMBER
			  FROM PLT_CHT_CUTT TC
			  LEFT OUTER JOIN  PLT_CUS C
			  		ON TC.CUST_ID = C.CUST_ID
			  LEFT OUTER JOIN PLT_USER USR
	  				ON TC.USER_ID = USR.USER_ID
			  LEFT OUTER JOIN
			  	( 
			  		 SELECT DECODE( LEV_1.CNSL_TYP_NM, NULL, '', LEV_1.CNSL_TYP_NM || ' > ')
			                       || DECODE( LEV_2.CNSL_TYP_NM, NULL, '', LEV_2.CNSL_TYP_NM || ' > ')
			                       || DECODE( LEV_3.CNSL_TYP_NM, NULL, '', LEV_3.CNSL_TYP_NM || ' > ')
			                       || LEV_4.CNSL_TYP_NM
			                AS TYP_NM
			  		 	  , LEV_4.CNSL_TYP_CD
					  FROM PLT_CHT_CUTT_TYP LEV_4
						 LEFT JOIN PLT_CHT_CUTT_TYP LEV_3  
							ON LEV_3.CNSL_TYP_CD = LEV_4.SPST_CNSL_TYP_CD
							AND #{CUSTCO_ID} LIKE ('%' || LEV_3.CUSTCO_ID || '%')
			             LEFT JOIN PLT_CHT_CUTT_TYP LEV_2  
							ON LEV_2.CNSL_TYP_CD = LEV_3.SPST_CNSL_TYP_CD
							AND #{CUSTCO_ID} LIKE ('%' || LEV_2.CUSTCO_ID || '%')
			             LEFT JOIN PLT_CHT_CUTT_TYP LEV_1  
							ON LEV_1.CNSL_TYP_CD = LEV_2.SPST_CNSL_TYP_CD   
							AND #{CUSTCO_ID} LIKE ('%' || LEV_1.CUSTCO_ID || '%')
					 WHERE #{CUSTCO_ID} LIKE ('%' || LEV_4.CUSTCO_ID || '%')
			  	) CNSL_TYP
			  	ON CNSL_TYP.CNSL_TYP_CD = DECODE(TC.CNSL_TYP_CD_4, NULL, TC.CNSL_TYP_CD_3, TC.CNSL_TYP_CD_4)
			 WHERE #{CUSTCO_ID} LIKE ('%' || TC.CUSTCO_ID || '%')
			 
			<if test="CHT_CUTT_ID !='' and CHT_CUTT_ID != null">
			   AND TC.CUST_ID IN ( SELECT CUST_ID FROM PLT_CHT_CUTT WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER AND CHT_CUTT_ID = #{CHT_CUTT_ID})
			</if>
			<if test="CUST_ID !='' and CUST_ID != null">
			   AND TC.CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
			</if>
			<if test="CUTT_STTS_CD !='' and CUTT_STTS_CD != null">
			   AND TC.CUTT_STTS_CD NOT IN (#{CUTT_STTS_CD})
			</if>
			   AND TC.CUTT_STTS_CD IN ('21', '40')
			 <!-- 
			 <choose>
				<when test="SORT_BY !='' and SORT_BY != null">
					
					<if test="SORT_BY !='' and SORT_BY == 'TALK_DIST_DT'">
			   			ORDER BY TALK_DIST_DT
					</if>
					<if test="SORT_BY !='' and SORT_BY == 'TALK_TITLE'">
			   			ORDER BY TALK_TITLE
					</if>
					<if test="SORT_BY !='' and SORT_BY == 'USER_ID'">
			   			ORDER BY USER_ID
					</if>
					
					<choose>
						<when test="DECENDING !='' and DECENDING == 'ASC'">
							ASC
						</when>
						<otherwise>
							DESC
						</otherwise>
					</choose>
				</when>
				<otherwise>
					ORDER BY TC.TALK_DIST_DT DESC
				</otherwise>
			</choose>
			 -->
	) ROW_TBL
			   		 

</select>

<!--
<resultMap id="selectRtnTalkListResultMap" type="java.util.HashMap" >
	<result property="CHT_CUTT_ID"      column="CHT_CUTT_ID"            jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="CUST_ID"        column="CUST_ID"              jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="SNDR_KEY"       column="SNDR_KEY"             jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="SNDR_KEY_NM"    column="SNDR_KEY_NM"          jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="TALK_SERIAL_NUMBER"   column="TALK_SERIAL_NUMBER"         jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="TALK_DIST_DT"         column="TALK_DIST_DT"               jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="TALK_READ_DT"         column="TALK_READ_DT"               jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="CUTT_STTS_CD"         column="CUTT_STTS_CD"               jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="TALK_STAT_NM"         column="TALK_STAT_NM"               jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="TALK_TITLE"           column="TALK_TITLE"                 jdbcType="VARCHAR"         javaType="java.lang.String" typeHandler="ContentCipherTypeHandler"/>
	<result property="CUSTOMER_NM"          column="CUSTOMER_NM"                jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="CUSTOMER_ID"          column="CUSTOMER_ID"                jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="TALK_TYPE"            column="TALK_TYPE"                  jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="TALK_START_DT"        column="TALK_START_DT"              jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="CUTT_END_DT"          column="CUTT_END_DT"                jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="AFTPRCS_REG_DT"         column="AFTPRCS_REG_DT"               jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="TEMP_CONT_STAT_CD"    column="TEMP_CONT_STAT_CD"          jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="UPDATEYN"             column="UPDATEYN"                   jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="ORDER_NUMBER"         column="ORDER_NUMBER"               jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="CUSTOMER_SEQ"         column="CUSTOMER_SEQ"               jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="MEMBER_YN"            column="MEMBER_YN"                  jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="PRCS_RSLT_CD"          column="PRCS_RSLT_CD"                jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="CALLBACK_DELAY_YN"    column="CALLBACK_DELAY_YN"          jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="ORDER_NUM"            column="ORDER_NUM"                  jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="UNREAD_CNT"           column="UNREAD_CNT"                 jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="ATENT_CD"          	column="ATENT_CD"            		jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="ATENT_PRE_PLAN"    	column="ATENT_PRE_PLAN"      		jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="TALK_INQRY_FULL_NM"   column="TALK_INQRY_FULL_NM"         jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="CUSTOMER_PHONE_NO"    column="CUSTOMER_PHONE_NO"          jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="SYS_MSG_SKIP_YN"       column="SYS_MSG_SKIP_YN"             jdbcType="VARCHAR"         javaType="java.lang.String"/>
</resultMap>
-->

<!-- 상담(채팅)목록를 조회한다.(상담톡 메인에서 사용) -->	
<!--
<select id="selectRtnTalkList"  parameterType= "java.util.HashMap" resultMap="selectRtnTalkListResultMap">
-->
<select id="selectRtnTalkList"  parameterType= "java.util.HashMap"  resultType="java.util.HashMap">
<!--	SELECT 		/* selectRtnTalkList - 상담(채팅)목록를 조회 */-->
<!--		PCC.CHT_CUTT_ID			/* 채팅ID */-->
<!--		, PCR.CHT_RDY_ID		/* 채팅대기ID */-->
<!--		, PCC.CUST_ID				/* 고객ID */-->
<!--		, (SELECT CHT_USER_KEY-->
<!--			FROM PLT_CHT_CUST-->
<!--			WHERE CUST_ID = PCC.CUST_ID-->
<!--				AND SNDR_KEY = PCC.SNDR_KEY-->
<!--			ORDER BY REG_DT DESC-->
<!--			LIMIT 1) AS CHT_USER_KEY		/* 채팅고객키 */-->
<!--		, (SELECT CUST_NM-->
<!--			FROM PLT_CUST-->
<!--			WHERE CUST_ID = PCC.CUST_ID)	AS CUST_NM			/* 고객명 */-->
<!--		, PCC.SNDR_KEY				/* 발송자 키 */-->
<!--		, (SELECT DSPTCH_PRF_NM-->
<!--			FROM PLT_CUSTCO_CHN-->
<!--			WHERE SNDR_KEY = PCC.SNDR_KEY) AS DSPTCH_PRF_NM		/* 채널명 */-->
<!--		, PCC.CUTT_BGNG_DT			/* 상담 시작 일시 */-->
<!--		, PCC.CUTT_END_DT			/* 상담 종료 일시 */-->
<!--		, PCC.CHN_CLSF_CD			/* 채널 분류 코드 */-->
<!--		, (SELECT CD_NM-->
<!--			FROM PLT_COMM_CD-->
<!--			WHERE CUSTCO_ID = PCC.CUSTCO_ID AND GROUP_CD_ID = 'CHNL_CL'-->
<!--				AND CD_ID = PCC.CHN_CLSF_CD)	AS CHN_CLSF_CD_NM		/* 채널분류명 */-->
<!--		, PCC.CUTT_TYPE_ID				/* 상담유형 ID */-->
<!--		, CUTT.FULL_PATH AS CUTT_TYPE-->
<!--		, CUTT.CD_PATH AS CUTT_TYPE_CD-->
<!--		, PCC.QSTN_TYPE_ID				/* 문의유형 ID */-->
<!--		, QSTN.FULL_PATH AS QSTN_TYPE-->
<!--		, PCC.CUTT_TTL				/* 상담제목 */-->
<!--		, PCC.CUTT_CN				/* 상담내용 */-->
<!--		, PCC.CUTT_STTS_CD			/* 상담상태코드 */-->
<!--		, (SELECT CD_NM-->
<!--			FROM PLT_COMM_CD-->
<!--			WHERE CUSTCO_ID = PCC.CUSTCO_ID AND GROUP_CD_ID = 'CUSL_STAT'-->
<!--				AND CD_ID = PCC.CUTT_STTS_CD)	AS CUTT_STTS_CD_NM		/* 상담상태명 */-->
<!--		, PCC.SYS_MSG_SKIP_YN				/* 시스템메시지여부 */-->
<!--		, PCC.CLBK_YN				/* 콜백여부 */-->
<!--		, PCC.CLBK_YMD				/* 콜백일자 */-->
<!--		, PCC.CLBK_BGNG_DT			/* 콜백시작일자 */-->
<!--		, PCC.BMK_YN				/* 책갈피여부 */-->
<!--		, REPLACE(PCCD.RCPTN_DSPTCH_MSG, '\n', ' ') AS RCPTN_DSPTCH_MSG			/* 수발신메시지 */-->
<!--		, REPLACE(PCCD.CHG_RCPTN_DSPTCH_MSG, '\n', ' ') AS CHG_RCPTN_DSPTCH_MSG	/* 수발신메시지 */-->
<!--		, PCCD.REG_DT				/* 최근채팅일시 */-->
<!--	FROM PLT_CHT_CUTT PCC-->
<!--	LEFT JOIN (SELECT DTL2.CHT_CUTT_DTL_ID, DTL2.CHT_CUTT_ID, DTL2.RCPTN_DSPTCH_MSG, DTL2.CHG_RCPTN_DSPTCH_MSG, DTL2.REG_DT-->
<!--				FROM (SELECT CHT_CUTT_ID, MAX(REG_DT) AS RECENT_DT,  MAX(CHT_CUTT_DTL_ID) AS RECENT_DTL_ID-->
<!--					FROM PLT_CHT_CUTT_DTL-->
<!--					GROUP BY CHT_CUTT_ID) DTL1-->
<!--				LEFT JOIN PLT_CHT_CUTT_DTL DTL2-->
<!--				ON DTL1.RECENT_DT = DTL2.REG_DT-->
<!--					AND DTL1.RECENT_DTL_ID = DTL2.CHT_CUTT_DTL_ID-->
<!--					AND DTL1.CHT_CUTT_ID = DTL2.CHT_CUTT_ID-->
<!--				WHERE DTL2.MSG_TYPE_CD != 'QSTN') PCCD-->
<!--		ON PCC.CHT_CUTT_ID = PCCD.CHT_CUTT_ID -->
<!--	LEFT JOIN PLT_CHT_RDY PCR-->
<!--		ON PCC.SNDR_KEY = PCR.SNDR_KEY-->
<!--		AND PCC.CUST_ID = PCR.CUST_ID-->
<!--		AND PCC.CUSL_ID = PCR.CUSL_ID-->
<!--		AND PCC.CUTT_STTS_CD = PCR.ALTMNT_STTS_CD-->
<!-- 	<![CDATA[-->
<!--	LEFT OUTER JOIN (-->
<!--		WITH RECURSIVE CUTT_TREE AS (-->
<!--			SELECT CUSTCO_ID, CUTT_TYPE_ID, UP_CUTT_TYPE_ID,  CASE WHEN (SELECT ITGRT_USE_YN FROM PLT_CUTT_TYPE_STNG WHERE CUSTCO_ID = PLT_CUTT_TYPE.CUSTCO_ID) = 'Y' THEN 'ITGRT' ELSE 'IN' END  AS CUTT_TYPE_SE_CD, CUTT_TYPE_NM, CUTT_TYPE_EXPLN, CUTT_TYPE_LVL, USE_YN, SORT_ORD, 1 AS LVL, LPAD(CAST(SORT_ORD AS VARCHAR),5,'0') AS SORT, CAST(CUTT_TYPE_NM AS VARCHAR(300)) AS FULL_PATH, CAST(CUTT_TYPE_ID AS VARCHAR(300)) AS CD_PATH-->
<!--			FROM PLT_CUTT_TYPE-->
<!--			WHERE UP_CUTT_TYPE_ID IS NULL-->
<!--			AND DEL_YN = 'N'-->
<!--			AND USE_YN = 'Y'-->
<!--			AND CUSTCO_ID = #{CUSTCO_ID}::INTEGER-->
<!--			UNION ALL-->
<!--			SELECT B.CUSTCO_ID, B.CUTT_TYPE_ID, B.UP_CUTT_TYPE_ID, B.CUTT_TYPE_SE_CD, B.CUTT_TYPE_NM, B.CUTT_TYPE_EXPLN, B.CUTT_TYPE_LVL, B.USE_YN, B.SORT_ORD, C.LVL + 1 AS LVL, C.SORT || ' > ' || LPAD(CAST(B.SORT_ORD AS VARCHAR),5,'0') AS SORT, CAST(C.FULL_PATH || ' > ' || B.CUTT_TYPE_NM AS VARCHAR(300)) AS FULL_PATH, CAST(C.CD_PATH || ' > ' || B.CUTT_TYPE_ID AS VARCHAR(300)) AS CD_PATH-->
<!--			FROM PLT_CUTT_TYPE B-->
<!--			INNER JOIN CUTT_TREE C ON C.CUTT_TYPE_ID = B.UP_CUTT_TYPE_ID-->
<!--			WHERE B.DEL_YN = 'N'-->
<!--			AND B.USE_YN = 'Y'-->
<!--			AND B.CUTT_TYPE_SE_CD = CASE WHEN (SELECT ITGRT_USE_YN FROM PLT_CUTT_TYPE_STNG WHERE CUSTCO_ID = B.CUSTCO_ID) = 'Y' THEN 'ITGRT' ELSE 'IN' END-->
<!--			AND B.CUSTCO_ID = #{CUSTCO_ID}::INTEGER-->
<!--		)-->
<!--		SELECT-->
<!--			CT.CUSTCO_ID-->
<!--			, CT.CUTT_TYPE_ID-->
<!--			, CT.UP_CUTT_TYPE_ID-->
<!--			, (SELECT CUTT_TYPE_NM FROM PLT_CUTT_TYPE WHERE CUTT_TYPE_ID = CT.UP_CUTT_TYPE_ID) AS UP_CUTT_TYPE_NM-->
<!--			, ROW_NUMBER() OVER(PARTITION BY CT.UP_CUTT_TYPE_ID ORDER BY CT.SORT_ORD) AS RE_SORT_ORD-->
<!--			, CT.FULL_PATH-->
<!--			, CT.CD_PATH-->
<!--		FROM CUTT_TREE CT-->
<!--		LEFT OUTER JOIN PLT_COMM_CD PCC ON PCC.CUSTCO_ID = CT.CUSTCO_ID AND PCC.CD_ID = CT.CUTT_TYPE_SE_CD AND PCC.GROUP_CD_ID = 'CUSL_TP_CL'-->

<!--		WHERE CT.CUTT_TYPE_LVL <= (SELECT CUTT_TYPE_LMT_LVL_CD::INTEGER + 1 FROM PLT_CUTT_TYPE_STNG WHERE CUSTCO_ID = CT.CUSTCO_ID)-->

<!--		ORDER BY CT.SORT-->
<!--	) CUTT ON CUTT.CUTT_TYPE_ID = PCC.CUTT_TYPE_ID-->
<!--	LEFT OUTER JOIN (-->
<!--		WITH RECURSIVE QSTN_TREE AS (-->
<!--			SELECT CUSTCO_ID, QSTN_TYPE_ID, UP_QSTN_TYPE_ID, QSTN_TYPE_SE_CD, QSTN_TYPE_NM, QSTN_TYPE_EXPLN, USE_YN, SORT_ORD, 1 AS LVL, LPAD(CAST(SORT_ORD AS VARCHAR),5,'0') AS SORT, CAST(QSTN_TYPE_NM AS VARCHAR(300)) AS FULL_PATH-->
<!--			FROM PLT_CHT_QSTN_TYPE-->
<!--			WHERE UP_QSTN_TYPE_ID IS NULL-->
<!--			AND DEL_YN = 'N'-->
<!--			AND CUSTCO_ID = #{CUSTCO_ID}::INTEGER-->
<!--			UNION ALL-->
<!--			SELECT B.CUSTCO_ID, B.QSTN_TYPE_ID, B.UP_QSTN_TYPE_ID, B.QSTN_TYPE_SE_CD, B.QSTN_TYPE_NM, B.QSTN_TYPE_EXPLN, B.USE_YN, B.SORT_ORD, C.LVL + 1 AS LVL, C.SORT || ' > ' || LPAD(CAST(B.SORT_ORD AS VARCHAR),5,'0') AS SORT, CAST(C.FULL_PATH || ' > ' || B.QSTN_TYPE_NM AS VARCHAR(300)) AS FULL_PATH-->
<!--			FROM PLT_CHT_QSTN_TYPE B-->
<!--			INNER JOIN QSTN_TREE C ON C.QSTN_TYPE_ID = B.UP_QSTN_TYPE_ID-->
<!--			WHERE B.DEL_YN = 'N'-->
<!--			AND B.CUSTCO_ID = #{CUSTCO_ID}::INTEGER-->
<!--		)-->
<!--		SELECT-->
<!--			QT.CUSTCO_ID-->
<!--			, QT.QSTN_TYPE_ID-->
<!--			, QT.UP_QSTN_TYPE_ID-->
<!--			, (SELECT QSTN_TYPE_NM FROM PLT_CHT_QSTN_TYPE WHERE QSTN_TYPE_ID = QT.UP_QSTN_TYPE_ID) AS UP_CUTT_TYPE_NM-->
<!--			, ROW_NUMBER() OVER(PARTITION BY QT.UP_QSTN_TYPE_ID ORDER BY QT.SORT_ORD) AS RE_SORT_ORD-->
<!--			, QT.FULL_PATH-->
<!--		FROM QSTN_TREE QT-->

<!--		ORDER BY QT.SORT-->
<!--	) QSTN ON QSTN.QSTN_TYPE_ID = PCC.QSTN_TYPE_ID-->
<!--	]]>  -->
<!--	WHERE PCC.CUSL_ID = #{USER_ID}::INTEGER-->
<!--		AND PCC.CUSTCO_ID = #{CUSTCO_ID}::INTEGER-->
<!--		AND PCC.CUTT_STTS_CD NOT LIKE '%'||'GIVEUP'||'%' -->
<!--		<choose>-->
<!--			<when test="ST_DATE != '' and ST_DATE != null and ST_DATE != undefined">-->
<!--				<![CDATA[-->
<!--				AND PCC.CUTT_BGNG_DT >= #{ST_DATE}-->
<!--				]]>-->
<!--			</when>-->
<!--			<otherwise>-->
<!--				<![CDATA[-->
<!--				AND (-->
<!--				PCC.BMK_YN = 'Y' OR-->
<!--				PCC.CUTT_STTS_CD IN ('AFTPRCS','AFTPRCS_NORSPNS','ING','TEMP_SAVE') OR-->
<!--				((PCC.BMK_YN != 'N' OR PCC.BMK_YN IS NULL) AND PCC.CUTT_STTS_CD != 'AFTPRCS' AND PCC.CUTT_BGNG_DT >= TO_CHAR(NOW()-INTERVAL'7 DAYS','YYYYMMDDHH24MISS'))-->
<!--				)-->
<!--				]]>-->
<!--			</otherwise>-->
<!--		</choose>-->
<!--		<if test="END_DATE != '' and END_DATE != null and END_DATE != undefined">-->
<!--			<![CDATA[-->
<!--			AND PCC.CUTT_BGNG_DT <= #{END_DATE}-->
<!--			]]>-->
<!--		</if>-->
<!--		<if test="CHN_CLSF_CD != '' and CHN_CLSF_CD != null and CHN_CLSF_CD != undefined">-->
<!--			AND PCC.CHN_CLSF_CD = #{CHN_CLSF_CD}-->
<!--		</if>-->
<!--	ORDER BY -->
<!--		CASE WHEN CUTT_STTS_CD = 'ING' OR CUTT_STTS_CD LIKE ('%' || 'WAIT' || '%') THEN 0-->
<!--			WHEN CUTT_STTS_CD LIKE ('%' || 'AFTPRCS' || '%') THEN 1-->
<!--			WHEN CUTT_STTS_CD LIKE ('%' || 'CMPL' || '%') THEN 2-->
<!--		END-->
<!--		, REG_DT DESC-->

	SELECT /*상담(채팅) 목록 (kr.co.hkcloud.palette3.chat.main.dao.ChatMainMapper.selectRtnTalkList)*/
		*
	FROM (
	      SELECT
	         PCC.CHT_CUTT_ID            /* 채팅ID */
	         , (SELECT CHT_RDY_ID 
	         	FROM PLT_CHT_RDY 
	         	WHERE SNDR_KEY = PCC.SNDR_KEY 
	         		AND CUST_ID = PCC.CUST_ID 
	         		AND CUSL_ID = PCC.CUSL_ID 
	         		AND ALTMNT_STTS_CD = PCC.CUTT_STTS_CD 
	         		AND ALTMNT_RDY_REG_DT = PCC.ALTMNT_RDY_REG_DT) AS CHT_RDY_ID    /* 채팅대기ID */
	         , (SELECT CHT_USER_KEY FROM PLT_CHT_CUST WHERE CUST_ID = PCC.CUST_ID AND SNDR_KEY = PCC.SNDR_KEY ORDER BY REG_DT DESC LIMIT 1) AS CHT_USER_KEY      /* 채팅고객키 */
	         , PCC.CUST_ID            /* 고객ID */
	         , (SELECT CUST_NM FROM PLT_CUST WHERE CUST_ID = PCC.CUST_ID) AS CUST_NM    /* 고객명 */
	         , PCC.SNDR_KEY            /* 발송자 키 */
	         , (SELECT DSPTCH_PRF_KEY FROM PLT_CUSTCO_CHN WHERE SNDR_KEY = PCC.SNDR_KEY) AS DSPTCH_PRF_KEY    /* SENDER_KEY */
	         , (SELECT DSPTCH_PRF_NM FROM PLT_CUSTCO_CHN WHERE SNDR_KEY = PCC.SNDR_KEY) AS DSPTCH_PRF_NM      /* 채널명 */
	         , PCC.CUTT_BGNG_DT         /* 상담 시작 일시 */
	         , PCC.CUTT_END_DT         /* 상담 종료 일시 */
	         , PCC.CHN_CLSF_CD         /* 채널 분류 코드 */
	         , (SELECT CD_NM FROM PLT_COMM_CD WHERE CUSTCO_ID = PCC.CUSTCO_ID AND GROUP_CD_ID = 'CHNL_CL' AND CD_ID = PCC.CHN_CLSF_CD) AS CHN_CLSF_CD_NM      /* 채널분류명 */
	         , PCC.CUTT_TYPE_ID            /* 상담유형 ID */
	         , CUTT.FULL_PATH AS CUTT_TYPE
	         , CUTT.CD_PATH AS CUTT_TYPE_CD
	         , PCC.QSTN_TYPE_ID            /* 문의유형 ID */
	         , QSTN.FULL_PATH AS QSTN_TYPE
	         , PCC.CUTT_TTL            /* 상담제목 */
	         , PCC.CUTT_CN            /* 상담내용 */
	         , PCC.CUTT_STTS_CD         /* 상담상태코드 */
	         , (SELECT CD_NM FROM PLT_COMM_CD WHERE CUSTCO_ID = PCC.CUSTCO_ID AND GROUP_CD_ID = 'CUSL_STAT' AND CD_ID = PCC.CUTT_STTS_CD) AS CUTT_STTS_CD_NM      /* 상담상태명 */
	         , PCC.SYS_MSG_SKIP_YN      /* 시스템메시지여부 */
	         , PCC.CLBK_YN            /* 콜백여부 */
	         , PCC.CLBK_YMD            /* 콜백일자 */
	         , PCC.CLBK_BGNG_DT         /* 콜백시작일자 */
	         , PCC.BMK_YN            /* 책갈피여부 */
	         , PCC.CHBT_YN            /* 챗봇여부 */
	         , (SELECT CHT_CUTT_DTL_ID FROM (SELECT CHT_CUTT_DTL_ID FROM PLT_CHT_CUTT_DTL WHERE CHT_CUTT_ID = PCC.CHT_CUTT_ID ORDER BY CHT_CUTT_DTL_ID DESC) A LIMIT 1) AS  CHT_CUTT_DTL_ID		/* 최근채팅id */
	         , (SELECT REPLACE(RCPTN_DSPTCH_MSG, '\n', ' ') FROM (SELECT RCPTN_DSPTCH_MSG FROM PLT_CHT_CUTT_DTL WHERE CHT_CUTT_ID = PCC.CHT_CUTT_ID AND MSG_TYPE_CD != 'product' ORDER BY CHT_CUTT_DTL_ID DESC) A LIMIT 1) AS  RCPTN_DSPTCH_MSG		/* 최근채팅 수발신메시지 */
	         , (SELECT REPLACE(CHG_RCPTN_DSPTCH_MSG, '\n', ' ') FROM (SELECT CHG_RCPTN_DSPTCH_MSG FROM PLT_CHT_CUTT_DTL WHERE CHT_CUTT_ID = PCC.CHT_CUTT_ID AND MSG_TYPE_CD != 'product' ORDER BY CHT_CUTT_DTL_ID DESC) A LIMIT 1) AS  CHG_RCPTN_DSPTCH_MSG		/* 최근채팅 수발신메시지 */
	         , (SELECT REG_DT FROM (SELECT REG_DT FROM PLT_CHT_CUTT_DTL WHERE CHT_CUTT_ID = PCC.CHT_CUTT_ID ORDER BY CHT_CUTT_DTL_ID DESC) A LIMIT 1) AS REG_DT
           , CASE WHEN PCC.CHN_CLSF_CD = 'BBS' THEN (SELECT LKAG_BEAN_ID FROM CUSTCO.PLT_LKAG_MST WHERE LKAG_MST_ID = PCCBS.LKAG_MST_ID) ELSE NULL END AS BEAN_ID
	         , CASE WHEN CUTT_STTS_CD = 'ING' OR CUTT_STTS_CD LIKE ('%' || 'WAIT' || '%') THEN 0
	            WHEN CUTT_STTS_CD LIKE ('%' || 'AFTPRCS' || '%') THEN 1
	            WHEN CUTT_STTS_CD LIKE ('%' || 'CMPL' || '%') THEN 2
	         END AS SORT_ORD
	      FROM PLT_CHT_CUTT PCC
	      LEFT OUTER JOIN (
	         WITH RECURSIVE CUTT_TREE AS (
	            SELECT CUTT_TYPE_ID, UP_CUTT_TYPE_ID, CUTT_TYPE_NM, CUTT_TYPE_LVL, USE_YN, DEL_YN, SORT_ORD, 1 AS LVL, LPAD(CAST(SORT_ORD AS VARCHAR),5,'0') AS SORT, CAST(CUTT_TYPE_ID AS VARCHAR) AS FULL_CUTT_TYPE_ID, CAST(CUTT_TYPE_NM AS VARCHAR(300)) AS FULL_PATH
	            FROM PLT_CUTT_TYPE
	            WHERE UP_CUTT_TYPE_ID IS NULL
	            AND CUSTCO_ID = #{CUSTCO_ID}::INT
	            UNION ALL
	            SELECT  B.CUTT_TYPE_ID, B.UP_CUTT_TYPE_ID, B.CUTT_TYPE_NM, B.CUTT_TYPE_LVL, B.USE_YN, B.DEL_YN, B.SORT_ORD, C.LVL + 1 AS LVL, C.SORT || ' > ' || LPAD(CAST(B.SORT_ORD AS VARCHAR),5,'0') AS SORT, C.FULL_CUTT_TYPE_ID || ' > ' || CAST(B.CUTT_TYPE_ID AS VARCHAR) AS FULL_CUTT_TYPE_ID, CAST(CASE WHEN C.LVL >1 THEN C.FULL_PATH || ' > ' ELSE '' END || B.CUTT_TYPE_NM AS VARCHAR(300)) AS FULL_PATH
	            FROM PLT_CUTT_TYPE B
	            INNER JOIN CUTT_TREE C ON C.CUTT_TYPE_ID = B.UP_CUTT_TYPE_ID
	            WHERE B.CUTT_TYPE_SE_CD = CASE WHEN (SELECT ITGRT_USE_YN FROM PLT_CUTT_TYPE_STNG WHERE CUSTCO_ID = B.CUSTCO_ID) = 'Y' THEN 'ITGRT' ELSE 'IN' END
	            AND B.CUSTCO_ID = #{CUSTCO_ID}::INT
	         )
	         SELECT
	            CT.CUTT_TYPE_ID
	            , CT.FULL_PATH
	            , CT.FULL_CUTT_TYPE_ID AS CD_PATH
	         FROM CUTT_TREE CT
	      ) CUTT ON CUTT.CUTT_TYPE_ID = PCC.CUTT_TYPE_ID
	      LEFT OUTER JOIN (
	         WITH RECURSIVE QSTN_TREE AS (
	            SELECT QSTN_TYPE_ID, UP_QSTN_TYPE_ID, QSTN_TYPE_NM, USE_YN, SORT_ORD, 1 AS LVL, LPAD(CAST(SORT_ORD AS VARCHAR),5,'0') AS SORT, CAST(QSTN_TYPE_NM AS VARCHAR(300)) AS FULL_PATH
	            FROM PLT_CHT_QSTN_TYPE
	            WHERE UP_QSTN_TYPE_ID IS NULL
	            AND CUSTCO_ID = #{CUSTCO_ID}::INTEGER
	            UNION ALL
	            SELECT B.QSTN_TYPE_ID, B.UP_QSTN_TYPE_ID, B.QSTN_TYPE_NM, B.USE_YN, B.SORT_ORD, C.LVL + 1 AS LVL, C.SORT || ' > ' || LPAD(CAST(B.SORT_ORD AS VARCHAR),5,'0') AS SORT, CAST(C.FULL_PATH || ' > ' || B.QSTN_TYPE_NM AS VARCHAR(300)) AS FULL_PATH
	            FROM PLT_CHT_QSTN_TYPE B
	            INNER JOIN QSTN_TREE C ON C.QSTN_TYPE_ID = B.UP_QSTN_TYPE_ID
	            WHERE B.CUSTCO_ID = #{CUSTCO_ID}::INTEGER
	         )
	         SELECT
	            QT.QSTN_TYPE_ID
	            , QT.FULL_PATH
	         FROM QSTN_TREE QT
	         ORDER BY QT.SORT
	      ) QSTN ON QSTN.QSTN_TYPE_ID = PCC.QSTN_TYPE_ID
        LEFT JOIN PLT_CUSTCO_CHN CC ON CC.SNDR_KEY = PCC.SNDR_KEY
        LEFT JOIN PLT_CUSTCO_CHN_BBS_STNG PCCBS ON CC.SNDR_KEY = PCCBS.SNDR_KEY
  WHERE PCC.CUSTCO_ID = #{CUSTCO_ID}::INT
	      AND PCC.CUSL_ID = #{USER_ID}::INT
	      AND PCC.CUTT_STTS_CD NOT LIKE '%'||'GIVEUP'||'%'
	      <choose>
			<when test="ST_DATE != '' and ST_DATE != null and ST_DATE != undefined">
				<![CDATA[
				AND PCC.CUTT_BGNG_DT >= #{ST_DATE}
				]]>
			</when>
			<otherwise>
				<![CDATA[
				AND (
				PCC.BMK_YN = 'Y' OR
				PCC.CUTT_STTS_CD IN ('AFTPRCS','AFTPRCS_NORSPNS','ING','TEMP_SAVE') OR
				((PCC.BMK_YN != 'N' OR PCC.BMK_YN IS NULL) AND PCC.CUTT_STTS_CD != 'AFTPRCS' AND PCC.CUTT_BGNG_DT >= TO_CHAR(NOW()-INTERVAL'7 DAYS','YYYYMMDDHH24MISS'))
				)
				]]>
			</otherwise>
		</choose>
		<if test="END_DATE != '' and END_DATE != null and END_DATE != undefined">
			<![CDATA[
			AND PCC.CUTT_BGNG_DT <= #{END_DATE}
			]]>
		</if>
		<if test="CHN_CLSF_CD != '' and CHN_CLSF_CD != null and CHN_CLSF_CD != undefined">
			AND PCC.CHN_CLSF_CD = #{CHN_CLSF_CD}
		</if>
	) A
	ORDER BY A.SORT_ORD, A.REG_DT DESC
</select>

<resultMap id="getAllTextByDBResultMap" type="java.util.HashMap" >
	<result property="TEXT"		column="TEXT"        jdbcType="VARCHAR" javaType="java.lang.String" typeHandler="OrgContentCipherTypeHandler"/>
</resultMap>  

<!-- 상담(채팅)목록를 조회한다.(상담톡 메인에서 사용) -->        
<select id="getAllTextByDB"  parameterType= "java.util.HashMap" resultMap="getAllTextByDBResultMap">
 <![CDATA[
	SELECT ORG_CONTENT AS TEXT
	FROM PLT_CHT_CUTT_CONT_ORG
	WHERE ORG_CONT_ID = #{ORG_CONT_ID} 
	 AND #{CUSTCO_ID} LIKE ('%'||CUSTCO_ID||'%')
]]>   
</select>

<!-- 상담톡에서 고객 정보를 조회한다.(상담톡 메인에서 사용) -->	
<select id="selectRtnTalkCustInfo"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
SELECT A.CUSTOMER_ID
     , A.CUST_ID
     , COALESCE(A.CUSTOMER_NM, '알수없음') AS CUSTOMER_NM
     , A.CUSTOMER_PHONE_NO
     , A.CUSTOMER_USER_MEMO
     , A.GENDER_CD
     , A.CUSTOMER_BIRTH
     , A.CUSTOMER_STAT_CD
     , '알수없음' AS CUSTOMER_STAT_NM 
     , A.REGR_DEPT_CD
     , A.REGR_ID
     , TO_CHAR(A.REG_DTTM, 'YYYY/MM/DD HH24:MI:SS') AS REG_DTTM
     , A.AMDR_DEPT_CD
     , A.EML AS CUSTOMER_EML
     , A.CUSTOMER_MEMO AS MEMO
     , A.ATENT_CUSTOMER
     , A.UPDATEYN
     , COALESCE(A.CUSTOMER_SEQ, 0)  AS CUSTOMER_SEQ
     , COALESCE(A.MEMBER_YN, 'N')   AS MEMBER_YN
     , (SELECT TO_CHAR(TO_DATE(COALESCE(MAX(TALK_START_DT),''), 'YYYY/MM/DD HH24:MI:SS'), 'YYYY/MM/DD HH24:MI:SS')
          FROM PLT_CHT_CUTT
         WHERE CUSTCO_ID = A.CUSTCO_ID
           AND CUST_ID = A.CUST_ID
           AND COALESCE(TALK_INQRY_CD,'') IS NOT NULL
       ) AS LAST_CONS_DTTM
     
     <if test="PARTNER_ID !='' and PARTNER_ID != null and PARTNER_ID == 'KHCU' ">
			
		, CUSTOMER_TYPE
		, CUSTOMER_GENDER
		, CUSTOMER_CAREER_STATUS
		, CUSTOMER_EDU_CHK_YN
		, CUSTOMER_EDU_LEV
		, CUSTOMER_EDU_MAJOR
		, CUSTOMER_JOIN_POLICY_YN
		, CUSTOMER_JOIN_POLICY
		, CUSTOMER_REGION
		, CUSTOMER_INTEREST_FACULTY
		, CUSTOMER_INTEREST_DEPARTMENT
		
	</if>
	
	<if test="PARTNER_ID !='' and PARTNER_ID != null and PARTNER_ID == 'KEIS' ">
			
		, CUSTOMER_TYPE
		, CUSTOMER_GENDER
		, CUSTOMER_CAREER_STATUS
		, CUSTOMER_EDU_CHK_YN
		, CUSTOMER_EDU_LEV
		, CUSTOMER_EDU_MAJOR
		, CUSTOMER_JOIN_POLICY_YN
		, CUSTOMER_JOIN_POLICY
		, CUSTOMER_REGION
		
	</if>
     
    <if test="PARTNER_ID !='' and PARTNER_ID != null and PARTNER_ID == 'SONY' ">
		, CUSTOMER_TYPE
		, CUSTOMER_GENDER
		, CUSTOMER_CAREER_STATUS
		, CUSTOMER_EDU_CHK_YN
		, CUSTOMER_EDU_LEV
		, CUSTOMER_EDU_MAJOR
		, CUSTOMER_JOIN_POLICY_YN
		, CUSTOMER_JOIN_POLICY
		, CUSTOMER_REGION
		, REFERENCE_CUSTOMER_KEY
	</if>
     , A.ATENT_CD
     , A.ATENT_PRE_PLAN
     , A.ACDT_PRSN_REL
     , (SELECT CD_NM FROM PLT_COMN_CD CT WHERE CT.GROUP_CD = 'TALK042' AND CT.CD=A.ATENT_CD AND CT.CD_TYPE  = '1') AS ATENT_NM
     , A.OWNHOM_ADR									AS ADDRESS				--일반주소
     , A.OWNHOM_DETAIL_ADR							AS DETAILADDRESS		--상세주소
     --, A.POST_CODE															--우편번호 (추후 DB추가해야함)
     --, A.EXTRA_ADR									AS EXTRAADDRESS			--참고항목 (추후 DB추가해야함)
     , A.EML
  FROM PLT_CUS A
 WHERE #{CUSTCO_ID} LIKE ('%' || A.CUSTCO_ID || '%')
   AND
   <choose>
		<when test="CUSTOMER_ID !=''">
			A.CUSTOMER_ID = #{CUSTOMER_ID}
		</when>
		<otherwise>
			A.CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
		</otherwise>
	</choose>
</select>

<resultMap id="selectRtnTalkInqryInfoResultMap" type="java.util.HashMap" >
	<result property="SNDR_KEY"		column="SNDR_KEY"			jdbcType="VARCHAR" javaType="java.lang.String"/>
	<result property="DSPTCH_PRF_KEY_NM"	column="DSPTCH_PRF_KEY_NM"		jdbcType="VARCHAR" javaType="java.lang.String"/>
	<result property="TALK_INQRY_NM"		column="TALK_INQRY_NM"			jdbcType="VARCHAR" javaType="java.lang.String"/>
	<result property="TALK_INQRY_FULL_NM"	column="TALK_INQRY_FULL_NM"		jdbcType="VARCHAR" javaType="java.lang.String"/>
	<result property="TALK_INQRY_CD"		column="TALK_INQRY_CD"			jdbcType="VARCHAR" javaType="java.lang.String"/>
	<result property="P1_NM"				column="P1_NM"					jdbcType="VARCHAR" javaType="java.lang.String"/>
	<result property="P2_NM"				column="P2_NM"					jdbcType="VARCHAR" javaType="java.lang.String"/>
	<result property="P3_NM"				column="P3_NM"					jdbcType="VARCHAR" javaType="java.lang.String"/>
	<result property="P4_NM"				column="P4_NM"					jdbcType="VARCHAR" javaType="java.lang.String"/>
	<result property="Lv1_CD"				column="Lv1_CD"					jdbcType="VARCHAR" javaType="java.lang.String"/>
	<result property="Lv2_CD"				column="Lv2_CD"					jdbcType="VARCHAR" javaType="java.lang.String"/>
	<result property="CHT_CUTT_ID"		column="CHT_CUTT_ID"		jdbcType="VARCHAR" javaType="java.lang.String"/>
	<result property="CUST_ID"		column="CUST_ID"			jdbcType="VARCHAR" javaType="java.lang.String"/>
	<result property="CHN_CLSF_CD"			column="CHN_CLSF_CD"			jdbcType="VARCHAR" javaType="java.lang.String"/>
	<result property="MEMBER_YN"			column="MEMBER_YN"				jdbcType="VARCHAR" javaType="java.lang.String"/>
	<result property="CUSTOMER_NM"			column="CUSTOMER_NM"			jdbcType="VARCHAR" javaType="java.lang.String" typeHandler="ContentCipherTypeHandler"/>
</resultMap>  

<!-- 상담톡에서 고객 정보를 조회한다.(상담톡 메인에서 사용) -->	
<select id="selectRtnTalkInqryInfo"  parameterType= "java.util.HashMap" resultMap="selectRtnTalkInqryInfoResultMap">

SELECT  A.SNDR_KEY
		, (SELECT DSPTCH_PRF_NM FROM PLT_ASP_CUS_CHN CT WHERE CT.SNDR_KEY=A.SNDR_KEY) AS DSPTCH_PRF_KEY_NM
        , (SELECT INQRY_TYP_NM FROM PLT_CHT_INQ_TYP WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER AND INQRY_TYP_CD = A.TALK_INQRY_CD AND ROWNUM = 1) AS TALK_INQRY_NM
        , DECODE( P_4.INQRY_TYP_NM, NULL, '', P_4.INQRY_TYP_NM || ' > ') 
				|| DECODE( P_3.INQRY_TYP_NM, NULL, '', P_3.INQRY_TYP_NM || ' > ')
                || DECODE( P_2.INQRY_TYP_NM, NULL, '', P_2.INQRY_TYP_NM || ' > ')
                || P_1.INQRY_TYP_NM
		   AS TALK_INQRY_FULL_NM
        , A.TALK_INQRY_CD
        , P_1.INQRY_TYP_NM P1_NM
        , P_2.INQRY_TYP_NM P2_NM
        , P_3.INQRY_TYP_NM P3_NM
        , P_4.INQRY_TYP_NM P4_NM
        , ( CASE WHEN P_4.INQRY_TYP_CD IS NOT NULL THEN P_4.INQRY_TYP_CD
			   WHEN P_3.INQRY_TYP_CD IS NOT NULL THEN P_3.INQRY_TYP_CD
               WHEN P_2.INQRY_TYP_CD IS NOT NULL THEN P_2.INQRY_TYP_CD
               WHEN P_1.INQRY_TYP_CD IS NOT NULL THEN P_1.INQRY_TYP_CD
               ELSE A.TALK_INQRY_CD END ) Lv1_CD
         , ( CASE WHEN P_4.INQRY_TYP_CD IS NOT NULL THEN P_3.INQRY_TYP_CD
			   WHEN P_3.INQRY_TYP_CD IS NOT NULL THEN P_2.INQRY_TYP_CD
               WHEN P_2.INQRY_TYP_CD IS NOT NULL THEN P_1.INQRY_TYP_CD
               ELSE '' END ) Lv2_CD  
         , A.CHT_CUTT_ID
         , A.CUST_ID 
         , A.CHN_CLSF_CD
         , CUST.MEMBER_YN
         , CUST.CUSTOMER_NM
	 FROM PLT_CHT_CUTT A
  LEFT OUTER JOIN PLT_CUS CUST
	ON CUST.CUST_ID = A.CUST_ID
	AND #{CUSTCO_ID} LIKE ('%' || CUST.CUSTCO_ID || '%')
  LEFT OUTER JOIN PLT_CHT_INQ_TYP P_1
	ON P_1.INQRY_TYP_CD = A.TALK_INQRY_CD
	AND #{CUSTCO_ID} LIKE ('%' || P_1.CUSTCO_ID || '%')
  LEFT OUTER JOIN PLT_CHT_INQ_TYP P_2
	ON P_1.SPST_INQRY_TYP_CD = P_2.INQRY_TYP_CD
	AND #{CUSTCO_ID} LIKE ('%' || P_2.CUSTCO_ID || '%')
  LEFT OUTER JOIN PLT_CHT_INQ_TYP P_3  
	ON P_2.SPST_INQRY_TYP_CD = P_3.INQRY_TYP_CD
	AND #{CUSTCO_ID} LIKE ('%' || P_3.CUSTCO_ID || '%')
  LEFT OUTER JOIN PLT_CHT_INQ_TYP P_4  
	ON P_3.SPST_INQRY_TYP_CD = P_4.INQRY_TYP_CD
	AND #{CUSTCO_ID} LIKE ('%' || P_4.CUSTCO_ID || '%')
  WHERE #{CUSTCO_ID} LIKE ('%' || A.CUSTCO_ID || '%')
    AND A.CHT_CUTT_ID = #{CHT_CUTT_ID}
  
</select>
<!-- 마지막 고객 상담 이력의 주문번호와 회원여부 
<select id="getLastUserChatInfo"   parameterType= "java.util.HashMap" resultType="java.util.HashMap">
SELECT 
	COALESCE(A.MEMBER_YN, 'N') AS MEMBER_YN
	, A.ORDER_NUMBER 
FROM (
    SELECT
	    MEMBER_YN
	    , ORDER_NUMBER
    FROM PLT_CHT_CUTT
    WHERE CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
    AND CUTT_STTS_CD IN ('20','21')
    AND (MEMBER_YN='N' OR MEMBER_YN IS NULL)
    AND ORDER_NUMBER IS NOT NULL
    ORDER BY REG_DT DESC
) A
WHERE ROWNUM = 1
</select>
-->
<!-- 마지막으로 저장된 회원번호 -->
<select id="getUserCustseq"   parameterType= "java.util.HashMap" resultType="java.util.HashMap">
SELECT 
    A.CUSTOMER_SEQ
    , A.MEMBER_YN
FROM (
	SELECT 
	    CUSTOMER_SEQ
	    , MEMBER_YN
	FROM PLT_CHT_CUTT
	WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
	AND CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
	AND CUTT_STTS_CD IN ('20','21')
	AND CUSTOMER_SEQ IS NOT NULL
	ORDER BY REG_DT DESC
) A
WHERE ROWNUM = 1
</select>

<!-- 상담톡에서 상담이력 정보를 조회한다.(상담톡 메인에서 사용) -->	
<select id="selectRtnTalkHistInfo"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
SELECT PCC.CUST_ID
	, (SELECT DSPTCH_PRF_KEY
		FROM PLT_CUSTCO_CHN
		WHERE SNDR_KEY = PCC.SNDR_KEY) AS  DSPTCH_PRF_KEY
	, PCC.SNDR_KEY
	, PCC.CHT_CUTT_ID
	, PCC.QSTN_CHC_RDY_DT
	, PCC.CHN_CLSF_CD
	, PCC.ALTMNT_RDY_REG_DT
FROM PLT_CHT_CUTT PCC
WHERE CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
</select>

<!-- 수신대기 건수 조회 -->
<select id="selectRtnUserReady"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
SELECT COUNT(*) AS READY_CNT
  FROM PLT_CHT_USER_RDY
 WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
   AND USER_ID = #{USER_ID}
</select>

<!-- 대기중일 때 고객이 포기한 건인 지 체크 조회
     * 고객포기건인 경우 데이터 COUNT=0 -->
<select id="selectRtnGiveupUserReady"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
SELECT COUNT(*) AS GIVEUP_CNT
  FROM PLT_CHT_USER_RDY
 WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
   AND USER_ID = #{USER_ID}
   AND CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
   AND TALK_READY_CD IN ('11','13')
</select>

<!-- 안내메세지 - 고객 무응답 발송건 조회 -->
<select id="selectInfoMsg"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
	SELECT 		/* selectCustNoResponseMsg - 고객 무응답 메시지 발송건 조회 */
		CUTT.*
	FROM (SELECT PCC.CHT_CUTT_ID			/* 채팅상담ID */
			, PCC.SNDR_KEY				/* 발신프로필ID */
			, PCC.CUSTCO_ID				/* 고객사ID */
			, PCC.CUSL_ID				/* 사용자ID */
			, PCC.CUSL_ID AS USER_ID	/* 사용자ID */
			, PCC.CUST_ID				/* 고객ID */
			, (SELECT CHT_USER_KEY
				FROM PLT_CHT_CUST
				WHERE CUST_ID = PCC.CUST_ID
					AND SNDR_KEY = PCC.SNDR_KEY) CHT_USER_KEY	/* 채팅고객KEY */
			, PCC.CHN_CLSF_CD			/* 채팅채널 유형 */
			, (SELECT MSG_CN
				FROM PLT_CHT_CUSTCO_SYS_MSG
				WHERE CUSTCO_ID = PCC.CUSTCO_ID
					AND SYS_MSG_ID = '1'::INTEGER
				ORDER BY MSG_HR ASC
				OFFSET (SELECT COUNT(CHT_CUTT_DTL_ID)
						FROM PLT_CHT_CUTT_DTL
						WHERE CHT_CUTT_ID = PCC.CHT_CUTT_ID
							AND SYS_MSG_ID = '1'::INTEGER
						)
				LIMIT 1) AS MSG_CN			/* 배정대기 종료 메시지 */
			, (SELECT MSG_TYPE_CD
				FROM PLT_CHT_SYS_MSG
				WHERE SYS_MSG_ID = '1'::INTEGER)	AS MSG_TYPE_CD			/* 배정대기 메시지 구분 코드 */
			, (SELECT MSG_SE_CD
				FROM PLT_CHT_SYS_MSG
				WHERE SYS_MSG_ID = '1'::INTEGER)	AS MSG_SE_CD			/* 배정대기 메시지 유형 코드 */
			, (SELECT MSG_HR
				FROM PLT_CHT_CUSTCO_SYS_MSG
				WHERE CUSTCO_ID = PCC.CUSTCO_ID
					AND SYS_MSG_ID = '1'::INTEGER
				ORDER BY MSG_HR ASC
				OFFSET (SELECT COUNT(CHT_CUTT_DTL_ID)
						FROM PLT_CHT_CUTT_DTL
						WHERE CHT_CUTT_ID = PCC.CHT_CUTT_ID
							AND SYS_MSG_ID = '1'::INTEGER
						)
				LIMIT 1) AS ALTMNT_TIME			/* 배정대기 메시지 시간 */
			, (SELECT MAX(MSG_HR)
				FROM PLT_CHT_CUSTCO_SYS_MSG
				WHERE SYS_MSG_ID = '1'::INTEGER	/* 배정대기 메시지 */
				) AS MAX_TIME			/* 배정대기 종료 설정 시간 */
			, (SELECT EXTRACT(EPOCH FROM (NOW() - TO_TIMESTAMP(REG_DT, 'YYYYMMDDHH24MISS'))) / 60) AS MSG_TIME			/* 배정대기 시간 */
		FROM PLT_CHT_CUTT PCC
		WHERE PCC.CUTT_STTS_CD = 'ALTMNT_WAIT' 		/* 배정대기건만 */
			AND PCC.CHN_CLSF_CD NOT IN('EMAIL', 'BBS')		/* 이메일, 게시판 제외 */
		) CUTT
	<![CDATA[
	WHERE CUTT.ALTMNT_TIME < CUTT.MSG_TIME
	]]>   
</select>

<!-- 고객 무응답 메시지 발송건 조회 -->
<select id="selectCustNoResponseMsg"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
	SELECT 		/* selectCustNoResponseMsg - 고객 무응답 메시지 발송건 조회 */
		CUTT.*
	FROM (SELECT PCC.CHT_CUTT_ID			/* 채팅상담ID */
			, PCC.SNDR_KEY				/* 발신프로필ID */
			, PCC.CUSTCO_ID				/* 고객사ID */
			, PCC.CUSL_ID				/* 사용자ID */
			, PCC.CUSL_ID AS USER_ID	/* 사용자ID */
			, PCC.CUST_ID				/* 고객ID */
			, (SELECT CHT_USER_KEY
				FROM PLT_CHT_CUST
				WHERE CUST_ID = PCC.CUST_ID
					AND SNDR_KEY = PCC.SNDR_KEY) CHT_USER_KEY	/* 채팅고객KEY */
			, PCC.CHN_CLSF_CD			/* 채팅채널 유형 */
			, (SELECT MSG_CN
				FROM PLT_CHT_CUSTCO_SYS_MSG
				WHERE CUSTCO_ID = PCC.CUSTCO_ID
					AND SYS_MSG_ID = '6'::INTEGER
				ORDER BY MSG_HR ASC
				OFFSET (SELECT COUNT(CHT_CUTT_DTL_ID)
						FROM PLT_CHT_CUTT_DTL
						WHERE CHT_CUTT_ID = PCC.CHT_CUTT_ID
							AND SYS_MSG_ID = '6'::INTEGER
							AND REG_DT > (SELECT REG_DT
											FROM PLT_CHT_CUTT_DTL
											WHERE CHT_CUTT_ID = PCC.CHT_CUTT_ID
											AND (
												(RCPTN_DSPTCH_CD = 'SND' and (SYS_MSG_ID != '6' OR SYS_MSG_ID IS NULL ))
												OR MSG_TYPE_CD = 'SKIPON'
												OR MSG_TYPE_CD = 'SKIPOFF'
												)
												ORDER BY REG_DT DESC
												LIMIT 1)
						)
				LIMIT 1) AS MSG_CN			/* 무응답 종료 메시지 */
			, (SELECT MSG_TYPE_CD
				FROM PLT_CHT_SYS_MSG
				WHERE SYS_MSG_ID = '6'::INTEGER)	AS MSG_TYPE_CD			/* 무응답 메시지 구분 코드 */
			, (SELECT MSG_SE_CD
				FROM PLT_CHT_SYS_MSG
				WHERE SYS_MSG_ID = '6'::INTEGER)	AS MSG_SE_CD			/* 무응답 메시지 유형 코드 */
			, (SELECT MSG_HR
				FROM PLT_CHT_CUSTCO_SYS_MSG
				WHERE CUSTCO_ID = PCC.CUSTCO_ID
					AND SYS_MSG_ID = '6'::INTEGER
				ORDER BY MSG_HR ASC
				OFFSET (SELECT COUNT(CHT_CUTT_DTL_ID)
						FROM PLT_CHT_CUTT_DTL
						WHERE CHT_CUTT_ID = PCC.CHT_CUTT_ID
							AND SYS_MSG_ID = '6'::INTEGER
							AND REG_DT > (SELECT REG_DT
											FROM PLT_CHT_CUTT_DTL
											WHERE CHT_CUTT_ID = PCC.CHT_CUTT_ID
											AND (
												(RCPTN_DSPTCH_CD = 'SND' AND (SYS_MSG_ID != '6' OR SYS_MSG_ID IS NULL ))
												OR MSG_TYPE_CD = 'SKIPON'
												OR MSG_TYPE_CD = 'SKIPOFF'
												)
												ORDER BY REG_DT DESC
												LIMIT 1)
						)
				LIMIT 1) AS NORESP_TIME			/* 무응답 메시지 시간 */
			, (SELECT MAX(MSG_HR)
				FROM PLT_CHT_CUSTCO_SYS_MSG
				WHERE SYS_MSG_ID = '6'::INTEGER	/* 고객무응답 메시지 */
				) AS MAX_TIME			/* 무응답 종료 설정 시간 */
			, (SELECT EXTRACT(EPOCH FROM (NOW() - TO_TIMESTAMP(REG_DT, 'YYYYMMDDHH24MISS'))) / 60
				FROM PLT_CHT_CUTT_DTL
				WHERE CHT_CUTT_ID = PCC.CHT_CUTT_ID
				AND (
					(RCPTN_DSPTCH_CD = 'SND' AND (SYS_MSG_ID != '6' OR SYS_MSG_ID IS NULL ))
					OR MSG_TYPE_CD = 'SKIPON'
					OR MSG_TYPE_CD = 'SKIPOFF'
					)
				ORDER BY REG_DT DESC
				LIMIT 1
				) AS MSG_TIME			/* 무응답 시간 */
		FROM PLT_CHT_CUTT PCC
		WHERE PCC.CUTT_STTS_CD = 'ING' 		/* 상담중건만 */
			AND PCC.CHN_CLSF_CD NOT IN('EMAIL', 'BBS')		/* 이메일, 게시판 제외 */
			AND (PCC.SYS_MSG_SKIP_YN = 'Y' or PCC.SYS_MSG_SKIP_YN iS NULL)	/* 시스템 메시지 허용채팅 */
			AND (SELECT RCPTN_DSPTCH_CD
				FROM PLT_CHT_CUTT_DTL
				WHERE CHT_CUTT_ID = PCC.CHT_CUTT_ID
					AND MSG_TYPE_CD != 'SKIPON'
					AND MSG_TYPE_CD != 'SKIPOFF'	/* 시스템 메시지 스킵 표시 - 실제 대화내용 아님 */
					AND SYS_MSG_ID IS NULL			/* 시스템 메시지가 아닌 채팅기준 */
				ORDER BY REG_DT DESC
				LIMIT 1) = 'SND') CUTT
	<![CDATA[
	WHERE CUTT.NORESP_TIME < CUTT.MSG_TIME
	]]>   
		AND EXISTS (SELECT 1
					FROM PLT_CHT_STNG
					WHERE STNG_CD = 'CUST_NORESP_USE_YN'
					AND STNG_VL = 'Y')
</select>

<!-- 상담 대기에서 상담 이력으로 데이터 이관 -->	
<insert id="insertRtnTalkHistInfo"  parameterType= "java.util.HashMap">
	INSERT INTO PLT_CHT_CUTT
		(
			CHT_CUTT_ID
			, CUSTCO_ID
			, CUST_ID
			, SNDR_KEY
			, CUSL_ID
			, CUTT_BGNG_DT
			, CHN_CLSF_CD
			, CUTT_STTS_CD
			, CUTT_RDY_REG_DT
			, QSTN_CHC_RDY_DT
		    , CHBT_YN
		    , CHBT_STTS_CD
		    , QSTN_TYPE_ID
		    , CLBK_YN
		    , CLBK_YMD
		    , CLBK_BGNG_DT
		    , CHBT_SRVC_NM
		    , CHBT_SRVC_CD
		    , CHBT_QSTN_TYPE_NM
		    , CHBT_QSTN_TYPE_CD
		    , CHBT_DMND_ID
		    , DSGN_CUSL_ID
		    , RGTR_ID
		    , REG_DT
		    , MDFR_ID
		    , MDFCN_DT
		)
		SELECT #{CHT_CUTT_ID}::INTEGER
			, PCR.CUSTCO_ID
			, PCR.CUST_ID
			, PCR.SNDR_KEY
			, PCR.CUSL_ID
			, TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
			, PCR.CHN_TYPE_CD
			, 'ING'
			, PCR.ALTMNT_RDY_REG_DT
			, PCR.CUTT_RDY_REG_DT
			, PCR.QSTN_CHC_RDY_DT
		    , PCR.CHBT_YN
		    , PCR.CHBT_STTS_CD
		    , PCR.QSTN_TYPE_ID
		    , PCR.CLBK_YN
		    , PCR.CLBK_DT
		    , PCR.CLBK_BGNG_DT
		    , PCR.CHBT_SRVC_NM
		    , PCR.CHBT_SRVC_CD
		    , PCR.CHBT_QSTN_TYPE_NM
		    , PCR.CHBT_QSTN_TYPE_CD
		    , PCR.CHBT_DMND_ID
		    , PCR.DSGN_CUSL_ID
		    , #{USER_ID}::INTEGER
		    , TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		    , #{USER_ID}::INTEGER
		    , TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		FROM PLT_CHT_RDY PCR
		WHERE CHT_RDY_ID = #{CHT_RDY_ID}::INTEGER
</insert>

<!-- 상담 상태 변경하기 -->
<update id="updateRtnTalkHistInfo" parameterType="java.util.HashMap">
	UPDATE 		/* updateRtnTalkHistInfo - 상담 상태 변경 */
		PLT_CHT_CUTT
	SET CUTT_STTS_CD = 'ING'
		, CUTT_BGNG_DT = TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		, MDFR_ID = #{USER_ID}::INTEGER
		, MDFCN_DT = TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
	WHERE CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
</update>

<!-- 상담 불가 상태 업데이트 -->
<update id="updateChtCuttCant" parameterType="java.util.HashMap">
	UPDATE 		/* updateChtCuttCant - 상담 불가 상태 업데이트 */
		PLT_CHT_CUTT
	SET CUTT_STTS_CD = 'DMND_NPSBL'
		, PRCS_RSLT_CD = 'DMND_NPSBL'
		, MDFR_ID = #{USER_ID}::INTEGER
		, MDFCN_DT = TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		, CUSL_ID = NULL
		, CUTT_RDY_REG_DT = NULL
	WHERE CUTT_STTS_CD IN ('ALTMNT_WAIT','WAIT')
		AND SNDR_KEY = #{SNDR_KEY}::INTEGER
		AND CUST_ID = (SELECT CUST_ID
						FROM PLT_CHT_CUST
						WHERE CHT_USER_KEY = #{CHT_USER_KEY}
						ORDER BY CUST_ID
   						LIMIT 1)::INTEGER
</update>

<!-- 전달받은 상담 대기 상담유형 저장하기 -->
<update id="updateRtnTalkHistCnslInfo" parameterType="java.util.HashMap">
	UPDATE 		/* updateRtnTalkHistCnslInfo - 전달받은 상담 대기 상담유형 저장 */
		PLT_CHT_CUTT
	SET CUTT_TYPE_ID = (SELECT CUTT_TYPE_ID
	   						FROM PLT_CHT_CUTT_HSTRY
	   						WHERE CHT_CUTT_ID = #{DLVR_CUTT_HSTRY_ID}::INTEGER
	   							AND CUTT_STTS_CD = 'CMPL_TRAN'
   							ORDER BY REG_DT DESC, CHT_CUTT_HSTRY_ID DESC
   							LIMIT 1)
	WHERE CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
</update>

<!-- 상담 대기 상세에서 상담 이력 상세로 데이터 이관 -->	
<insert id="insertRtnTalkHistDetailInfo"  parameterType= "java.util.HashMap">
INSERT INTO 		/* insertRtnTalkHistDetailInfo - 상담 대기 상세에서 상담 이력 상세로 데이터 이관 */
	PLT_CHT_USER_RDY_HSTRY
     (
		CHT_USER_HSTRY_ID
		, CUST_ID
		, CUSTCO_ID
		, CUSL_ID
		, SNDR_KEY
		, ALTMNT_STTS_CD
		, ALTMNT_RDY_REG_DT
		, CUTT_RDY_REG_DT
		, QSTN_CHC_RDY_DT
		, MSG_HR
		, CHBT_YN
		, CHBT_STTS_CD
		, QSTN_TYPE_ID
		, CLBK_DT
		, CLBK_BGNG_DT
		, CLBK_YN
		, RTNG_RTRY_CNT
		, CHBT_SRVC_NM
		, CHBT_SRVC_CD
		, CHBT_QSTN_TYPE_NM
		, CHBT_QSTN_TYPE_CD
		, CHBT_DMND_ID
		, CHN_TYPE_CD
		, DSGN_CUSL_ID
		, RGTR_ID
		, REG_DT
		, MDFR_ID
		, MDFCN_DT
     )
	SELECT 
		#{CHT_USER_HSTRY_ID}::INTEGER
		, CUST_ID
		, CUSTCO_ID
		, CUSL_ID
		, SNDR_KEY
		, ALTMNT_STTS_CD
		, ALTMNT_RDY_REG_DT
		, CUTT_RDY_REG_DT
		, QSTN_CHC_RDY_DT
		, MSG_HR
		, CHBT_YN
		, CHBT_STTS_CD
		, QSTN_TYPE_ID
		, CLBK_DT
		, CLBK_BGNG_DT
		, CLBK_YN
		, RTNG_RTRY_CNT
		, CHBT_SRVC_NM
		, CHBT_SRVC_CD
		, CHBT_QSTN_TYPE_NM
		, CHBT_QSTN_TYPE_CD
		, CHBT_DMND_ID
		, CHN_TYPE_CD
		, DSGN_CUSL_ID
		, '2'::INTEGER
   		, TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		, '2'::INTEGER
   		, TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
	FROM PLT_CHT_RDY
	WHERE 
	<choose>
		<when test="CHT_RDY_ID != '' and CHT_RDY_ID != null and CHT_RDY_ID != undefined">
			CHT_RDY_ID = #{CHT_RDY_ID}::INTEGER
		</when>
		<otherwise>
			CHT_RDY_ID = (SELECT CHT_RDY_ID
							FROM PLT_CHT_RDY
							WHERE SNDR_KEY = #{SNDR_KEY}::INTEGER
								AND CUST_ID = (SELECT CUST_ID
												FROM PLT_CHT_CUST
												WHERE CHT_USER_KEY = #{CHT_USER_KEY}
												ORDER BY CUST_ID
	   											LIMIT 1)::INTEGER)::INTEGER
		</otherwise>
	</choose> 

</insert>

<!-- 상담 대기에서 상담대기이력으로 데이터 저장 -->	
<insert id="insertRtnTalkReadyHist"  parameterType= "java.util.HashMap">
INSERT INTO 		/* insertRtnTalkReadyHist - 상담 대기에서 상담대기이력으로 데이터 저장 */
	PLT_CHT_USER_RDY_HSTRY
	(
		CHT_USER_HSTRY_ID
		, CUST_ID
		, CUSTCO_ID
		, CUSL_ID
		, SNDR_KEY
		, ALTMNT_STTS_CD
		, ALTMNT_RDY_REG_DT
		, CUTT_RDY_REG_DT
		, QSTN_CHC_RDY_DT
		, MSG_HR
		, CHBT_YN
		, CHBT_STTS_CD
		, QSTN_TYPE_ID
		, PRCS_RSLT_CD
		, CLBK_DT
		, CLBK_BGNG_DT
		, CLBK_YN
		, CHBT_SRVC_NM
		, CHBT_SRVC_CD
		, CHBT_QSTN_TYPE_NM
		, CHBT_QSTN_TYPE_CD
		, CHBT_DMND_ID
		, CHN_TYPE_CD
		, DSGN_CUSL_ID
		, RGTR_ID
		, REG_DT
		, MDFR_ID
		, MDFCN_DT
	)
	SELECT #{CHT_USER_HSTRY_ID}::INTEGER
		, CUST_ID
		, CUSTCO_ID
		, CUSL_ID
		, SNDR_KEY
		, ALTMNT_STTS_CD
		, ALTMNT_RDY_REG_DT
		, CUTT_RDY_REG_DT
		, QSTN_CHC_RDY_DT
		, MSG_HR
		, CHBT_YN
		, CHBT_STTS_CD
		, QSTN_TYPE_ID
		, ALTMNT_STTS_CD
		, CLBK_DT
		, CLBK_BGNG_DT
		, CLBK_YN
		, CHBT_SRVC_NM
		, CHBT_SRVC_CD
		, CHBT_QSTN_TYPE_NM
		, CHBT_QSTN_TYPE_CD
		, CHBT_DMND_ID
		, CHN_TYPE_CD
		, DSGN_CUSL_ID
		, RGTR_ID
		, TO_CHAR(NOW() ,'YYYYMMDDHH24MISS')
		, MDFR_ID
		, TO_CHAR(NOW() ,'YYYYMMDDHH24MISS')
		FROM PLT_CHT_RDY
		WHERE
		<choose>
			<when test="CHT_RDY_ID != '' and CHT_RDY_ID != null and CHT_RDY_ID != undefined">
				CHT_RDY_ID = #{CHT_RDY_ID}::INTEGER
			</when>
			<otherwise>
				CHT_RDY_ID = (SELECT CHT_RDY_ID
								FROM PLT_CHT_RDY
								WHERE SNDR_KEY = #{SNDR_KEY}::INTEGER
									AND CUST_ID = (SELECT CUST_ID
													FROM PLT_CHT_CUST
													WHERE CHT_USER_KEY = #{CHT_USER_KEY}
													ORDER BY CUST_ID
	   												LIMIT 1)::INTEGER
								ORDER BY CHT_RDY_ID
								LIMIT 1)::INTEGER
			</otherwise>
		</choose> 
</insert>


<!-- 상담 대기 데이터 삭제 -->	
<delete id="deleteRtnTalkReadyInfo"  parameterType= "java.util.HashMap">
	DELETE 		/* deleteRtnTalkReadyInfo - 상담 대기 데이터 삭제 */
		FROM PLT_CHT_RDY 
	WHERE 
	<choose>
		<when test="CHT_RDY_ID != '' and CHT_RDY_ID != null and CHT_RDY_ID != undefined">
			CHT_RDY_ID = #{CHT_RDY_ID}::INTEGER
		</when>
		<otherwise>
			CHT_RDY_ID = (SELECT CHT_RDY_ID
							FROM PLT_CHT_RDY
							WHERE SNDR_KEY = #{SNDR_KEY}::INTEGER
								AND CUST_ID = (SELECT CUST_ID
												FROM PLT_CHT_CUST
												WHERE CHT_USER_KEY = #{CHT_USER_KEY}
												ORDER BY CUST_ID
   												LIMIT 1)::INTEGER
   								LIMIT 1)::INTEGER
		</otherwise>
	</choose> 
</delete>

<!-- 상담 대기 데이터 삭제 -->	
<update id="updateTalkReadyInfo"  parameterType= "java.util.HashMap">
	UPDATE 		/* updateTalkReadyInfo - 상담 이력 데이터 상태 업데이트 */
		PLT_CHT_CUTT
	SET CUTT_STTS_CD = 'CUSL_ALTMNT_NPSBL'
		, PRCS_RSLT_CD = 'CUSL_ALTMNT_NPSBL'
		, CUTT_END_DT = TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
		, MDFR_ID = '2'::INTEGER
		, MDFCN_DT = TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
	WHERE 
	<choose>
		<when test="CHT_CUTT_ID != '' and CHT_CUTT_ID != null and CHT_CUTT_ID != undefined">
			CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
		</when>
		<otherwise>
			CHT_CUTT_ID = (SELECT CHT_CUTT_ID
							FROM PLT_CHT_CUTT
							WHERE SNDR_KEY = #{SNDR_KEY}::INTEGER
								AND CUST_ID = (SELECT CUST_ID
												FROM PLT_CHT_CUST
												WHERE CHT_USER_KEY = #{CHT_USER_KEY}
							ORDER BY CUST_ID
	   											LIMIT 1)::INTEGER
								AND CUTT_STTS_CD = 'ALTMNT_WAIT')::INTEGER
		</otherwise>
	</choose> 
</update>

<!-- 상담 대기 상세 데이터 삭제 -->	
<delete id="deleteRtnTalkReadyDetailInfo"  parameterType= "java.util.HashMap">
DELETE FROM PLT_CHT_USER_RDY_DTL 
 WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
   AND CUST_ID =#{CUST_ID}
</delete>


<!-- 상담 대기 데이터 삭제 -->	
<delete id="deleteRtnTalkReadyQstnInfo"  parameterType= "java.util.HashMap">
DELETE 
	FROM PLT_CHT_RDY 
	WHERE SNDR_KEY = #{SNDR_KEY}::INTEGER
		AND CUST_ID = (SELECT CUST_ID
						FROM PLT_CHT_CUST
						WHERE CHT_USER_KEY = #{CHT_USER_KEY}
						ORDER BY CUST_ID
   						LIMIT 1)::INTEGER
		AND ALTMNT_STTS_CD = 'QSTN_CHCING'
</delete>

<!-- 상담 대기 데이터 체크 -->	
<select id="existsTalkReadyByTalkUserKey"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
SELECT 1 
	FROM PLT_CHT_RDY 
 	WHERE SNDR_KEY = #{SNDR_KEY}::INTEGER
		AND CUST_ID = (SELECT CUST_ID
						FROM PLT_CHT_CUST
						WHERE CHT_USER_KEY = #{CHT_USER_KEY}
						ORDER BY CUST_ID
   						LIMIT 1)::INTEGER
</select>

<!-- 상담 대기 상세 데이터 삭제 -->	
<delete id="deleteRtnTalkReadyDetailInfoNotExistMaster"  parameterType= "java.util.HashMap">
DELETE FROM PLT_CHT_USER_RDY_DTL 
 WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
   AND CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
   AND NOT EXISTS ( SELECT 1 
					  FROM PLT_CHT_USER_RDY M
					 WHERE M.CUSTCO_ID  = CUSTCO_ID
                       AND M.CUST_ID = CUST_ID
				  )
</delete>

<!--
<resultMap id="chatContentResultMap" type="java.util.HashMap" >
	<result property="CUST_ID"        column="CUST_ID"          jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="CONTENT"              column="CONTENT"                jdbcType="VARCHAR"         javaType="java.lang.String" typeHandler="ContentCipherTypeHandler"/>
	<result property="CHAT_DATE"            column="CHAT_DATE"              jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="RCPTN_DSPTCH_CD"            column="RCPTN_DSPTCH_CD"              jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="CUSTOMER_NM"          column="CUSTOMER_NM"            jdbcType="VARCHAR"         javaType="java.lang.String" typeHandler="ContentCipherTypeHandler"/>
	<result property="CUSTOMER_NM2"         column="CUSTOMER_NM2"           jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="CUSTOMER_NM3"         column="CUSTOMER_NM3"           jdbcType="VARCHAR"         javaType="java.lang.String" typeHandler="ContentCipherTypeHandler"/>
	<result property="TYPE"                 column="TYPE"                   jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="IMAGE_URL"            column="IMAGE_URL"              jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="IMAGE_TALK_PATH"      column="IMAGE_TALK_PATH"        jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="LINKS"                column="LINKS"                  jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="SNDR_KEY_NM"    column="SNDR_KEY_NM"      jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="TYPE_NM"              column="TYPE_NM"                jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="USER_ID"              column="USER_ID"                jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="REG_DT"        column="REG_DT"          jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="REG_DT2"       column="REG_DT2"         jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="ORDER_NUMBER"         column="ORDER_NUMBER"           jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="CUSTOMER_SEQ"         column="CUSTOMER_SEQ"           jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="MEMBER_YN"            column="MEMBER_YN"              jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="VIDEO_TALK_PATH"      column="VIDEO_TALK_PATH"        jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="VIDEO_URL"            column="VIDEO_URL"              jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="VIDEO_THUMNAIL_PATH"  column="VIDEO_THUMNAIL_PATH"    jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="ORG_CONT_ID"          column="ORG_CONT_ID"            jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="ORG_FILE_ID"          column="ORG_FILE_ID"            jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="TALK_SERIAL_NUMBER"   column="TALK_SERIAL_NUMBER"     jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="CHT_CUTT_ID"   	column="CHT_CUTT_ID"     	jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="CUTT_STTS_CD"   		column="CUTT_STTS_CD"     		jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="TALK_STAT_NM"   		column="TALK_STAT_NM"     		jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="CHN_CLSF_CD"   		column="CHN_CLSF_CD"     		jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="SEND_USER_NM"   		column="SEND_USER_NM"     		jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="SEND_USER_SHORT_NM"   column="SEND_USER_SHORT_NM"     jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="SNDR_KEY"   	column="SNDR_KEY"     	jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="IS_READ"   			column="IS_READ"     			jdbcType="VARCHAR"         javaType="java.lang.String"/>
	<result property="ORG_FILE_ID"   		column="ORG_FILE_ID"     		jdbcType="VARCHAR"         javaType="java.lang.String"/>
</resultMap>  
-->

<!-- 상담 내역을 가져온다. -->
<!--
<select id="selectRtnChatContent"  parameterType= "java.util.HashMap" resultMap="chatContentResultMap">
-->
<select id="selectRtnChatContent"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
	SELECT 			/* selectRtnChatContent - 상담 내역을 가져온다. */
		PCCD.CHT_CUTT_DTL_ID			/* 채팅상세ID */
		, PCCD.RCPTN_DSPTCH_CD			/* 수발신코드 */
		, (SELECT CD_NM
			FROM PLT_COMM_CD
			WHERE GROUP_CD_ID = 'MESG_SND_RCV'
				AND CD_ID = PCCD.RCPTN_DSPTCH_CD
				AND CUSTCO_ID = #{CUSTCO_ID}::INTEGER)	/* 수발신명 */
		, PCCD.RCPTN_SNDPTY_ID			/* 수발신자ID */
		, PCCD.MSG_TYPE_CD				/* 메시지유형 */
		, CASE WHEN PCCD.MSG_TYPE_CD = 'RSVT' THEN (SELECT RSVT_DT
													FROM PLT_RSVT
													WHERE RSVT_ID = (SELECT RSVT_ID
																	FROM PLT_CHT_CUTT_RSVT
																	WHERE CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER)::INTEGER)
				ELSE NULL
				END AS RSVT_DT
		, CASE WHEN PCCD.MSG_TYPE_CD = 'QSTN' THEN (SELECT STRING_AGG(RSVT_BTN.QSTN_TYPE_NM || '||', '') 
													FROM (SELECT QSTN_TYPE_NM
															FROM PLT_CHT_QSTN_TYPE
															WHERE UP_QSTN_TYPE_ID = REPLACE(PCCD.RCPTN_DSPTCH_MSG,'BACK_','')::INTEGER
																AND QSTN_TYPE_CD = 'RSVT')RSVT_BTN) 
				ELSE NULL
				END AS RSVT_BTN
		--, PCCD.RCPTN_DSPTCH_MSG			/* 수발신메시지 */
		, PCCD.RCPTN_DSPTCH_MSG			/* 수발신메시지 */
		--, PCCD.CHG_RCPTN_DSPTCH_MSG			/* 수발신메시지 */
		, COALESCE(PCCD.CHG_RCPTN_DSPTCH_MSG, PCCD.RCPTN_DSPTCH_MSG) AS CHG_RCPTN_DSPTCH_MSG		/* 수발신메시지 */
		, CASE WHEN PCCD.MSG_TYPE_CD = 'QSTN' 
				AND (SELECT UP_QSTN_TYPE_ID FROM PLT_CHT_QSTN_TYPE WHERE QSTN_TYPE_ID = REPLACE(PCCD.RCPTN_DSPTCH_MSG,'BACK_','')::INTEGER) IS NOT NULL
			THEN (SELECT QSTN_TYPE_NM FROM PLT_CHT_QSTN_TYPE WHERE QSTN_TYPE_ID = REPLACE(PCCD.RCPTN_DSPTCH_MSG,'BACK_','')::INTEGER)
			ELSE ''
			END AS QSTN_TYPE_NM		/* 문의유형 제목 */
		, CASE WHEN PCCD.MSG_TYPE_CD = 'QSTN'
				AND (SELECT COUNT(QSTN_TYPE_ID) FROM PLT_CHT_QSTN_TYPE WHERE UP_QSTN_TYPE_ID = REPLACE(PCCD.RCPTN_DSPTCH_MSG,'BACK_','')::INTEGER) = '1'
			THEN (CASE WHEN (SELECT QSTN_TYPE_CD FROM PLT_CHT_QSTN_TYPE WHERE UP_QSTN_TYPE_ID = REPLACE(PCCD.RCPTN_DSPTCH_MSG,'BACK_','')::INTEGER) = 'INFO_MSG'
					THEN ''
					ELSE (SELECT QSTN_TYPE_EXPLN FROM PLT_CHT_QSTN_TYPE WHERE QSTN_TYPE_ID = REPLACE(PCCD.RCPTN_DSPTCH_MSG,'BACK_','')::INTEGER)
					END)
			WHEN PCCD.MSG_TYPE_CD = 'QSTN'
				AND (SELECT COUNT(QSTN_TYPE_ID) FROM PLT_CHT_QSTN_TYPE WHERE UP_QSTN_TYPE_ID = REPLACE(PCCD.RCPTN_DSPTCH_MSG,'BACK_','')::INTEGER) = '0'
			THEN ''
			WHEN PCCD.MSG_TYPE_CD = 'QSTN'
			THEN (SELECT QSTN_TYPE_EXPLN FROM PLT_CHT_QSTN_TYPE WHERE QSTN_TYPE_ID = REPLACE(PCCD.RCPTN_DSPTCH_MSG,'BACK_','')::INTEGER)
			ELSE ''
			END AS QSTN_TYPE_MSG	/* 문의유형 내용 */
		, CASE WHEN PCCD.MSG_TYPE_CD = 'QSTN'
			THEN (SELECT STRING_AGG(BTN.QSTN_TYPE_NM || '||', '') 
					FROM (SELECT QSTN_TYPE_NM 
							FROM PLT_CHT_QSTN_TYPE 
							WHERE UP_QSTN_TYPE_ID = REPLACE(PCCD.RCPTN_DSPTCH_MSG,'BACK_','')::INTEGER 
							ORDER BY SORT_ORD) BTN)
			ELSE ''
			END AS BTN_LIST			/* 문의유형 버튼 목록 */
		, PCCD.FILE_GROUP_KEY			/* 파일그룹키 */
		--, PF.FILE_KEY					/* 파일키 */
		--, PF.FILE_PATH					/* 파일경로 */
		--, PF.PATH_TYPE_CD				/* 파일경로유형 */
		--, PF.STRG_FILE_NM				/* 저장파일명 */
		, PCCD.AUTO_RSPNS_MSG			/* 자동응답 메시지 */
	   	, PCCD.LNK_INFO					/* 링크정보 */
	   	, PCCD.VIDEO_PATH				/* 비디오 경로 */
	   	, PCCD.VIDEO_URL				/* 비디오URL */
	   	, PCCD.VIDEO_THUMNAIL_PATH		/* 비디오 썸네일정보 */
	   	, PCCD.READ_YN					/* 읽음여부 */
	   	, PCCD.SYS_MSG_ID				/* 시스템메시지ID */
	   	, PCSM.MSG_CN					/* 시스템 메시지 내용 */
	   	, PCCD.REG_DT					/* 등록(채팅)일자*/
	FROM PLT_CHT_CUTT_DTL PCCD
	/* LEFT JOIN PLT_FILE PF ON PF.FILE_GROUP_KEY = PCCD.FILE_GROUP_KEY */
	LEFT JOIN PLT_CHT_SYS_MSG PCSM ON PCSM.SYS_MSG_ID = PCCD.SYS_MSG_ID
	WHERE PCCD.CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
	ORDER BY PCCD.REG_DT, PCCD.CHT_CUTT_DTL_ID ASC
</select>


<select id="selectRtnChatCuttEmail"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
	SELECT 	/* kr.co.hkcloud.palette3.chat.main.dao.ChatMainMapper.selectRtnChatCuttEmail - 채팅 상담_이메일 내역을 가져온다. */
		CCM.CHT_CUTT_EML_ID
		, CCM.SNDR_KEY
		, CCM.CHT_CUTT_ID
		, CCM.RCPTN_DT
		, CCM.SNDR_EML
		, CCM.RCVR_EML
		, CCM.TTL
		, CCM.CN
		, CCM.FILE_GROUP_KEY
		, CCD.MSG_TYPE_CD
		, COALESCE((SELECT EML_SNDNG_ID::VARCHAR FROM PLT_EML_SNDNG_HSTRY WHERE CHT_CUTT_ID = CCM.CHT_CUTT_ID LIMIT 1),'NONE') EML_SNDNG_ID
	FROM PLT_CHT_CUTT_EML CCM
	LEFT JOIN PLT_CHT_CUTT_DTL CCD ON CCD.CHT_CUTT_ID = CCM.CHT_CUTT_ID AND CCD.CUSTCO_ID = #{CUSTCO_ID}::BIGINT
	WHERE CCM.CHT_CUTT_ID = #{CHT_CUTT_ID}::BIGINT
</select>
  <select id="selectRtnChatCuttBbs"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
  SELECT 	/* kr.co.hkcloud.palette3.chat.main.dao.ChatMainMapper.selectRtnChatCuttBbs - 채팅 상담_게시판 상담 내역을 가져온다. */
      (SELECT CUST_NM FROM PLT_CUST WHERE CUST_ID = CC.CUST_ID) AS CUST_NM
       , CCB.CHT_CUTT_BBS_ID
       , CCB.CHT_CUTT_ID
       , ccd.msg_type_cd
       , CCB.SNDR_KEY
       , CCB.INQRY_NO
       , CCB.INQRY_TYPE
       , CCB.ORDR_YN
       , CCB.ORDR_NO
       , CCB.ORDR_DT
       , CCB.GDS_NO
       , CCB.GDS_NM
       , CCB.INQRY_TTL
       , CCB.INQRY_CN
       , CCB.ULD_IMG_URL
       , CCB.ETC_1
       , CCB.ETC_2
       , CCB.ETC_3
       , CCB.WRTR_ID
       , CCB.WRTR_NM
       , CCB.WRT_DT
       , CC.CUTT_STTS_CD
       , CCBA.CHT_CUTT_BBS_ANSWR_ID
       , CCBA.ANSWR_CN
       , CCBA.ANSWR_DT
       , LM.LKAG_BEAN_ID
       , LM.LKAG_MST_ID
  FROM PLT_CHT_CUTT_BBS CCB
         LEFT JOIN PLT_CHT_CUTT_BBS_ANSWR CCBA ON CCBA.cht_cutt_bbs_id = CCB.cht_cutt_bbs_id
         LEFT JOIN PLT_CHT_CUTT_DTL CCD ON CCD.CHT_CUTT_ID = CCB.CHT_CUTT_ID
         LEFT JOIN PLT_CUSTCO_CHN_BBS_STNG CCBS ON CCB.SNDR_KEY = CCBS.SNDR_KEY
         LEFT JOIN CUSTCO.PLT_LKAG_MST LM ON LM.LKAG_MST_ID = CCBS.LKAG_MST_ID
         LEFT JOIN PLT_CHT_CUTT CC ON CC.CHT_CUTT_ID = CCB.CHT_CUTT_ID
  WHERE CCB.CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
  </select>
  <select id="selectBbsParams" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    SELECT  /* kr.co.hkcloud.palette3.chat.main.dao.ChatMainMapper.selectBbsParams - 채팅 상담_게시판 상담 파라미터를 가져온다. */
        CASE WHEN PCCBS.REG_API_ID = PCBPS.API_ID THEN PCCBS.REG_API_ID ELSE NULL END AS REG_API_ID
         , CASE WHEN PCCBS.ORDR_INQ_API_ID = PCBPS.API_ID THEN PCCBS.ORDR_INQ_API_ID ELSE NULL END AS ORDR_INQ_API_ID
         , CASE WHEN PCCBS.GDS_INQ_API_ID = PCBPS.API_ID THEN PCCBS.GDS_INQ_API_ID ELSE NULL END AS GDS_INQ_API_ID
         , PCBPS.SNDR_KEY
         , PCBPS.API_ID
         , PCBPS.PARAM_ARTCL_ID
         , PCBPS.ORGNL_PARAM_NM
         , PCBPS.CHG_PARAM_NM
         , PCBPS.ESNTL_YN
         , PCBPS.ANSWR_PARAM_YN
    FROM PLT_CHN_BBS_PARAM_STNG PCBPS
           LEFT JOIN PLT_CUSTCO_CHN_BBS_STNG PCCBS ON PCCBS.SNDR_KEY = PCBPS.SNDR_KEY
           LEFT JOIN PLT_CUSTCO_CHN PCC ON PCC.SNDR_KEY = PCBPS.SNDR_KEY
    WHERE PCC.CUSTCO_ID = #{CUSTCO_ID}::INTEGER
AND PCBPS.SNDR_KEY = #{SNDR_KEY}::INTEGER
  </select>
  <insert id="insertBbsAnswer" parameterType="java.util.HashMap">
    INSERT INTO PLT_CHT_CUTT_BBS_ANSWR
    (
    CHT_CUTT_BBS_ANSWR_ID
    , CHT_CUTT_BBS_ID
    , ANSWR_CN
    , ANSWR_DT
    , ANSWR_ID
    )
    VALUES(
    #{CHT_CUTT_BBS_ANSWR_ID}::INTEGER
    , #{CHT_CUTT_BBS_ID}::INTEGER
    , #{ANSWR_CN}
    <choose>
      <when test = "ANSWR_DT != '' and ANSWR_DT != null and ANSWR_DT != undefined">
        , #{ANSWR_DT}
      </when>
      <otherwise>
        , TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
      </otherwise>
    </choose>
    , #{USER_ID}::INTEGER
    );
  </insert>
  <!-- 게시판상담 답변 직후 후처리 상태 변경 -->
  <update id="updateCuttSttsBbs" parameterType="java.util.HashMap">
    UPDATE PLT_CHT_CUTT /*	상담이력의 상담중 건을 후처리 상태로 업데이트	*/
    SET CUTT_STTS_CD = 'AFTPRCS'
      , CUTT_END_DT = TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
      , MDFR_ID = #{USER_ID}::INTEGER
	   , MDFCN_DT = TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
    WHERE CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
      AND CUTT_STTS_CD = 'ING'
  </update>

<!-- 상담 상태 변경 -->
<update id="updateTalkStatCd"  parameterType= "java.util.HashMap">
UPDATE PLT_CHT_CUTT
   SET CUTT_STTS_CD = #{CUTT_STTS_CD}
     , AFTPRCS_REG_DT = TO_CHAR(NOW() ,'YYYYMMDDHH24MISS')
     , UPD_DTTM = SYSTIMESTAMP
     , PROC_ID = #{USER_ID}
     , REG_DT = SYSTIMESTAMP
     <if test="CUTT_STTS_CD !='' and CUTT_STTS_CD eq '20'.toString()">
     , CUST_NORSPNS_HR_SUM = COALESCE(CUST_NORSPNS_HR_SUM, 0)  + COALESCE(
												            ( SELECT CASE WHEN LAST_AGENT_MSG_DTTM > LAST_CUST_MSG_DTTM 
															              THEN TRUNC( CAST(NOW() - LAST_AGENT_MSG_DTTM AS INTEGER) * (24*60*60) )
														             END  AS CUST_NONRESPONSE_TIME
													            FROM (
														              SELECT MAX(CASE WHEN RCPTN_DSPTCH_CD='RCV' THEN CAST(B.REG_DT AS DATE) ELSE TO_DATE('','YYYY-MM-DD HH24:MI:SS') END  ) LAST_CUST_MSG_DTTM
															               , MAX(CASE WHEN RCPTN_DSPTCH_CD='SND' THEN CAST(B.REG_DT AS DATE) ELSE TO_DATE('','YYYY-MM-DD HH24:MI:SS') END  ) LAST_AGENT_MSG_DTTM
														                FROM PLT_CHT_CUTT_DTL  B
														               WHERE #{CUSTCO_ID} LIKE ('%' || B.CUSTCO_ID || '%')
														                 AND B.RCPTN_DSPTCH_CD IN ('SND', 'RCV', 'TRAN')
														                 AND B.MSG_TYPE_CD IN ('text', 'photo', 'TX', 'IM', 'SKIPON','SKIPOFF', 'system') /*NOT IN ('reference', 'expried_session' , 'noresponse')*/
														                 AND CHT_CUTT_ID=#{CHT_CUTT_ID}
														               GROUP BY B.CHT_CUTT_ID                
													                 ) R2
												            )
											               , 0)
	</if>		 
 
 WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
   AND CHT_CUTT_ID = #{CHT_CUTT_ID}
</update>

<!-- 메시지 read 여부값 변경 SJH 20190107-->
<update id="updateIsReadTalk"  parameterType= "java.util.HashMap">
UPDATE PLT_CHT_CUTT_DTL 
   SET IS_READ = #{IS_READ}
 WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
   AND CHT_CUTT_ID = #{CHT_CUTT_ID}
   AND TALK_SERIAL_NUMBER = #{TALK_SERIAL_NUMBER}
</update>

<!-- 메시지 read 여부값 변경 all SJH 20190107-->
<update id="updateIsReadTalkAll"  parameterType= "java.util.HashMap">
UPDATE PLT_CHT_CUTT_DTL 
   SET IS_READ = #{IS_READ}
 WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
   AND CHT_CUTT_ID = #{CHT_CUTT_ID}
   AND RCPTN_DSPTCH_CD = 'RCV'
</update>

<!-- 메시지 삭제 기능 LSM 20190430-->
<update id="updateRemoveConent"  parameterType= "java.util.HashMap">
UPDATE PLT_CHT_CUTT_DTL 
   SET CONTENT = #{MSG_CN}
   		, TYPE = #{TYPE}
   		, LINKS = ''
   		, IMAGE_URL = ''
   		, ORG_FILE_ID = NULL
   		, UPD_DTTM = SYSTIMESTAMP
 WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
   AND CHT_CUTT_ID = #{CHT_CUTT_ID}
   AND TALK_SERIAL_NUMBER = #{TALK_SERIAL_NUMBER}
</update>

<!-- 삭제할 메시지 타입체크 LSM 20190502-->
<select id="selectRemoveConentCheck"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
SELECT TYPE FROM PLT_CHT_CUTT_DTL
	WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
   AND CHT_CUTT_ID = #{CHT_CUTT_ID}
	AND TALK_SERIAL_NUMBER = #{TALK_SERIAL_NUMBER}
</select>

<!-- 전달 처리 -->
<update id="updateTalkTrans"  parameterType= "java.util.HashMap">
UPDATE PLT_CHT_CUTT
	SET CUTT_STTS_CD = #{PRCS_RSLT_CD}
   		, MDFR_ID = #{USER_ID}::INTEGER
   		, MDFCN_DT = TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
 WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
   AND CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
</update>


<!-- 상담 이력 저장 , 상담중인 경우 상담이력 저장으로 완료일을 저장하지 않는다. SJH , 20181102 -->
<update id="updateRtnTalkHist"  parameterType= "java.util.HashMap">
	UPDATE PLT_CHT_CUTT
	SET CUTT_TYPE_ID  = #{CUTT_TYPE_ID}::INTEGER
		<if test="CUTT_TTL != ''and CUTT_TTL != null and CUTT_TTL != undefined">
			, CUTT_TTL = #{CUTT_TTL}
		</if>
		, CUTT_CN = #{CUTT_CN}
    <if test="PRCS_RSLT_CD != ''and PRCS_RSLT_CD != null and PRCS_RSLT_CD != undefined">
		, PRCS_RSLT_CD = #{PRCS_RSLT_CD}
	  </if>
		, CUTT_STTS_CD = #{CUTT_STTS_CD}
		<if test='CLBK_YN != "N"'>
			, CLBK_YN = #{CLBK_YN}
			, CLBK_YMD = #{CLBK_YMD}
			, CLBK_BGNG_DT = #{CLBK_YMD}
		</if>
		, CUTT_HSTRY_REG_DT = TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		, MDFR_ID = #{USER_UD}::INTEGER
		, MDFCN_DT = TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
	WHERE CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
</update>

<!-- 상담 이력 임시저장 -->
<update id="updateRtnTalkHistTemp"  parameterType= "java.util.HashMap">
	INSERT INTO PLT_CHT_CUTT_HSTRY
	(
		CHT_CUTT_HSTRY_ID
		, CHT_CUTT_ID
		, CUSTCO_ID
		, CUST_ID
		, SNDR_KEY
		, CUSL_ID
		, CUTT_BGNG_DT
		, CUTT_END_DT
		, CHN_CLSF_CD
		, CUTT_TYPE_ID
		, CHT_END_DT
		, QSTN_TYPE_ID
		, CUTT_TTL
		, CUTT_CN
		, CHT_NM
		, PRCS_RSLT_CD
		, CUTT_STTS_CD
		, ALTMNT_RDY_REG_DT
		, CUTT_RDY_REG_DT
		, CUTT_HSTRY_REG_DT
		, QSTN_CHC_RDY_DT
		, CHBT_YN, CHBT_STTS_CD
		, CUST_NORSPNS_MSG_HR
		, AUTO_GRTNG_YN
		, SYS_MSG_SKIP_YN
		, CLBK_YN
		, CLBK_YMD
		, CLBK_BGNG_DT
		, CUST_NORSPNS_HR_SUM
		, DSGN_CUSL_ID
		, RGTR_ID
		, REG_DT
		, MDFR_ID
		, MDFCN_DT
	)SELECT #{CHT_CUTT_HSTRY_ID}::INTEGER
			, CHT_CUTT_ID
			, CUSTCO_ID
			, CUST_ID
			, SNDR_KEY
			, CUSL_ID
			, CUTT_BGNG_DT
			, TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
			, CHN_CLSF_CD
			, CUTT_TYPE_ID
			, TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
			, QSTN_TYPE_ID
			, CUTT_TTL
			, #{CUTT_CN}
			, CHT_NM
			, #{PRCS_RSLT_CD}
			, #{CUTT_STTS_CD}
			, ALTMNT_RDY_REG_DT
			, CUTT_RDY_REG_DT
			, CUTT_HSTRY_REG_DT
			, QSTN_CHC_RDY_DT
			, CHBT_YN
			, CHBT_STTS_CD
			, CUST_NORSPNS_MSG_HR
			, AUTO_GRTNG_YN
			, SYS_MSG_SKIP_YN
			, CLBK_YN
			, CLBK_YMD
			, CLBK_BGNG_DT
			, CUST_NORSPNS_HR_SUM
			, DSGN_CUSL_ID
			, #{USER_ID}::INTEGER
			, TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
			, #{USER_ID}::INTEGER
			, TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		FROM PLT_CHT_CUTT
		WHERE CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER

</update>


<!-- 전달 시 상담 이력 저장 -->
<update id="updateRtnTalkHistByTransChat"  parameterType= "java.util.HashMap">
	UPDATE PLT_CHT_CUTT
	SET CUTT_END_DT = TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		, CUTT_HSTRY_REG_DT = TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		, CUTT_TYPE_ID = #{CUTT_TYPE_ID}::INTEGER
		<if test="CUTT_TTL != '' and CUTT_TTL != null and CUTT_TTL != undefined">
			, CUTT_TTL = #{CUTT_TTL}
		</if>
		, CUTT_CN = #{CUTT_CN}
		, PRCS_RSLT_CD = #{PRCS_RSLT_CD}
		, CUTT_STTS_CD = #{PRCS_RSLT_CD}
	WHERE CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
</update>


<!-- 안내메시지 발송후 발송시간 수정 -->
<update id="updateTalkSetTime" parameterType="java.util.HashMap">
UPDATE 		/* updateTalkSetTime - 안내메시지 발송후 발송시간 수정 */
	PLT_CHT_CUTT
   SET CUST_NORSPNS_HR = TRUNC(#{MSG_TIME}::NUMERIC)::INTEGER
 WHERE CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
</update>

<!-- 고객 무응답 메시지 발송후 발송시간 수정 , 초단위로 변경 -->
<update id="updateContactCustMsgTime" parameterType="java.util.HashMap">
UPDATE PLT_CHT_CUTT		/* updateContactCustMsgTime - 고객 무응답 시간(무응답 메시지 발송 후 시간 합계) */
   SET CUST_NORSPNS_HR = TRUNC(#{MSG_TIME}::NUMERIC)::INTEGER
   /* 고객 무응답시간 합계 필요 없음 추후 로직 변경 필요*/
     , CUST_NORSPNS_HR_SUM = (COALESCE(CUST_NORSPNS_HR_SUM,0) 
							+ TRUNC(#{MSG_TIME}::NUMERIC)::INTEGER)
WHERE CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
</update>

<!-- 고객 정보를 가져온다. -->
<select id="selectRtnUserNm"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
SELECT (CASE WHEN U.ATTR_DIV_NM IS NOT NULL THEN U.ATTR_DIV_NM || '_' || A.USER_NM
             ELSE A.USER_NM
         END)  AS USER_NM
  FROM PLT_USER  A
  LEFT OUTER JOIN PLT_USER_BLNG  U
    ON A.USER_ATTR_C = U.ATTR_DIV_CD
 WHERE #{CUSTCO_ID} LIKE ('%' || A.CUSTCO_ID || '%')
   AND A.USER_ID = #{USER_ID}
</select>

<!-- 해당 대기건이 전달 건인지 확인 -->	
<select id="selectRtnTalkTransChk"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
	SELECT COALESCE(DLVR_CUTT_HSTRY_ID,0) AS DLVR_CUTT_HSTRY_ID
	FROM PLT_CHT_RDY
	WHERE CHT_RDY_ID = COALESCE(#{CHT_RDY_ID},'-1')::INTEGER
</select>

<!--상담이력(대화이력) 데이터 가져오기-->
<select id="selectRtnTalkTransDtl"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
	SELECT CHT_CUTT_DTL_ID
		, #{CHT_CUTT_ID}::INTEGER AS CHT_CUTT_ID
		, CUSTCO_ID
		, CUSL_ID
		, RCPTN_DSPTCH_CD
		, RCPTN_SNDPTY_ID
		, MSG_TYPE_CD
		, RCPTN_DSPTCH_MSG
		, CHG_RCPTN_DSPTCH_MSG
		, IMG_URL
		, FILE_GROUP_KEY
		, AUTO_RSPNS_MSG
		, LNK_INFO
		, VIDEO_PATH
		, VIDEO_URL
		, VIDEO_THUMNAIL_PATH
		, READ_YN
		, SYS_MSG_ID
		, RGTR_ID
		, REG_DT
		, MDFR_ID
		, MDFCN_DT
	FROM PLT_CHT_CUTT_DTL
	WHERE CHT_CUTT_ID = #{DLVR_CUTT_HSTRY_ID}::INTEGER
</select>
<!-- 상담 대기 상세에서 상담 이력 상세로 데이터 이관 -->	
<insert id="insertRtnTalkHistDetailInfoTrans"  parameterType= "java.util.HashMap">
	/* insertRtnTalkHistDetailInfoTrans - 상담 대기 상세에서 상담 이력 상세로 데이터 이관 */
	INSERT INTO PLT_CHT_CUTT_DTL
	     (
		     CHT_CUTT_DTL_ID
			, CHT_CUTT_ID
			, CUSTCO_ID
			, CUSL_ID
			, RCPTN_DSPTCH_CD
			, RCPTN_SNDPTY_ID
			, MSG_TYPE_CD
			, RCPTN_DSPTCH_MSG
			, CHG_RCPTN_DSPTCH_MSG
			, IMG_URL
			, FILE_GROUP_KEY
			, AUTO_RSPNS_MSG
			, LNK_INFO
			, VIDEO_PATH
			, VIDEO_URL
			, VIDEO_THUMNAIL_PATH
			, READ_YN
			<if test="SYS_MSG_ID != '' and SYS_MSG_ID != null and SYS_MSG_ID != undefined">
				, SYS_MSG_ID
			</if>
			, RGTR_ID
			, REG_DT
			, MDFR_ID
			, MDFCN_DT
	     ) VALUES (
			#{CHT_CUTT_DTL_ID}::INTEGER
			, #{CHT_CUTT_ID}::INTEGER
			, #{CUSTCO_ID}::INTEGER
			<choose>
				<when test="CUSL_ID != '' and CUSL_ID != null and CUSL_ID != undefined">
					, #{CUSL_ID}::INTEGER
				</when>
				<otherwise>
					, NULL
				</otherwise>
			</choose>
			, #{RCPTN_DSPTCH_CD}
			, #{RCPTN_SNDPTY_ID}::INTEGER
			, #{MSG_TYPE_CD}
			, #{RCPTN_DSPTCH_MSG}
			, #{CHG_RCPTN_DSPTCH_MSG}
			, #{IMG_URL}
			, #{FILE_GROUP_KEY}
			, #{AUTO_RSPNS_MSG}
			, #{LNK_INFO}
			, #{VIDEO_PATH}
			, #{VIDEO_URL}
			, #{VIDEO_THUMNAIL_PATH}
			, #{READ_YN}
			<if test="SYS_MSG_ID != '' and SYS_MSG_ID != null and SYS_MSG_ID != undefined">
				, #{SYS_MSG_ID}::INTEGER
			</if>
			, #{RGTR_ID}::INTEGER
			, #{REG_DT}
			, #{MDFR_ID}::INTEGER
			, #{MDFCN_DT}
		)
</insert>

<select id="countCustomerUser" parameterType= "java.util.HashMap" resultType="java.util.HashMap">
	SELECT
		COUNT(*) AS CNT
	FROM PLT_CUS
	WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
	  AND CUST_ID = #{SENDERUSERKEY}
</select>
<update id="updateCustomerUpdate" parameterType= "java.util.HashMap">
	UPDATE PLT_CUS
	SET UPDATEYN = 'N'
	WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
	  AND CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
</update>
<update id="updateCustomerInfo" parameterType= "java.util.HashMap">
	UPDATE PLT_CUS
	SET 
		CUSTOMER_NM = #{USERNAME}
		, CUSTOMER_PHONE_NO = #{CONTACT}
		, GENDER_CD = #{GENDER}
		, CUSTOMER_BIRTH = #{BIRTHDAY}
		, UPD_DTTM = NOW()
		, AMDR_ID =  #{USERID}
		, UPDATEYN = 'Y'
		, EML = #{EML}
		, HEAR_IMPAIRED_PERSON = #{HEAR_IMPAIRED_PERSON}
		, AGREE_PERSON_INFO = #{AGREE_PERSON_INFO}
	WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
      AND CUST_ID = #{SENDERUSERKEY}
</update>
<insert id="insertCustomerInfo"  parameterType= "java.util.HashMap">
	INSERT INTO PLT_CUS (
	    CUSTOMER_ID
	    , CUSTCO_ID
		, CUST_ID
		, CUSTOMER_NM
		, CUSTOMER_PHONE_NO
		, GENDER_CD
		, CUSTOMER_BIRTH
		, REG_DTTM
		, PROC_ID
		, REG_DT
		, UPDATEYN
		, EML
		, HEAR_IMPAIRED_PERSON
		, AGREE_PERSON_INFO
	) VALUES (
	    #{CUSTOMERID}
	    , NULLIF(#{CUSTCO_ID},'') 
		, #{SENDERUSERKEY}
		, #{USERNAME}
		, #{CONTACT}
		, #{GENDER}
		, #{BIRTHDAY}
		, NOW()
		, #{USERID}
		, NOW()
		, 'Y'
		, #{EML}
		, #{HEAR_IMPAIRED_PERSON}
		, #{AGREE_PERSON_INFO}
	)
</insert>
<select id="selectAdminYnByUserId" parameterType= "java.util.HashMap" resultType="java.util.HashMap">
	SELECT
		T1.MNGR_YN
	FROM PLT_AUTH T1
	INNER JOIN (
		SELECT 
			ATRT_GROUP_ID
		FROM PLT_USER_AUTH
		WHERE USER_ID = #{USER_ID}
	) T2
	ON T1.ATRT_GROUP_ID = T2.ATRT_GROUP_ID
</select>

<!-- 문의유형을 조회한다. 				   		   2018.11.08 kmg-->
<!-- 상담유형과 같이 사용할 수 있도록 변경 		   2018.11.08 kmg-->
<!-- 레벨형 문의유형으로 변경되면서 사용하지 않음. 2018.11.14 kmg-->
<!--  
<select id="selectInqryType"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
	WITH PARENT_CNSL_TYP_CD AS (
		SELECT 
	        SPST_CNSL_TYP_CD
		FROM PLT_CHT_CUTT_TYP
	    WHERE INQRY_USE_YN = 'Y'
	)
	SELECT
	    T1.CD
	    , CASE WHEN (SELECT COUNT(*) FROM PARENT_CNSL_TYP_CD WHERE SPST_CNSL_TYP_CD IN (T1.CD)) = 0 
	      THEN T1.CD_NM
	      ELSE T1.CD_NM || ' > ' END AS CD_NM
	FROM (
		SELECT 
		    CNSL_TYP_CD AS CD
		    , INQRY_ALIAS_NM AS CD_NM
		FROM PLT_CHT_CUTT_TYP
		WHERE SPST_CNSL_TYP_CD = '*'
		AND INQRY_USE_YN = 'Y'
		ORDER BY CNSL_TYP_CD
	) T1
</select>
-->
<!-- 다음 레벨 문의유형을 조회한다. 	   2018.11.08 kmg-->	
<!-- 상담유형과 같이 사용할 수 있도록 변경 2018.11.08 kmg-->	
<select id="selectInqryLevelType"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
	   SELECT 		/* selectInqryLevelType - 다음레벨 문의유형 조회 */
	   		T1.CUSTCO_ID                              AS CUSTCO_ID  /* ASP고객사키 */
	        , T1.QSTN_TYPE_ID                           AS CD            /* 문의유형코드 */
	        , T1.QSTN_TYPE_NM                           AS CD_NM         /* 문의유형명 */
            , COALESCE(T1.UP_QSTN_TYPE_ID::VARCHAR,'*')          AS PARENT_CD     /* 상위 문의유형 코드 */
            , COALESCE(T1.QSTN_TYPE_CD, 'AGENT')        AS INQRY_TYPE    /* 문의유형 타입 */
            , REGEXP_REPLACE(T1.QSTN_TYPE_EXPLN, '[\n\r]+', '\n', 'g' )    AS INQRY_DESC2   /* 문의유형 메시지 */
            , REGEXP_REPLACE((CASE WHEN T1.UP_QSTN_TYPE_ID IS NULL
                      THEN (SELECT QSTN_TYPE_EXPLN FROM PLT_CHT_QSTN_TYPE 
            	             WHERE SNDR_KEY = #{SNDR_KEY}::INTEGER
            	               AND UP_QSTN_TYPE_ID IS NULL 
            	             LIMIT 1)
                    WHEN T1.UP_QSTN_TYPE_ID IS NOT NULL
            	      THEN (SELECT QSTN_TYPE_EXPLN FROM PLT_CHT_QSTN_TYPE 
            	             WHERE SNDR_KEY = #{SNDR_KEY}::INTEGER
            	               AND QSTN_TYPE_ID = T1.UP_QSTN_TYPE_ID 
            	             LIMIT 1)
            	    ELSE ''
            	END ), '[\n\r]+', '\n', 'g' )								AS INQRY_DESC    /* 상위 문의유형 메시지 */
            , CASE WHEN T1.UP_QSTN_TYPE_ID IS NULL
                     THEN (SELECT CONCAT(CONCAT(TB09.FILE_PATH, '/'), TB09.STRG_FILE_NM)
                             FROM PLT_CHT_QSTN_TYPE TTIT
                             LEFT OUTER JOIN PLT_FILE TB09
                               ON TB09.FILE_GROUP_KEY = TTIT.FILE_GROUP_KEY
                            WHERE TTIT.SNDR_KEY = #{SNDR_KEY}::INTEGER
            	               AND TTIT.UP_QSTN_TYPE_ID IS NULL 
                            LIMIT 1)
                   ELSE (SELECT CONCAT(CONCAT(TB09.FILE_PATH, '/'), TB09.STRG_FILE_NM)
                             FROM PLT_CHT_QSTN_TYPE TTIT
                             LEFT OUTER JOIN PLT_FILE TB09
                               ON TB09.FILE_GROUP_KEY = TTIT.FILE_GROUP_KEY
                            WHERE TTIT.SNDR_KEY = #{SNDR_KEY}::INTEGER
                              AND QSTN_TYPE_ID = T1.UP_QSTN_TYPE_ID 
                            LIMIT 1)
            	END                                       AS IMAGE         /* 상위 문의유형 이미지 경로 */
            , CASE WHEN T1.UP_QSTN_TYPE_ID IS NULL
                     THEN (SELECT TB09.FILE_KEY
                             FROM PLT_CHT_QSTN_TYPE TTIT
                             LEFT OUTER JOIN PLT_FILE TB09
                               ON TB09.FILE_GROUP_KEY = TTIT.FILE_GROUP_KEY
                            WHERE TTIT.SNDR_KEY = #{SNDR_KEY}::INTEGER
                              AND TTIT.UP_QSTN_TYPE_ID IS NULL 
                            LIMIT 1)
                   ELSE (SELECT TB09.FILE_KEY
                             FROM PLT_CHT_QSTN_TYPE TTIT
                             LEFT OUTER JOIN PLT_FILE TB09
                               ON TB09.FILE_GROUP_KEY = TTIT.FILE_GROUP_KEY
                            WHERE TTIT.SNDR_KEY = #{SNDR_KEY}::INTEGER
                              AND QSTN_TYPE_ID = T1.UP_QSTN_TYPE_ID 
                            LIMIT 1)
            	END                                       AS FILE_KEY         /* 상위 문의유형 이미지 파일키 */
            , CASE WHEN T1.UP_QSTN_TYPE_ID IS NULL
                     THEN (SELECT TB09.FILE_GROUP_KEY
                             FROM PLT_CHT_QSTN_TYPE TTIT
                             LEFT OUTER JOIN PLT_FILE TB09
                               ON TB09.FILE_GROUP_KEY = TTIT.FILE_GROUP_KEY
                            WHERE TTIT.SNDR_KEY = #{SNDR_KEY}::INTEGER
                              AND TTIT.UP_QSTN_TYPE_ID IS NULL 
                            LIMIT 1)
                   ELSE (SELECT TB09.FILE_GROUP_KEY
                             FROM PLT_CHT_QSTN_TYPE TTIT
                             LEFT OUTER JOIN PLT_FILE TB09
                               ON TB09.FILE_GROUP_KEY = TTIT.FILE_GROUP_KEY
                            WHERE TTIT.SNDR_KEY = #{SNDR_KEY}::INTEGER
                              AND QSTN_TYPE_ID = T1.UP_QSTN_TYPE_ID 
                            LIMIT 1)
            	END                                       AS FILE_GROUP_KEY         /* 상위 문의유형 이미지 파일그룹키 */
		 FROM PLT_CHT_QSTN_TYPE T1
		WHERE SNDR_KEY = #{SNDR_KEY}::INTEGER
		<choose>
			<when test="INQRY_STATUS eq 'BEFORE'.toString()">		<!-- 이전 문의유형 -->
				AND ( QSTN_TYPE_SE_CD = ( SELECT QSTN_TYPE_SE_CD FROM PLT_CHT_QSTN_TYPE WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER AND QSTN_TYPE_ID = #{QSTN_TYPE_ID}::INTEGER))
				AND CASE WHEN (SELECT UP_QSTN_TYPE_ID FROM PLT_CHT_QSTN_TYPE WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER AND QSTN_TYPE_ID = #{QSTN_TYPE_ID}::INTEGER) IS NULL
						THEN UP_QSTN_TYPE_ID IS NULL
						ELSE UP_QSTN_TYPE_ID = ( SELECT UP_QSTN_TYPE_ID FROM PLT_CHT_QSTN_TYPE WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER AND QSTN_TYPE_ID = #{QSTN_TYPE_ID}::INTEGER)
					END
			</when>
			<otherwise>
				<choose>
					<when test="INQRY_STATUS eq 'NEXT'.toString()">
	        			AND UP_QSTN_TYPE_ID = #{QSTN_TYPE_ID}::INTEGER	<!-- 다음 문의유형 -->
					</when>
					<otherwise>
						AND UP_QSTN_TYPE_ID = (SELECT QSTN_TYPE_ID
											FROM PLT_CHT_QSTN_TYPE
											WHERE UP_QSTN_TYPE_ID IS NULL
											AND SNDR_KEY = #{SNDR_KEY}::INTEGER)::INTEGER					<!-- 처음 문의유형 -->
					</otherwise>
				</choose>
			</otherwise>
		</choose>
          AND USE_YN = 'Y'
		ORDER BY SORT_ORD ASC
</select>

<!-- AS-IS 다음 레벨 문의유형을 조회한다. -->
<!-- 신규 문의유형 화면 사용으로 인해 AS-IS 조회쿼리 주석처리 -->
<select id="selectInqryLevelType_BAK_20210308_lgc"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
	   SELECT T1.CUSTCO_ID                             AS CUSTCO_ID  -- ASP고객사키
		     , TB09.FILE_PATH       AS FILE_PATH      /* 파일경로       */
		     , TB09.STRG_FILE_NM       AS STRG_FILE_NM      /* 파일이름       */
	        , T1.INQRY_TYP_CD                             AS CD            -- 문의유형코드
	        , T1.INQRY_TYP_NM                             AS CD_NM         -- 문의유형명
            , T1.SPST_INQRY_TYP_CD                        AS PARENT_CD     -- 상위 문의유형 코드
            , T1.INQRY_TYPE                               AS INQRY_TYPE    -- 문의유형 타입
            , T1.INQRY_DESC                               AS INQRY_DESC2   -- 문의유형 메시지
            , (CASE WHEN T1.SPST_INQRY_TYP_CD != '*' 
            	THEN (SELECT INQRY_DESC FROM PLT_CHT_INQ_TYP WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER AND  INQRY_TYP_CD = T1.SPST_INQRY_TYP_CD AND ROWNUM = 1 )
            	ELSE ''
            	END ) AS INQRY_DESC -- 상위 문의유형 메시지
            , TB09.FILE_PATH || TB09.STRG_FILE_NM  AS  IMAGE -- 상위 문의유형 이미지 경로
		FROM PLT_CHT_INQ_TYP T1
		LEFT OUTER JOIN PLT_FILE TB09
          ON TB09.FILE_KEY = T1.IMAGE_FILE_KEY
		 AND #{CUSTCO_ID} LIKE ('%' || TB09.CUSTCO_ID || '%')
	   WHERE #{CUSTCO_ID} LIKE ('%' || T1.CUSTCO_ID || '%')
		<choose>
			<when test="INQRY_STATUS eq 'BEFORE'.toString()">		<!-- 이전 문의유형 -->
				AND ( T1.INQRY_TYP_DIV_CD = ( SELECT INQRY_TYP_DIV_CD FROM PLT_CHT_INQ_TYP WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER AND INQRY_TYP_CD = #{TALK_INQRY_CD}))
				AND ( T1.SPST_INQRY_TYP_CD = ( SELECT SPST_INQRY_TYP_CD FROM PLT_CHT_INQ_TYP WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER AND INQRY_TYP_CD = #{TALK_INQRY_CD}))
			</when>
			<otherwise>
				<choose>
					<when test="INQRY_STATUS eq 'NEXT'.toString()">
	        			AND (T1.SPST_INQRY_TYP_CD = #{TALK_INQRY_CD})	<!-- 다음 문의유형 -->
					</when>
					<otherwise>
						AND T1.SPST_INQRY_TYP_CD = '*'					<!-- 처음 문의유형 -->
					</otherwise>
				</choose>
			</otherwise>
		</choose>
        AND T1.USE_YN = 'Y'
        AND T1.INQRY_USE_CHANNEL = #{INQRY_USE_CHANNEL}
		ORDER BY T1.SORT_ORD ASC
</select>

<!-- 이전 레벨 문의유형으로 업데이트 	   2018.11.08 kmg-->	
<!-- 상담유형과 같이 사용할 수 있도록 변경 2018.11.08 kmg-->	
<update id="updateTalkUserReadyInqryCd" parameterType= "java.util.HashMap">
	UPDATE PLT_CHT_RDY		/* updateTalkUserReadyInqryCd - 고객 선택 문의유형 업데이트 (대기테이블) */
		SET QSTN_TYPE_ID = #{QSTN_TYPE_ID}::INTEGER
	WHERE SNDR_KEY = #{SNDR_KEY}::INTEGER
		AND CUST_ID = (SELECT CUST_ID
						FROM PLT_CHT_CUST
						WHERE CHT_USER_KEY = #{CHT_USER_KEY}
						ORDER BY CUST_ID
   						LIMIT 1)::INTEGER
		AND ALTMNT_STTS_CD = 'QSTN_CHCING'
</update>
<update id="updateChtQstn" parameterType= "java.util.HashMap">
	UPDATE PLT_CHT_CUTT		/* updateChtQstn - 고객 선택 문의유형 업데이트 (상담테이블) */
		SET QSTN_TYPE_ID = #{QSTN_TYPE_ID}::INTEGER
	WHERE SNDR_KEY = #{SNDR_KEY}::INTEGER
		AND CUST_ID = (SELECT CUST_ID
						FROM PLT_CHT_CUST
						WHERE CHT_USER_KEY = #{CHT_USER_KEY}
						ORDER BY CUST_ID
   						LIMIT 1)::INTEGER
		AND CUTT_STTS_CD = 'QSTN_CHCING'
</update>

<select id="selectInqryCode" parameterType= "java.util.HashMap" resultType="java.util.HashMap">
	SELECT 	/* selectInqryCode - 현재 문의유형 조회  */
		QSTN_TYPE_ID		AS INQRY_TYP_CD
		, QSTN_TYPE_ID
		, QSTN_TYPE_SE_CD	AS INQRY_TYP_DIV_CD
		, QSTN_TYPE_SE_CD
	  FROM PLT_CHT_QSTN_TYPE
	 WHERE SNDR_KEY = #{SNDR_KEY}::INTEGER
	 	AND USE_YN = 'Y'
	 	<choose>
			 <when test="QSTN_TYPE_ID != '' and QSTN_TYPE_ID != null and QSTN_TYPE_ID != undefined">
				 AND QSTN_TYPE_ID = #{QSTN_TYPE_ID}::INTEGER
			 </when>
			 <otherwise>
				 AND UP_QSTN_TYPE_ID IS NULL
			 </otherwise>
		 </choose>
	 
</select>

<select id="selectChildInqryCode" parameterType= "java.util.HashMap" resultType="java.util.HashMap">
	SELECT 	/* selectChildInqryCode - 하위 문의유형 조회  */
		QSTN_TYPE_ID		AS INQRY_TYP_CD
		, QSTN_TYPE_ID
		, QSTN_TYPE_SE_CD	AS INQRY_TYP_DIV_CD
		, QSTN_TYPE_SE_CD
	  FROM PLT_CHT_QSTN_TYPE
	 WHERE SNDR_KEY = #{SNDR_KEY}::INTEGER
	 	AND USE_YN = 'Y'
		AND QSTN_TYPE_CD != 'INFO_MSG'
 	<choose>
		 <when test="QSTN_TYPE_ID != '' and QSTN_TYPE_ID != null and QSTN_TYPE_ID != undefined">
			 AND UP_QSTN_TYPE_ID = #{QSTN_TYPE_ID}::INTEGER
		 </when>
		 <otherwise>
			 AND UP_QSTN_TYPE_ID IS NULL
		 </otherwise>
	 </choose>
	 <if test="QSTN_TYPE_SE_CD != ''and QSTN_TYPE_SE_CD != null">
	 	AND QSTN_TYPE_SE_CD = #{QSTN_TYPE_SE_CD}
	 </if>
	 
</select>

<!-- 삭제할 무의유형 조회 -->
<select id="selectDeletingChildInqryCode" parameterType= "java.util.HashMap" resultType="java.util.HashMap">
	
	SELECT INQRY_TYP_CD
		 , INQRY_TYP_DIV_CD
	  FROM PLT_CHT_INQ_TYP A
	 WHERE #{CUSTCO_ID} LIKE ('%' || A.CUSTCO_ID || '%')
	 AND A.SPST_INQRY_TYP_CD = #{TALK_INQRY_CD}
	 AND A.USE_YN = 'Y'
	 AND INQRY_TYP_DIV_CD = #{INQRY_TYP_DIV_CD}
	 
</select>

<!-- 문의유형 타입 확인				   2018.11.30 kmg-->	
<select id="selectInqryTypeIsAgentOrMessage" parameterType="java.util.HashMap" resultType= "java.util.HashMap">
	SELECT		/* selectInqryTypeIsAgentOrMessage - 문의유형 타입 조회 */
		COALESCE(PCQT.QSTN_TYPE_CD, '') 		AS INQRY_TYPE
		, COALESCE(PCQT.QSTN_TYPE_CD, '') 		AS QSTN_TYPE_CD
		, REGEXP_REPLACE(COALESCE(PCQT.QSTN_TYPE_EXPLN, ''), '[\n\r]+', ' ', 'g' ) 	AS INQRY_DESC
		, REGEXP_REPLACE(COALESCE(PCQT.QSTN_TYPE_EXPLN, ''), '[\n\r]+', ' ', 'g' ) 	AS QSTN_TYPE_EXPLN
		, CONCAT(CONCAT(PF.FILE_PATH, '/'), PF.STRG_FILE_NM) AS IMAGE
		, COALESCE(PCQT.FILE_GROUP_KEY, '') AS FILE_GROUP_KEY
		, COALESCE(PF.FILE_KEY, '') AS FILE_KEY
	  FROM PLT_CHT_QSTN_TYPE PCQT
	  LEFT JOIN PLT_FILE PF
	  	ON PF.FILE_GROUP_KEY = PCQT.FILE_GROUP_KEY
	 WHERE PCQT.SNDR_KEY = #{SNDR_KEY}::INTEGER
	   AND PCQT.QSTN_TYPE_ID = #{QSTN_TYPE_ID}::INTEGER
</select>

<!-- 메시지 ID에 해당하는 링크버튼 리스트를 조회한다. -->	
<select id="selectLinksButtonList"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
SELECT CUSTCO_SYS_LNK_ID
     , SYS_MSG_ID
     , BTN_NM
     , LNK_CD AS EXTRA
     , LNK_CD
     , URL_MOBILE
     , URL_PC
     , RGTR_ID
     , REG_DT
     , MDFR_ID
     , MDFCN_DT
  FROM PLT_CHT_CUSTCO_SYS_LNK
 WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
   AND SYS_MSG_ID = #{SYS_MSG_ID}::INTEGER
</select>

<!-- 고객 이메일 및 전화번호 변경-->	
<update id="modifyUserPhoneNumberAndEmail" parameterType= "java.util.HashMap">
	UPDATE
		PLT_CUS
	SET
		CUSTOMER_PHONE_NO = #{CUSTOMER_PHONE_NO}
		, EML = #{CUSTOMER_EML}
		, CUSTOMER_NM = #{CUSTOMER_NM}
		, ACDT_PRSN_REL = #{ACDT_PRSN_REL}
		, ATENT_CD = #{ATENT_CD}
	WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
      AND CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
</update>

<!-- 고객 ID 존재여부 확인-->	
<select id="getCustomerUserCount" parameterType= "java.util.HashMap" resultType="java.util.HashMap">
	SELECT
		COUNT(*) AS CNT
	FROM PLT_CUS
	WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
      AND CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
</select>


<!-- 주의 고객 여부 및 고객 메모 조회-->	
<select id="getRtnMemoAndAtentCustomer" parameterType= "java.util.HashMap" resultType="java.util.HashMap">
	SELECT
		ATENT_CUSTOMER AS ATENT_CUSTOMER
		, CUSTOMER_MEMO AS CUSTOMER_MEMO
	FROM PLT_CUS
	WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
      AND CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
</select>

<!-- 비회원일 경우, 메모 및 주의 고객 여부 등록-->	
<insert id="insertMemoAndAtentCustomer" parameterType= "java.util.HashMap" >
	INSERT INTO
		PLT_CUS (
			CUSTOMER_ID
			, CUSTCO_ID
			, SNDR_KEY
			, CUST_ID			
			, ATENT_REGR_DATE
			, ATENT_REGR_ID
			, ATENT_AMDR_DATE
			, ATENT_AMDR_ID
			, CUSTOMER_MEMO
			, MEMO_REGR_DATE
			, MEMO_REGR_ID
			, MEMO_AMDR_DATE
			, MEMO_AMDR_ID
			-- , CUSTOMER_TYPE  -- ABL생명 DB TO DB EAI 연동, VIP 컬럼으로 사용중
			<if test="PARTNER_ID !='' and PARTNER_ID != null and PARTNER_ID == 'KAOM' ">
			, EML
			</if>
					
			<if test="PARTNER_ID !='' and PARTNER_ID != null and PARTNER_ID == 'KHCU' ">
			, ATENT_CUSTOMER
			, CUSTOMER_GENDER
			, CUSTOMER_CAREER_STATUS
			, CUSTOMER_EDU_CHK_YN
			, CUSTOMER_EDU_LEV
			, CUSTOMER_EDU_MAJOR
			, CUSTOMER_JOIN_POLICY_YN
			, CUSTOMER_JOIN_POLICY
			, CUSTOMER_BIRTH
			, CUSTOMER_REGION
			, CUSTOMER_INTEREST_FACULTY
			, CUSTOMER_INTEREST_DEPARTMENT
			</if>
			
			<if test="PARTNER_ID !='' and PARTNER_ID != null and PARTNER_ID == 'KEIS' ">
			, ATENT_CUSTOMER
			, CUSTOMER_GENDER
			, CUSTOMER_CAREER_STATUS
			, CUSTOMER_EDU_CHK_YN
			, CUSTOMER_EDU_LEV
			, CUSTOMER_EDU_MAJOR
			, CUSTOMER_JOIN_POLICY_YN
			, CUSTOMER_JOIN_POLICY
			, CUSTOMER_BIRTH
			, CUSTOMER_REGION
			</if>
			
		) VALUES (
			#{CUST_ID}
			, NULLIF(#{CUSTCO_ID},'')
			, #{SNDR_KEY}
			, #{CUST_ID}			
			, NOW()
			, #{USER_ID}
			, NOW()
			, #{USER_ID}
			, #{MEMO}
			, NOW()
			, #{USER_ID}
			, NOW()
			, #{USER_ID}
			-- , #{CUSTOMER_TYPE} -- ABL생명 DB TO DB EAI 연동, VIP 컬럼으로 사용중
			
			<if test="PARTNER_ID !='' and PARTNER_ID != null and PARTNER_ID == 'KAOM' ">
			, #{EML}
			</if>
			
			<if test="PARTNER_ID !='' and PARTNER_ID != null and PARTNER_ID == 'KHCU' ">
			, #{ATENT_CUSTOMER}
			, #{CUSTOMER_GENDER}
			, #{CUSTOMER_CAREER_STATUS}
			, #{CUSTOMER_EDU_CHK_YN}
			, #{CUSTOMER_EDU_LEV}
			, #{CUSTOMER_EDU_MAJOR}
			, #{CUSTOMER_JOIN_POLICY_YN}
			, #{CUSTOMER_JOIN_POLICY}
			, #{CUSTOMER_BIRTH}
			, #{CUSTOMER_REGION}
			, #{CUSTOMER_INTEREST_FACULTY}
			, #{CUSTOMER_INTEREST_DEPARTMENT}
			</if>
			
			<if test="PARTNER_ID !='' and PARTNER_ID != null and PARTNER_ID == 'KEIS' ">
			, #{ATENT_CUSTOMER}
			, #{CUSTOMER_GENDER}
			, #{CUSTOMER_CAREER_STATUS}
			, #{CUSTOMER_EDU_CHK_YN}
			, #{CUSTOMER_EDU_LEV}
			, #{CUSTOMER_EDU_MAJOR}
			, #{CUSTOMER_JOIN_POLICY_YN}
			, #{CUSTOMER_JOIN_POLICY}
			, #{CUSTOMER_BIRTH}
			, #{CUSTOMER_REGION}
			</if>
		
		)
</insert>

<!-- 고객 유형 변경-->
<update id="modifyCustomerType" parameterType= "java.util.HashMap">
	UPDATE PLT_CUS
	   SET CUSTOMER_CAREER_STATUS = #{CUSTOMER_CAREER_STATUS}  -- ABL생명 상담톡 자체 VIP 컬럼으로 사용됨
	 WHERE CUSTCO_ID  = #{CUSTCO_ID}
       AND CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
</update>

<!-- 주의 고객여부 신규등록-->	
<update id="newAtentCustomer" parameterType= "java.util.HashMap" >
	UPDATE
		PLT_CUS
	SET
		ATENT_CUSTOMER = #{ATENT_CUSTOMER}
		, ATENT_REGR_DATE = NOW()
		, ATENT_REGR_ID = #{USER_ID}
		, ATENT_AMDR_DATE = NOW()
		, ATENT_AMDR_ID = #{USER_ID}
	WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
      AND CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
</update>

<!-- 주의 고객여부 업데이트-->	
<update id="modifyAtentCustomer" parameterType= "java.util.HashMap" >
	UPDATE
		PLT_CUS
	SET
		ATENT_CUSTOMER = #{ATENT_CUSTOMER}
		, ATENT_AMDR_DATE = NOW()
		, ATENT_AMDR_ID = #{USER_ID}
	WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
      AND CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
</update>

<!-- 고객 메모 내용 신규등록 -->	
<update id="newCustomerMemo" parameterType= "java.util.HashMap" >
	UPDATE
		PLT_CUS
	SET
		CUSTOMER_MEMO = #{MEMO}
		, MEMO_REGR_DATE = NOW()
		, MEMO_REGR_ID = #{USER_ID}
		, MEMO_AMDR_DATE = NOW()
		, MEMO_AMDR_ID = #{USER_ID}
	WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
      AND CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
</update>

<!-- 고객 메모 내용 업데이트 -->	
<update id="modifyCustomerMemo" parameterType= "java.util.HashMap" >
	UPDATE
		PLT_CUS
	SET
		CUSTOMER_MEMO = #{MEMO}
		, MEMO_AMDR_DATE = NOW()
		, MEMO_AMDR_ID = #{USER_ID}
	WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
      AND CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
</update>

<!-- 개인현황판 데이터 조회 -->
<select id="selectPrivateHist" resultType="java.util.HashMap">
<![CDATA[
    
SELECT (SELECT COUNT(*) FROM PLT_CHT_CUTT 
         WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
           AND CUTT_END_DT >= #{YESTERDAY_WORK_TIME_START}
           AND CUTT_END_DT <  #{TODAY_WORK_TIME_START}
           AND USER_ID = #{USER_ID}
           AND PRCS_RSLT_CD = '1')        AS YESTERDAY_CNT -- 전일 완결건
     , D.TODAY_CNT                       AS TODAY_CNT     -- 당일 완결건 
     , D.NO_PROC_CNT                     AS NO_PROC_CNT   -- 당일 미결건(이관)
     , D.DELIVER_CNT                     AS DELIVER_CNT   -- 당일 전달건  
     , COALESCE(D.CALLBACK_CNT,0)                    AS CALLBACK_CNT  -- 콜백 대기건  
  FROM (
         SELECT COUNT(CASE PRCS_RSLT_CD WHEN '1' THEN 1 END)  AS TODAY_CNT     -- 당일 완결건
              , COUNT(CASE PRCS_RSLT_CD WHEN '2' THEN 1 END)  AS NO_PROC_CNT   -- 당일 미결건(이관)
              , COUNT(CASE PRCS_RSLT_CD WHEN '3' THEN 1 END)  AS DELIVER_CNT   -- 당일 전달건
              , SUM(CASE WHEN PRCS_RSLT_CD = '4' AND CUTT_STTS_CD = 'ING' THEN 1 ELSE 0 END )  AS CALLBACK_CNT  -- 콜백 대기건  
           FROM PLT_CHT_CUTT
          WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
            AND TALK_DIST_DT >= #{TODAY_WORK_TIME_START}
            AND TALK_DIST_DT <  #{TODAY_WORK_TIME_END}
            AND USER_ID = #{USER_ID}
       ) D
       
]]>
</select>

<!-- 상담이력 자동인사여부 조회 -->    
<select id="selectTalkContactAutoGreeting"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
SELECT AUTO_GRTNG_YN 
		, CUTT_STTS_CD
  FROM PLT_CHT_CUTT 
 WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
   AND CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
   AND SNDR_KEY = #{SNDR_KEY}::INTEGER
</select>

<!-- 상담이력 자동인사여부 'Y'로 업데이트 -->    
<update id="updateTalkContactAutoGreetingY" parameterType= "java.util.HashMap">
UPDATE PLT_CHT_CUTT
   SET AUTO_GRTNG_YN = 'Y'
 WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
   AND CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
   AND SNDR_KEY = #{SNDR_KEY}
</update>

<!-- INTERVAL을 위한 고객ID만 저장-->    
<insert id="insertUserInCustomer" parameterType="java.util.HashMap">
INSERT INTO
	PLT_CUS (
		CUSTOMER_ID
		, CUSTCO_ID
		, CUST_ID
		, REG_DTTM
		, UPD_DTTM
		, PROC_ID
		, REG_DT
	) VALUES (
		#{CUST_ID}
		, NULLIF(#{CUSTCO_ID},'') 
		,#{CUST_ID}
		, NOW()
		, NOW()
		, #{USER_ID}
		, NOW()
	)
</insert>



<!-- 고객정보요청 기능의 사용여부 확인 -->
<select id="selectReqUserInfoYn" resultType="java.util.HashMap">
	SELECT
		CUSTCO_ID, STNG_VL
	FROM PLT_CHT_STNG
	WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
	  AND STNG_CD = #{STNG_CD}
</select>

<!-- 무응답 메시지 발송 중지 -->
<update id="updateSystemMsgSkip" parameterType="java.util.HashMap">
	UPDATE PLT_CHT_CUTT
	SET SYS_MSG_SKIP_YN = #{SYS_MSG_SKIP_YN}
		, CUST_NORSPNS_MSG_HR = '0'::INTEGER
	WHERE CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
</update>

<!-- Skip 해제 -->
<insert id="insertSystemMsgSkip" parameterType="java.util.HashMap">
	INSERT INTO 
	PLT_CHT_CUTT_DTL (
		CHT_CUTT_ID
		, CHT_CUTT_DTL_ID
		, CUSTCO_ID
		, CUSL_ID
		, RCPTN_DSPTCH_CD
		, RCPTN_DSPTCH_MSG
		, CHG_RCPTN_DSPTCH_MSG
		, MSG_TYPE_CD
		, RGTR_ID
		, REG_DT
		, MDFR_ID
		, MDFCN_DT
	) VALUES (
		#{CHT_CUTT_ID}::INTEGER
		, #{CHT_CUTT_DTL_ID}::INTEGER
		, #{CUSTCO_ID}::INTEGER
		, #{USER_ID}::INTEGER
		, #{RCPTN_DSPTCH_CD}
		, #{RCPTN_DSPTCH_MSG}
		, #{RCPTN_DSPTCH_MSG}
		, #{MSG_TYPE_CD}
		, #{USER_ID}::INTEGER
		, TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		, #{USER_ID}::INTEGER
		, TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
	)
</insert>

<!-- 문의 유형 선택 안한 고객 리스트 -->
<select id="selectInqryTypeNoContact" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT 		/* selectInqryTypeNoContact - 문의 유형 선택 안한 고객 리스트 */
		CUTT.*
	FROM (SELECT PCC.CHT_CUTT_ID			/* 채팅상담ID */
			, PCC.SNDR_KEY				/* 발신프로필ID */
			, PCC.CUSTCO_ID				/* 고객사ID */
			, PCC.CUSL_ID				/* 사용자ID */
			, PCC.CUSL_ID AS USER_ID	/* 사용자ID */
			, PCC.CUST_ID				/* 고객ID */
			, (SELECT CHT_USER_KEY
				FROM PLT_CHT_CUST
				WHERE CUST_ID = PCC.CUST_ID
					AND SNDR_KEY = PCC.SNDR_KEY)	AS CHT_USER_KEY	/* 채팅고객 KEY */
			, PCC.CHN_CLSF_CD			/* 채팅채널 유형 */
			, (SELECT MSG_CN
				FROM PLT_CHT_CUSTCO_SYS_MSG
				WHERE CUSTCO_ID = PCC.CUSTCO_ID
					AND SYS_MSG_ID = '9'::INTEGER
				ORDER BY MSG_HR ASC
				OFFSET (SELECT COUNT(CHT_CUTT_DTL_ID)
						FROM PLT_CHT_CUTT_DTL
						WHERE CHT_CUTT_ID = PCC.CHT_CUTT_ID
							AND SYS_MSG_ID = '9'::INTEGER
							AND REG_DT > (SELECT REG_DT
											FROM PLT_CHT_CUTT_DTL
											WHERE CHT_CUTT_ID = PCC.CHT_CUTT_ID
											AND MSG_TYPE_CD = 'QSTN'
												ORDER BY REG_DT DESC
												LIMIT 1)
						)
				LIMIT 1) AS MSG_CN			/* 문의유형 미선택 메시지 */
			, (SELECT MSG_TYPE_CD
				FROM PLT_CHT_SYS_MSG
				WHERE SYS_MSG_ID = '9'::INTEGER)	AS MSG_TYPE_CD			/* 문의유형 미선택 메시지 구분 코드 */
			, (SELECT MSG_SE_CD
				FROM PLT_CHT_SYS_MSG
				WHERE SYS_MSG_ID = '9'::INTEGER)	AS MSG_SE_CD			/* 문의유형 미선택 메시지 유형 코드 */
			, (SELECT MSG_HR
				FROM PLT_CHT_CUSTCO_SYS_MSG
				WHERE CUSTCO_ID = PCC.CUSTCO_ID
					AND SYS_MSG_ID = '9'::INTEGER
				ORDER BY MSG_HR ASC
				OFFSET (SELECT COUNT(CHT_CUTT_DTL_ID)
						FROM PLT_CHT_CUTT_DTL
						WHERE CHT_CUTT_ID = PCC.CHT_CUTT_ID
							AND SYS_MSG_ID = '9'::INTEGER
							AND REG_DT > (SELECT REG_DT
											FROM PLT_CHT_CUTT_DTL
											WHERE CHT_CUTT_ID = PCC.CHT_CUTT_ID
											AND MSG_TYPE_CD = 'QSTN'
												ORDER BY REG_DT DESC
												LIMIT 1)
						)
				LIMIT 1) AS NOQSTN_TIME			/* 문의유형 미선택 시간 */
			, (SELECT MAX(MSG_HR)
				FROM PLT_CHT_CUSTCO_SYS_MSG
				WHERE SYS_MSG_ID = '9'::INTEGER	/* 문의유형 미선택 메시지 */
				) AS MAX_TIME			/* 문의유형 미선택 종료 설정 시간 */
			, (SELECT EXTRACT(EPOCH FROM (NOW() - TO_TIMESTAMP(REG_DT, 'YYYYMMDDHH24MISS'))) / 60
				FROM PLT_CHT_CUTT_DTL
				WHERE CHT_CUTT_ID = PCC.CHT_CUTT_ID
				AND MSG_TYPE_CD = 'QSTN'
				ORDER BY REG_DT DESC
				LIMIT 1
				) AS MSG_TIME			/* 문의유형 미선택 시간 */
		FROM PLT_CHT_CUTT PCC
		WHERE PCC.CUTT_STTS_CD = 'QSTN_CHCING' 		/* 문의유형선택중건만 */
			AND PCC.CHN_CLSF_CD NOT IN('EMAIL', 'BBS')		/* 이메일, 게시판 제외 */
		) CUTT
	<![CDATA[
	WHERE CUTT.NOQSTN_TIME < CUTT.MSG_TIME
	]]>   
</select>

<!-- 문의유형 선택 안함 시간 업데이트 -->
<update id="updateMsgTimeByTalkReady" parameterType="java.util.HashMap">
	UPDATE 		/* updateMsgTimeByTalkReady - 문의유형 선택 안함 시간 업데이트 */
	PLT_CHT_CUTT
	SET 
		CUST_NORSPNS_HR = TRUNC(#{MSG_TIME}::NUMERIC)::INTEGER
	WHERE   SNDR_KEY = #{SNDR_KEY}::INTEGER
		AND CUST_ID = (SELECT CUST_ID
						FROM PLT_CHT_CUST
						WHERE CHT_USER_KEY = #{CHT_USER_KEY}
						ORDER BY CUST_ID
   						LIMIT 1)::INTEGER
		AND CUTT_STTS_CD = 'QSTN_CHCING'
</update>

<!-- 문의유형 선택 안함 데이터 이관 -->
<insert id="insertNoInqryToContact" parameterType="java.util.HashMap">
INSERT INTO PLT_CHT_CUTT
     (
        CHT_CUTT_ID,
        CUST_ID,
        CUSTCO_ID,
        SNDR_KEY,
        CUSTOMER_ID,
        TALK_START_DT,
        CUTT_END_DT,
        TALK_SESSION_CD,
        CHN_CLSF_CD,
        CNSL_TYP_CD,
        TALK_QST,
        TALK_ANS,
        TALK_TITLE,
        OWN_CHECK_YN,
        PRCS_RSLT_CD,
        CST_TYP_CD,
        CUTT_STTS_CD,
        USER_ID,
        TALK_DIST_DT,
        TALK_READ_DT,
        TALK_CONTACT_DT,
        TALK_ENT_CD,
        REGR_DEPT_CD,
        REGR_ID,
        REG_DTTM,
        AMDR_DEPT_CD,
        AMDR_ID,
        UPD_DTTM,
        PROC_ID,
        REG_DT,
        TALK_INQRY_CD,
        ORDER_NUMBER,
        CHANNEL,
        TALK_READY_DT
     )
SELECT #{CHT_CUTT_ID}
     , TUR.CUST_ID
     , TUR.CUSTCO_ID
     , TUR.SNDR_KEY
     , C.CUSTOMER_ID
     , TO_CHAR(NOW() ,'YYYYMMDDHH24MISS')
     , TO_CHAR(NOW() ,'YYYYMMDDHH24MISS')
     , ''
     , TUR.CHN_CLSF_CD
     , ''
     , (SELECT CD_NM FROM PLT_COMN_CD WHERE USE_YN = 'Y' AND GROUP_CD = 'TALK001' AND CD = '82')
     , ''
     , SUBSTR(TURD.CONTENT,0,20)
     , ''
     , ''
     , ''
     , '82'
     , 'SYSTEM'
     , TUR.TALK_DIST_DT
     , TUR.TALK_READ_DT
     , TO_CHAR(NOW() ,'YYYYMMDDHH24MISS')
     , ''
     , 'SYSTEM'
     , 'SYSTEM'
     , SYSTIMESTAMP
     , 'SYSTEM'
     , 'SYSTEM'
     , SYSTIMESTAMP
     , 'SYSTEM'
     , SYSTIMESTAMP
     , TALK_INQRY_CD
     , TUR.ORDER_NUMBER
     , TUR.CHANNEL
     , TUR.TALK_READY_DT
  FROM PLT_CHT_USER_RDY TUR
  LEFT OUTER JOIN 
       ( 
         SELECT * 
           FROM ( 
                  SELECT * 
                    FROM PLT_CHT_USER_RDY_DTL 
                   WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
                     AND SNDR_KEY = #{SNDR_KEY}
                     AND CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
                     AND SNDR_KEY = #{SNDR_KEY}
                     AND TYPE NOT IN ('reference','expired')
                   ORDER BY REG_DT ASC
                ) R
          WHERE ROWNUM = 1 
       ) TURD
      	ON TUR.CUST_ID = TURD.CUST_ID 
  LEFT OUTER JOIN PLT_CUS C
  		ON TUR.CUST_ID = C.CUST_ID
 WHERE #{CUSTCO_ID} LIKE ('%' || TUR.CUSTCO_ID || '%')
   AND TUR.CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
   AND TUR.SNDR_KEY = #{SNDR_KEY}
   AND TUR.TALK_READY_CD = '09'
</insert>

<!-- 문의유형 선택 안함 데이터 이관 -->
<update id="updateNoInqryToContact" parameterType="java.util.HashMap">
	UPDATE /* updateNoInqryToContact - 문의유형 선택 안함 데이터 UPDATE */
		PLT_CHT_CUTT
	SET CUTT_STTS_CD = 'DMND_GIVEUP'
		, PRCS_RSLT_CD = 'DMND_GIVEUP'
		, RGTR_ID = '2'::INTEGER
		, REG_DT = TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
		, MDFR_ID = '2'::INTEGER
		, MDFCN_DT = TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
	WHERE CUTT_STTS_CD = 'QSTN_CHCING'
		AND SNDR_KEY = #{SNDR_KEY}::INTEGER
		AND CUST_ID = (SELECT CUST_ID
						FROM PLT_CHT_CUST
						WHERE CHT_USER_KEY = #{CHT_USER_KEY}
						ORDER BY CUST_ID
   						LIMIT 1)::INTEGER
</update>

<!-- 상담사배정 오랜 대기 데이터 이관 -->
<insert id="insertdelayToContact" parameterType="java.util.HashMap">
INSERT INTO PLT_CHT_CUTT
     (
        CHT_CUTT_ID,
        CUST_ID,
        CUSTCO_ID,
        SNDR_KEY,
        CUSTOMER_ID,
        TALK_START_DT,
        CUTT_END_DT,
        TALK_SESSION_CD,
        CHN_CLSF_CD,
        CNSL_TYP_CD,
        TALK_QST,
        TALK_ANS,
        TALK_TITLE,
        OWN_CHECK_YN,
        PRCS_RSLT_CD,
        CST_TYP_CD,
        CUTT_STTS_CD,
        USER_ID,
        TALK_DIST_DT,
        TALK_READ_DT,
        TALK_READY_DT,
        TALK_CONTACT_DT,
        TALK_ENT_CD,
        REGR_DEPT_CD,
        REGR_ID,
        REG_DTTM,
        AMDR_DEPT_CD,
        AMDR_ID,
        UPD_DTTM,
        PROC_ID,
        REG_DT,
        TALK_INQRY_CD,
        ORDER_NUMBER,
        CHANNEL
     )
SELECT #{CHT_CUTT_ID}
     , TUR.CUST_ID
     , TUR.CUSTCO_ID
     , TUR.SNDR_KEY
     , C.CUSTOMER_ID
     , TO_CHAR(NOW() ,'YYYYMMDDHH24MISS')
     , TO_CHAR(NOW() ,'YYYYMMDDHH24MISS')
     , ''
     , TUR.CHN_CLSF_CD
     , ''
     , (SELECT CD_NM FROM PLT_COMN_CD WHERE USE_YN = 'Y' AND GROUP_CD = 'TALK001' AND CD = '83')
     , ''
     , SUBSTR(TURD.CONTENT,0,20)
     , ''
     , ''
     , ''
     , '83'
     , 'SYSTEM'
     , TUR.TALK_DIST_DT
     , TUR.TALK_READ_DT
     , TUR.TALK_READY_DT
     , TO_CHAR(NOW() ,'YYYYMMDDHH24MISS')
     , ''
     , 'SYSTEM'
     , 'SYSTEM'
     , SYSTIMESTAMP
     , 'SYSTEM'
     , 'SYSTEM'
     , SYSTIMESTAMP
     , 'SYSTEM'
     , SYSTIMESTAMP
     , TALK_INQRY_CD
     , TUR.ORDER_NUMBER
     , TUR.CHANNEL
  FROM PLT_CHT_USER_RDY TUR
  LEFT OUTER JOIN 
       ( 
         SELECT * 
           FROM ( 
                  SELECT * 
                    FROM PLT_CHT_USER_RDY_DTL 
                   WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
                     AND CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
                     AND SNDR_KEY = #{SNDR_KEY}
                     AND TYPE NOT IN ('reference','expired')
                   ORDER BY REG_DT ASC
                ) R
          WHERE ROWNUM = 1
       ) TURD
       	ON TUR.CUST_ID = TURD.CUST_ID 
    LEFT OUTER JOIN PLT_CUS C
    	ON TUR.CUST_ID = C.CUST_ID
 WHERE #{CUSTCO_ID} LIKE ('%' || TUR.CUSTCO_ID || '%')
   AND TUR.CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
   AND TUR.SNDR_KEY = #{SNDR_KEY}
   AND TUR.TALK_READY_CD = '10'
</insert>

<!-- 상담유형 2레벨에 따른 템플릿 , KMG 20181018-->
<select id="selectCnslTypeTemplateContent" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT 
      TEMPLATE_CONTENT 
   FROM TWB_TALK_CNSL_TEMPLATE A
   INNER JOIN PLT_CHT_CUTT_TYP B
   ON A.TEMPLATE_ID = B.TEMPLATE_ID
   AND #{CUSTCO_ID} LIKE ('%' || A.CUSTCO_ID || '%')
   AND #{CUSTCO_ID} LIKE ('%' || B.CUSTCO_ID || '%')
   AND B.CNSL_TYP_CD = #{CNSL_TYP_CD}
</select>

<!-- 상담 대기상세에서 상담대기이력으로 데이터 저장 -->	
<insert id="insertRtnTalkReadyDetHist"  parameterType= "java.util.HashMap">
INSERT INTO PLT_CHT_USER_RDY_DET_HST
     (   CUST_ID
		,TALK_SERIAL_NUMBER
		,CUSTCO_ID
		,SNDR_KEY
		,TALK_API_CD
		,SESSION_ID
		,TYPE
		,CONTENT
		,IMAGE_URL
		,IMAGE_TALK_PATH
		,LINKS
		,REGR_DEPT_CD
		,REGR_ID
		,REG_DTTM
		,AMDR_DEPT_CD
		,AMDR_ID
		,UPD_DTTM
		,PROC_ID
		,REG_DT
     )
SELECT   CUST_ID
		,TALK_SERIAL_NUMBER
		,CUSTCO_ID
		,SNDR_KEY
		,TALK_API_CD
		,SESSION_ID
		,TYPE
		,CONTENT
		,IMAGE_URL
		,IMAGE_TALK_PATH
		,LINKS
		,REGR_DEPT_CD
		,REGR_ID
		,REG_DTTM
		,AMDR_DEPT_CD
		,AMDR_ID
		,UPD_DTTM
		,PROC_ID
		,REG_DT
  FROM PLT_CHT_USER_RDY_DTL
 WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
   AND CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
</insert>

<!-- 실제상담사가 ready 중인지.. 확인(상담톡 메인에서 사용) -->	
<select id="isReadyUser"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
SELECT COUNT(CUSL_ID) IS_READY
FROM PLT_CHT_CUTT_RDY
WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
  AND CUSL_ID = #{AGENT_ID}::INTEGER
</select>

<!-- 상담 이력 데이타 저장 -->	
<insert id="insertTalkContactHist"  parameterType= "java.util.HashMap">
INSERT INTO PLT_CHT_CUTT_HSTRY
(
	CHT_CUTT_HSTRY_ID
	, CHT_CUTT_ID
	, CUSTCO_ID
	, CUST_ID
	, SNDR_KEY
	, CUSL_ID
	, CUTT_BGNG_DT
	, CUTT_END_DT
	, CHN_CLSF_CD
	, CUTT_TYPE_ID
	, CHT_END_DT
	, QSTN_TYPE_ID
	, CUTT_TTL
	, CUTT_CN
	, CHT_NM
	, PRCS_RSLT_CD
	, CUTT_STTS_CD
	, ALTMNT_RDY_REG_DT
	, CUTT_RDY_REG_DT
	, CUTT_HSTRY_REG_DT
	, QSTN_CHC_RDY_DT
	, CHBT_YN
	, CHBT_STTS_CD
	, CUST_NORSPNS_MSG_HR
	, AUTO_GRTNG_YN
	, SYS_MSG_SKIP_YN
	, CLBK_YN
	, CLBK_YMD
	, CLBK_BGNG_DT, CUST_NORSPNS_HR_SUM
	, DSGN_CUSL_ID
	, RGTR_ID
	, REG_DT
	, MDFR_ID
	, MDFCN_DT
)
SELECT #{CHT_CUTT_HSTRY_ID}::INTEGER
	, CHT_CUTT_ID
	, CUSTCO_ID
	, CUST_ID
	, SNDR_KEY
	, CUSL_ID
	, CUTT_BGNG_DT
	, CUTT_END_DT
	, CHN_CLSF_CD
	, CUTT_TYPE_ID
	, TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
	, QSTN_TYPE_ID
	, CUTT_TTL
	, CUTT_CN
	, CHT_NM
	, PRCS_RSLT_CD
	, CUTT_STTS_CD
	, ALTMNT_RDY_REG_DT
	, CUTT_RDY_REG_DT
	, CUTT_HSTRY_REG_DT
	, QSTN_CHC_RDY_DT
	, CHBT_YN
	, CHBT_STTS_CD
	, CUST_NORSPNS_MSG_HR
	, AUTO_GRTNG_YN
	, SYS_MSG_SKIP_YN
	, CLBK_YN
	, CLBK_YMD
	, CLBK_BGNG_DT
	, CUST_NORSPNS_HR_SUM
	, DSGN_CUSL_ID
	, #{USER_ID}::INTEGER
	, TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
	, #{USER_ID}::INTEGER
	, TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
  FROM PLT_CHT_CUTT
 WHERE CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
</insert>

<!-- 메시지 전송 후 데이터 이관 2018.11.30 kmg-->
<insert id="insertTalkReadyToTalkContact" parameterType="java.util.HashMap">
INSERT INTO PLT_CHT_CUTT
     (
        CHT_CUTT_ID,
        CUST_ID,
        CUSTCO_ID,
        SNDR_KEY,
        CUSTOMER_ID,
        TALK_START_DT,
        CUTT_END_DT,
        TALK_SESSION_CD,
        CHN_CLSF_CD,
        CNSL_TYP_CD,
        TALK_QST,
        TALK_ANS,
        TALK_TITLE,
        OWN_CHECK_YN,
        PRCS_RSLT_CD,
        CST_TYP_CD,
        CUTT_STTS_CD,
        USER_ID,
        TALK_DIST_DT,
        TALK_READ_DT,
        TALK_CONTACT_DT,
        TALK_ENT_CD,
        REGR_DEPT_CD,
        REGR_ID,
        REG_DTTM,
        AMDR_DEPT_CD,
        AMDR_ID,
        UPD_DTTM,
        PROC_ID,
        REG_DT,
        TALK_INQRY_CD,
        ORDER_NUMBER,
        CHANNEL,
        TALK_READY_DT,
     )
SELECT #{CHT_CUTT_ID}
     , TUR.CUST_ID
     , TUR.CUSTCO_ID
     , TUR.SNDR_KEY
     , C.CUSTOMER_ID
     , TO_CHAR(NOW() ,'YYYYMMDDHH24MISS')
     , TO_CHAR(NOW() ,'YYYYMMDDHH24MISS')
     , ''
     , TUR.CHN_CLSF_CD
     , ''
     , (SELECT CD_NM FROM PLT_COMN_CD WHERE USE_YN = 'Y' AND GROUP_CD = 'TALK001' AND CD = '21')
     , ''
     , SUBSTR(TURD.CONTENT,0,20)
     , ''
     , '1'
     , ''
     , '21'
     , 'SYSTEM'
     , TUR.TALK_DIST_DT
     , TUR.TALK_READ_DT
     , TO_CHAR(NOW() ,'YYYYMMDDHH24MISS')
     , ''
     , 'SYSTEM'
     , 'SYSTEM'
     , SYSTIMESTAMP
     , 'SYSTEM'
     , 'SYSTEM'
     , SYSTIMESTAMP
     , 'SYSTEM'
     , SYSTIMESTAMP
     , TALK_INQRY_CD
     , TUR.ORDER_NUMBER
     , TUR.CHANNEL
     , TUR.TALK_READY_DT
  FROM PLT_CHT_USER_RDY TUR
   LEFT OUTER JOIN 
       ( 
         SELECT * 
           FROM ( 
                  SELECT * 
                    FROM PLT_CHT_USER_RDY_DTL 
                   WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
                     AND CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
                     AND SNDR_KEY = #{SNDR_KEY}
                     AND TYPE NOT IN ('reference','expired')
                   ORDER BY REG_DT ASC
                ) R
          WHERE ROWNUM = 1
       ) TURD
       	ON TUR.CUST_ID = TURD.CUST_ID
  	LEFT OUTER JOIN PLT_CUS C
  		ON TUR.CUST_ID = C.CUST_ID
 WHERE #{CUSTCO_ID} LIKE ('%' || TUR.CUSTCO_ID || '%')
   AND TUR.CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
   AND TUR.SNDR_KEY = #{SNDR_KEY}
   AND TUR.TALK_READY_CD = '09'
</insert>

<!-- 이관 전 문의유형 업데이트 2018.11.30 kmg-->
<update id="updateTalkUserReadyInqryCdIsThisCode" parameterType="java.util.HashMap">
UPDATE 	/* updateTalkUserReadyInqryCdIsThisCode - 선택 문의유형 업데이트(배분 대기 전) */
	PLT_CHT_CUTT
SET QSTN_TYPE_ID = #{QSTN_TYPE_ID}::INTEGER
WHERE SNDR_KEY = #{SNDR_KEY}::INTEGER
	AND CUST_ID = (SELECT CUST_ID
					FROM PLT_CHT_CUST
					WHERE CHT_USER_KEY = #{CHT_USER_KEY}
					ORDER BY CUST_ID
					LIMIT 1)::INTEGER
	AND CUTT_STTS_CD = 'QSTN_CHCING'	/* 뮨의유형 선택중인 건 */
</update>

<!-- 전달에 필요한 값 조회 2019.04.15 lsm -->	
<select id="selectRtnInqryDetail"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
SELECT BOT_SERVICE_NM
	   , BOT_SERVICE_CD
	   , BOT_INQRY_NM
	   , BOT_INQRY_CD
	   , BOT_CALL_ID
	   , TALK_INQRY_CD
	   FROM PLT_CHT_CUTT
	   WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
	     AND CHT_CUTT_ID = #{CHT_CUTT_ID}
</select>


<!-- 고객/에이전트 응답시간 통계 업데이트-->
<update id="updateResponseTime" parameterType="java.util.HashMap">
<![CDATA[
MERGE INTO PLT_CHT_CUTT T
USING
(
    SELECT AA.CUSTCO_ID
         , AA.CHT_CUTT_ID
	     , SUM(CASE WHEN TO_CHAR(AA.REG_DT, 'YYYY-MM-DD HH24:MI') = '0000-00-00 00:00' 
		 	             OR TO_CHAR(BB.REG_DT, 'YYYY-MM-DD HH24:MI') = '0000-00-00 00:00' 
			             OR (CAST(BB.REG_DT AS DATE) - CAST(AA.REG_DT AS DATE)) < 0 OR AA.RCPTN_DSPTCH_CD = 'RCV'
		            THEN 0 
		            ELSE (SELECT CAST(TO_CHAR(CAST(BB.REG_DT AS DATE) - CAST(AA.REG_DT AS DATE)) AS INTEGER) * (24*60*60) AS SEC )
		       END) CUST_RES_TIME
	     , SUM(CASE WHEN TO_CHAR(AA.REG_DT, 'YYYY-MM-DD HH24:MI') = '0000-00-00 00:00' 
			             OR TO_CHAR(BB.REG_DT, 'YYYY-MM-DD HH24:MI') = '0000-00-00 00:00' 
			             OR (CAST(BB.REG_DT AS DATE) - CAST(AA.REG_DT AS DATE)) < 0 OR AA.RCPTN_DSPTCH_CD = 'SND'
		            THEN 0 
		            ELSE (SELECT CAST(TO_CHAR(CAST(BB.REG_DT AS DATE) - CAST(AA.REG_DT AS DATE)) AS INTEGER) * (24*60*60) AS SEC )
		       END) AGENT_RES_TIME
      FROM (
	        SELECT ROW_NUMBER() OVER(ORDER BY D.REG_DT ASC) AS RN
	             , D.* 
	          FROM PLT_CHT_CUTT_DTL D
	         WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
	           AND CHT_CUTT_ID = #{CHT_CUTT_ID}
           ) AA
           LEFT JOIN (
	        SELECT ROW_NUMBER() OVER(ORDER BY DD.REG_DT ASC) AS RN
	             , DD.*
	          FROM PLT_CHT_CUTT_DTL DD
	         WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
	           AND CHT_CUTT_ID = #{CHT_CUTT_ID}
           ) BB 
           ON AA.RN = BB.RN
     WHERE AA.RCPTN_DSPTCH_CD IS NOT NULL
     GROUP BY AA.CUSTCO_ID, AA.CHT_CUTT_ID
) S
ON (    T.CUSTCO_ID    = S.CUSTCO_ID
    AND T.CHT_CUTT_ID = S.CHT_CUTT_ID)
WHEN MATCHED THEN
UPDATE SET AGENT_RES_TIME = S.AGENT_RES_TIME
         , CUST_RES_TIME  = S.CUST_RES_TIME
]]>
</update>

<!-- 고객/에이전트 무응답시간 통계 업데이트-->
<update id="updateNonResponseTime" parameterType="java.util.HashMap">
<![CDATA[
MERGE INTO PLT_CHT_CUTT T
USING
(
	SELECT AA.CUSTCO_ID
         , AA.CHT_CUTT_ID
         , AA.CUST_NON_RES_TIME
         , AA.AGENT_NON_RES_TIME
	  FROM (
			SELECT C.CUSTCO_ID
                 , C.CHT_CUTT_ID
                 , (CASE WHEN D.RCPTN_DSPTCH_CD = 'SND' 
	                     THEN (SELECT CAST(TO_CHAR(CAST(M.REG_DT AS DATE) - CAST(MM.REG_DT AS DATE)) AS INTEGER) * (24*60*60) AS SEC )
		                 ELSE 0 
		            END) AS CUST_NON_RES_TIME
		         , (CASE WHEN D.RCPTN_DSPTCH_CD = 'RCV' 
                         THEN (SELECT CAST(TO_CHAR(CAST(M.REG_DT AS DATE) - CAST(MM.REG_DT AS DATE)) AS INTEGER) * (24*60*60) AS SEC )
		                 ELSE 0 
		            END) AS AGENT_NON_RES_TIME
			  FROM PLT_CHT_CUTT C
			  INNER JOIN PLT_CHT_CUTT_DTL D 
			          ON C.CHT_CUTT_ID = D.CHT_CUTT_ID
			  INNER JOIN (
				          SELECT CHT_CUTT_ID, MAX(REG_DT) REG_DT
			                FROM PLT_CHT_CUTT_DTL
			               WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
			                 AND CHT_CUTT_ID = #{CHT_CUTT_ID}
				             AND COALESCE(TYPE, 'SYSTEM') IN ('TX', 'TEXT', 'PHOTO', 'LI')
			                 AND CONTENT NOT LIKE '%상담이 종료되었습니다%'
				           GROUP BY CHT_CUTT_ID
			             ) M 
			          ON D.CHT_CUTT_ID = M.CHT_CUTT_ID 
			         AND D.REG_DT = M.REG_DT
			  INNER JOIN (
				          SELECT CHT_CUTT_ID, MAX(REG_DT) REG_DT
			                FROM PLT_CHT_CUTT_DTL
			               WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
			                 AND CHT_CUTT_ID = #{CHT_CUTT_ID}
			               GROUP BY CHT_CUTT_ID
			             ) MM 
			          ON M.CHT_CUTT_ID = MM.CHT_CUTT_ID
			 WHERE #{CUSTCO_ID} LIKE ('%' || C.CUSTCO_ID || '%')
			   AND #{CUSTCO_ID} LIKE ('%' || D.CUSTCO_ID || '%')
			   AND C.CHT_CUTT_ID = #{CHT_CUTT_ID}
	       ) AA
) S
ON (    T.CUSTCO_ID    = S.CUSTCO_ID
    AND T.CHT_CUTT_ID = S.CHT_CUTT_ID)
WHEN MATCHED THEN
UPDATE SET CUST_NON_RES_TIME = S.CUST_NON_RES_TIME
         , AGENT_NON_RES_TIME  = S.AGENT_NON_RES_TIME
]]>
</update>

<!-- 상담진행상태별 진행상황 조회 -->
<select id="selectTalkStateProcessByUser" resultType="java.util.HashMap">
<![CDATA[
    
SELECT (SELECT COUNT(CUST_ID) 
            FROM PLT_CHT_RDY UR
                WHERE UR.CUSL_ID = #{USER_ID} ::INTEGER
                  AND CUSTCO_ID = #{CUSTCO_ID}::INTEGER ) READY_CNT -- 접수건
     , D.TALKING_CNT                     AS TALKING_CNT -- 상담건
     , D.POST_CNT                     AS POST_CNT      -- 후처리건
     , D.END_CNT                     AS END_CNT         -- 상담완료건
     , (D.END_CNT + D.POST_CNT)                     AS END_TOT_CNT         -- 상담완료건 + 후처리
     , COALESCE(D.CALLBACK_CNT,0)                    AS CALLBACK_CNT  -- 콜백 대기건  
  FROM (
         SELECT SUM(CASE WHEN CUTT_STTS_CD = 'ING' AND COALESCE(PRCS_RSLT_CD,'0') != 'CLBK_WAIT' THEN 1 ELSE 0 END )           AS TALKING_CNT     
            , SUM(CASE WHEN CUTT_STTS_CD IN('AFTPRCS','AFTPRCS_NORSPNS') THEN 1 ELSE 0 END )  AS POST_CNT        
                , SUM(CASE WHEN CUTT_STTS_CD IN ( 'CMPL_TRAN', 'CMPL') 
                     AND CUTT_BGNG_DT >= TO_CHAR(NOW()-INTERVAL'7 DAYS', 'YYYYMMDDHH24MISS')
                        THEN 1 ELSE 0 END )  AS END_CNT                             
            , SUM(CASE WHEN PRCS_RSLT_CD = 'CLBK_WAIT' AND CUTT_STTS_CD = 'ING' THEN 1 ELSE 0 END )  AS CALLBACK_CNT  
           FROM PLT_CHT_CUTT
          WHERE CUSL_ID = #{USER_ID}::INTEGER
           AND CUSTCO_ID = #{CUSTCO_ID}::INTEGER
       ) D
       
       
]]>
</select>

<!-- 상담정보 조회  -->
<select id="selectChatInfo" resultType="java.util.HashMap">
SELECT *
  FROM PLT_CHT_CUTT
 WHERE CHT_CUTT_ID 	= #{CHT_CUTT_ID}
   AND CUSTCO_ID		= #{ASP_NEWCUST_KEY}
</select>

<!-- 비대면URL 전송 건수 조회  -->
<select id="selectUntactUrlSendCnt" resultType="java.util.HashMap">
SELECT COUNT(*) AS UNTACT_URL_COUNT
  FROM PLT_CHT_CUTT_DTL
 WHERE CHT_CUTT_ID 	= #{CHT_CUTT_ID}
   AND CUSTCO_ID		= #{CUSTCO_ID}
   AND TYPE             = 'LI_UNTACT'
</select>


<!-- 챗봇 상담이력 삽입 -->
<insert id="insertChatbotContact" parameterType="java.util.HashMap">
INSERT INTO PLT_CHT_CUTT
     (
        CHT_CUTT_ID,
        CUST_ID,
        CUSTCO_ID,
        SNDR_KEY,
        CUSTOMER_ID,
        TALK_START_DT,
        CUTT_END_DT,
        TALK_SESSION_CD,
        CHN_CLSF_CD,
        CNSL_TYP_CD,
        TALK_QST,
        TALK_ANS,
        TALK_TITLE,
        OWN_CHECK_YN,
        PRCS_RSLT_CD,
        CUTT_STTS_CD,
        USER_ID,
        TALK_DIST_DT,
        TALK_READ_DT,
        TALK_READY_DT,
        TALK_CONTACT_DT,
        TALK_ENT_CD,
        REGR_DEPT_CD,
        REGR_ID,
        REG_DTTM,
        AMDR_DEPT_CD,
        AMDR_ID,
        UPD_DTTM,
        PROC_ID,
        REG_DT,
        TALK_INQRY_CD,
        CHANNEL
     )
VALUES
	(
		#{CHT_CUTT_ID},                         /*CHT_CUTT_ID  상담이력ID*/
        #{CUST_ID},                           /*CUST_ID    TALK_사용자_키*/
        #{CUSTCO_ID},                            /*CUSTCO_ID     ASP_고객사_키*/
        #{SNDR_KEY},                          /*SNDR_KEY   ASP_센더_키*/
        #{CUSTOMER_ID},                             /*CUSTOMER_ID      고객ID, TALK_사용자_키와 동일함*/
        TO_CHAR(SYSTIMESTAMP, 'YYYYMMDDHH24MISS'),  /*TALK_START_DT    */
        TO_CHAR(SYSTIMESTAMP, 'YYYYMMDDHH24MISS'),  /*CUTT_END_DT      */
        NULL,                                       /*TALK_SESSION_CD  */
        'KAKAO',                                 /*CHN_CLSF_CD      */
        NULL,                                       /*CNSL_TYP_CD      */
        #{TALK_QST},                                /*TALK_QST         */
        #{TALK_ANS},                                /*TALK_ANS         */
        #{TALK_TITLE},                              /*TALK_TITLE       */
        #{OWN_CHECK_YN},                            /*OWN_CHECK_YN     */
        '1',                                        /*PRCS_RSLT_CD      */
        '40',                                       /*CUTT_STTS_CD     챗봇 상담이력 40*/
        'CHATBOT',                                  /*USER_ID          */
        TO_CHAR(SYSTIMESTAMP, 'YYYYMMDDHH24MISS'),	/*TALK_DIST_DT     */
        TO_CHAR(SYSTIMESTAMP, 'YYYYMMDDHH24MISS'),  /*TALK_READ_DT     */
        TO_CHAR(SYSTIMESTAMP, 'YYYYMMDDHH24MISS'),  /*TALK_READY_DT    */
        TO_CHAR(SYSTIMESTAMP, 'YYYYMMDDHH24MISS'),  /*TALK_CONTACT_DT  */
        NULL,                                       /*TALK_ENT_CD      */
        'CHATBOT',                                  /*REGR_DEPT_CD     */
        'CHATBOT',                                  /*REGR_ID          */
        SYSTIMESTAMP,                               /*REG_DTTM         */
        'CHATBOT',                                  /*AMDR_DEPT_CD     */
        'CHATBOT',                                  /*AMDR_ID          */
        SYSTIMESTAMP,                               /*UPD_DTTM         */
        'CHATBOT',                                  /*PROC_ID          */
        SYSTIMESTAMP,                               /*REG_DT    */
        NULL,                                       /*TALK_INQRY_CD    */
        'CHB'                                       /*CHANNEL          */
	)
</insert>

<!-- 챗봇 상담이력상세 삽입 -->	
<insert id="insertChatbotContactDetail"  parameterType= "java.util.HashMap">
INSERT INTO PLT_CHT_CUTT_DTL
     (
       CHT_CUTT_ID
     , TALK_SERIAL_NUMBER
     , CUSTCO_ID
     , USER_ID
     , RCPTN_DSPTCH_CD
     , SNDRCV_ID
     , TYPE
     , CONTENT
     , IMAGE_URL
     , IMAGE_TALK_PATH
     , AUTO_ANSWER
     , LINKS
     , REGR_DEPT_CD
     , REGR_ID
     , REG_DTTM
     , AMDR_DEPT_CD
     , AMDR_ID
     , UPD_DTTM
     , PROC_ID
     , REG_DT
     , ORG_CONT_ID
     )
VALUES
     (
       #{CHT_CUTT_ID}
     , #{TALK_SERIAL_NUMBER}
     , #{CUSTCO_ID}
     , 'CHATBOT'
     , #{RCPTN_DSPTCH_CD}
     , NULL
     , #{TYPE}
     , #{CONTENT, typeHandler=ContentCipherTypeHandler}
     , NULL
     , NULL
     , NULL
     , NULL
     , 'CHATBOT'
     , 'CHATBOT'
     , SYSTIMESTAMP
     , 'CHATBOT'
     , 'CHATBOT'
     , SYSTIMESTAMP
     , 'CHATBOT'
     , SYSTIMESTAMP
     , NULL
     )
</insert>


<!-- 가장 마지막 챗봇업무가 (인증)유효한 시간 내에 있는지 확인한다.  -->
<select id="checkLastChatbotBusiness" resultType="java.util.HashMap">
SELECT CASE WHEN TTCD.REG_DT > NOW()-1/24/60* CAST(COALESCE(#{AUTH_TIME}, '10') AS INTEGER) -- 10분 인증유효시간
              THEN 'true'
            ELSE 'false' END AS IS_VALID_BUSINESS
  FROM ( 
         SELECT CHT_CUTT_ID
           FROM (
                  SELECT CHT_CUTT_ID
                    FROM PLT_CHT_CUTT
                   WHERE TALK_DIST_DT >= TO_CHAR(NOW()-1, 'YYYYMMDDHH24MISS') -- 챗봇 업무 24시간 내
                   ORDER BY TALK_DIST_DT DESC
                )
          WHERE ROWNUM = 1
       ) TTC
  INNER JOIN PLT_CHT_CUTT_DTL TTCD
     ON TTC.CHT_CUTT_ID = TTCD.CHT_CUTT_ID
  WHERE TTCD.REG_DT >= NOW()-1  -- 챗봇 업무 24시간 내
    AND RCPTN_DSPTCH_CD = 'SND'  -- 챗봇이 응답한
    AND TYPE = 'DONE'      -- 업무 마지막 플래그
</select>

<!-- 비회원일 경우, 고객 등록-->
<insert id="insertRtnChatCustomerInfo" parameterType= "java.util.HashMap" >
	INSERT INTO
		PLT_CUS (
			CUSTOMER_ID
			, CUSTCO_ID
			, SNDR_KEY
			, CUST_ID			
			, ATENT_REGR_DATE
			, ATENT_REGR_ID
			, ATENT_AMDR_DATE
			, ATENT_AMDR_ID
			, CUSTOMER_MEMO
			, CUSTOMER_PHONE_NO
			, MEMO_REGR_DATE
			, MEMO_REGR_ID
			, MEMO_AMDR_DATE
			, MEMO_AMDR_ID
			
		) VALUES (
			#{CUST_ID}
			, NULLIF(#{CUSTCO_ID},'')
			, #{SNDR_KEY}
			, #{CUST_ID}			
			, NOW()
			, #{USER_ID}
			, NOW()
			, #{USER_ID}
			, #{MEMO}
			, #{CUSTOMER_PHONE_NO}
			, NOW()
			, #{USER_ID}
			, NOW()
			, #{USER_ID}
		
		)
</insert>

<!-- 채팅메인 - 고객 정보 수정-->
<update id="updateRtnChatCustomerInfo" parameterType= "java.util.HashMap" >
	UPDATE
		PLT_CUS
	SET
		CUSTOMER_MEMO = #{MEMO}
		, ATENT_CUSTOMER = #{ATENT_CUSTOMER}
		, CUSTOMER_PHONE_NO = #{CUSTOMER_PHONE_NO}
		, MEMO_AMDR_DATE = NOW()
		, MEMO_AMDR_ID = #{USER_ID}
		, EML = #{EML}
		, OWNHOM_ADR = #{OWNHOM_ADR}
		, OWNHOM_DETAIL_ADR = #{OWNHOM_DETAIL_ADR}
		, CUSTOMER_NM = #{CUSTOMER_NM}
	WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
      AND CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
</update>

<select id="selectCntPhoneNo"  resultType="java.util.HashMap">
	SELECT COUNT(*) AS CNT
	FROM PLT_CUS
	WHERE CUSTCO_ID = #{ASP_NEWCUST_KEY}
      AND CUSTOMER_PHONE_NO = #{CUSTOMER_PHONE_NO}
</select>

<update id="updateTalkUserKey" parameterType= "java.util.HashMap" >
	UPDATE
		PLT_CUS
	SET
	<if test="CUST_ID !='' and CUST_ID != null">
		CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
	</if>
	WHERE CUSTCO_ID = #{ASP_NEWCUST_KEY}
      AND CUSTOMER_PHONE_NO = #{CUSTOMER_PHONE_NO}
</update>

<delete id="deleteOneUserInfo"  parameterType= "java.util.HashMap">
DELETE FROM PLT_CUS
 WHERE CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
 	AND CUST_ID = CUSTOMER_ID
</delete>

<!-- 회사로고 이미지 경로를 조회한다.  -->
<select id="selectImgSrc" resultType="java.util.HashMap">
SELECT *
  FROM PLT_FILE
  WHERE CUSTCO_ID = #{ASP_NEWCUST_KEY}
  	AND ACTL_FILE_NM LIKE ('%' || (SELECT CO_NM
                                        FROM PLT_ASP_CUS PAC, PLT_ASP_CUS_CHN PACC
                                        WHERE PACC.SNDR_KEY = #{SNDR_KEY}
                                        AND PAC.CUSTCO_ID = PACC.CUSTCO_ID) || '%')
    AND TASK_TYPE_CD = 'logo'
</select>

<!-- 채팅채널을 조회한다.  -->
<select id="selectSenderKey" resultType="java.util.HashMap">
	SELECT SNDR_KEY 			AS CD
		,DSPTCH_PRF_NM 			AS NM
	FROM PLT_ASP_CUS_CHN
	WHERE CUSTCO_ID = #{ASP_NEWCUST_KEY}
</select>

<update id="updateMarkUp" parameterType= "java.util.HashMap" >
	UPDATE
		PLT_CHT_CUTT
	SET
		BMK_YN = #{BMK_YN}
	WHERE CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
</update>

<!-- 채팅가능여부를 조회한다.  -->
<select id="getChatYN" resultType="java.util.HashMap">
	SELECT COUNT(*)					AS CNT
	FROM PLT_ASP_CUS
	WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
    AND CHAT_YN = 'Y'
</select>

<!-- 발신프로필을 조회한다.  -->
<select id="getSender" resultType="java.util.HashMap">
	SELECT SNDR_KEY
		, CUSTCO_ID
		, CHN_CLSF_CD
		, UUID
		, DSPTCH_PRF_KEY
		, DSPTCH_PRF_NM
	FROM PLT_CUSTCO_CHN 
	WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
	<!--
    AND UUID LIKE ('%'||#{UUID}||'%')
    AND DSPTCH_PRF_NM LIKE ('%'||#{DSPTCH_PRF_NM}||'%')
    AND DSPTCH_PRF_KEY LIKE ('%'||#{DSPTCH_PRF_KEY}||'%')
    -->
</select>

<!-- uuid를 조회한다.  -->
<select id="getUuid" resultType="java.util.HashMap">
	SELECT COUNT(UUID)			AS CHK_UUID		/*UUID중복 체크*/
		, COUNT(DSPTCH_PRF_KEY)	AS CHK_PRF_KEY	/*발신프로필 키 중복 체크*/
	FROM PLT_CUSTCO_CHN 
	WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
    AND UUID = #{UUID}
    AND DSPTCH_PRF_KEY = #{DSPTCH_PRF_KEY}
    AND ATALK_YN = #{ATALK_YN}
</select>


<!-- 상담이력 강제생성 -->	
<insert id="insertChatForceCnsl"  parameterType= "java.util.HashMap">
INSERT INTO PLT_CHT_CUTT
     (
     	CHT_CUTT_ID
     	, CUSTCO_ID
     	, CUST_ID
     	, SNDR_KEY
     	, CUSL_ID
     	, CUTT_BGNG_DT
     	, CUTT_END_DT
     	, CHN_CLSF_CD
     	, CUTT_TYPE_ID
     	, CUTT_CN
     	, PRCS_RSLT_CD
     	, CUTT_STTS_CD
     	, ALTMNT_RDY_REG_DT
     	, CUTT_RDY_REG_DT
     	, CUTT_HSTRY_REG_DT
     	, FORC_REG_YN
     	, RGTR_ID
     	, REG_DT
     	, MDFR_ID
     	, MDFCN_DT
     )
VALUES
     (
     	#{CHT_CUTT_ID}::INTEGER
     	, #{CUSTCO_ID}::INTEGER
     	, #{CUST_ID}::INTEGER
     	, #{SNDR_KEY}::INTEGER
     	, #{CUSL_ID}::INTEGER
     	, #{ST_DT}
     	, #{END_DT}
     	, #{CHN_CLSF_CD}
     	, #{CUTT_TYPE_ID}::INTEGER
     	, #{CUTT_CN}
     	, #{CUTT_STTS_CD}
     	, #{CUTT_STTS_CD}
     	, #{ST_DT}
     	, #{ST_DT}
     	, #{END_DT}
     	, 'Y'
     	, #{USER_ID}::INTEGER
     	, TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
     	, #{USER_ID}::INTEGER
     	, TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
     )
</insert>


<!-- 고객사 채팅 카운트  -->
<select id="chatCnslCount" resultType="java.util.HashMap">
	SELECT COUNT(CHT_CUTT_ID)											AS ALL_CNT
		, COUNT(CASE WHEN CUSL_ID = #{USER_ID}::INTEGER THEN 1 END)		AS USER_CNT
		, COUNT(CASE WHEN CUSL_ID != #{USER_ID}::INTEGER THEN 1 END)	AS OTHER_CNT
	FROM PLT_CHT_CUTT
	WHERE CUSTCO_ID = #{CUSTCO_ID}::INTEGER
</select>


<!-- 인입 채팅 조회  -->
<select id="selectNowCutt" resultType="java.util.HashMap">
	SELECT CHT_CUTT_ID
	FROM PLT_CHT_CUTT
	WHERE CUTT_STTS_CD = 'ALTMNT_WAIT'
		AND SNDR_KEY = #{SNDR_KEY}::INTEGER
		AND CHN_CLSF_CD = #{CHN_CLSF_CD}
		AND CUST_ID = (SELECT CUST_ID
						FROM PLT_CHT_CUST
						WHERE CHT_USER_KEY = #{CHT_USER_KEY}
						ORDER BY CUST_ID
   						LIMIT 1)::INTEGER
</select>

<!-- 상담이력 변경 -->
<update id="updateChtCutt" parameterType="java.util.HashMap">
	UPDATE PLT_CHT_CUTT
	SET CUTT_TYPE_ID = #{CUTT_TYPE_ID}::INTEGER
     	, CUTT_CN = #{CUTT_CN}
     	, RGTR_ID = #{CUSL_ID}::INTEGER
     	, REG_DT = TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
     	, MDFR_ID = #{USER_ID}::INTEGER
     	, MDFCN_DT = TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
	WHERE CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
</update>

<!-- 상담유형 가져오기 -->
<select id="selectCuttType" resultType="java.util.HashMap">
	SELECT 			/* selectCuttType - 상담유형 가져오기 */
		CUTT_TYPE_ID
		, UP_CUTT_TYPE_ID
		, CUTT_TYPE_SE_CD
		, CUTT_TYPE_NM
		, CUTT_TYPE_LVL
	FROM PLT_CUTT_TYPE
	WHERE CUTT_TYPE_ID = #{SRCH_CUTT_TYPE_ID}::INTEGER
</select>


<!-- 콜백등록 -->	
<insert id="insertClbkRdy"  parameterType= "java.util.HashMap">
	INSERT INTO PLT_CHT_RDY	/* insertClbkRdy - 콜백 대기테이블에 저장 */
		(
			CHT_RDY_ID
			, CUST_ID
			, CUSTCO_ID
			, CUSL_ID
			, SNDR_KEY
			, ALTMNT_STTS_CD
			, ALTMNT_RDY_REG_DT
			, CUTT_RDY_REG_DT
			, QSTN_TYPE_ID
			, CLBK_YN
			, CHN_TYPE_CD
			, RGTR_ID
			, REG_DT
			, MDFR_ID
			, MDFCN_DT
		)
	SELECT #{CHT_RDY_ID}::INTEGER
		, CUST_ID
		, CUSTCO_ID
		, CUSL_ID
		, SNDR_KEY
		, CUTT_STTS_CD
		, ALTMNT_RDY_REG_DT
		, CUTT_RDY_REG_DT
		, QSTN_TYPE_ID
		, CLBK_YN
		, CHN_CLSF_CD
		, #{USER_ID}::INTEGER
		, TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
		, #{USER_ID}::INTEGER
		, TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
	FROM PLT_CHT_CUTT
	WHERE CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
</insert>

<!-- 채팅 키워드 검색  -->
<select id="getCuttDetailList_BACK" resultType="java.util.HashMap">
	SELECT 		/* getCuttDetailList - 상담(채팅) 키워드 목록를 조회 */
		PCC.CHT_CUTT_ID			/* 채팅ID */
		, PCR.CHT_RDY_ID		/* 채팅대기ID */
		, PCC.CUST_ID				/* 고객ID */
		, (SELECT CHT_USER_KEY
			FROM PLT_CHT_CUST
			WHERE CUST_ID = PCC.CUST_ID
				AND SNDR_KEY = PCC.SNDR_KEY) AS CHT_USER_KEY		/* 채팅고객키 */
		, (SELECT CUST_NM
			FROM PLT_CUST
			WHERE CUST_ID = PCC.CUST_ID)	AS CUST_NM			/* 고객명 */
		, PCC.SNDR_KEY				/* 발송자 키 */
		, (SELECT DSPTCH_PRF_NM
			FROM PLT_CUSTCO_CHN
			WHERE SNDR_KEY = PCC.SNDR_KEY) AS DSPTCH_PRF_NM		/* 채널명 */
		, PCC.CUTT_BGNG_DT			/* 상담 시작 일시 */
		, PCC.CUTT_END_DT			/* 상담 종료 일시 */
		, PCC.CHN_CLSF_CD			/* 채널 분류 코드 */
		, (SELECT CD_NM
			FROM PLT_COMM_CD
			WHERE CUSTCO_ID = PCC.CUSTCO_ID AND GROUP_CD_ID = 'CHNL_CL'
				AND CD_ID = PCC.CHN_CLSF_CD)	AS CHN_CLSF_CD_NM		/* 채널분류명 */
		, PCC.CUTT_TYPE_ID				/* 상담유형 ID */
		, CUTT.FULL_PATH AS CUTT_TYPE
		, PCC.QSTN_TYPE_ID				/* 문의유형 ID */
		, QSTN.FULL_PATH AS QSTN_TYPE
		, PCC.CUTT_TTL				/* 상담제목 */
		, PCC.CUTT_CN				/* 상담내용 */
		, PCC.CUTT_STTS_CD			/* 상담상태코드 */
		, (SELECT CD_NM
			FROM PLT_COMM_CD
			WHERE CUSTCO_ID = PCC.CUSTCO_ID AND GROUP_CD_ID = 'CUSL_STAT'
				AND CD_ID = PCC.CUTT_STTS_CD)	AS CUTT_STTS_CD_NM		/* 상담상태명 */
		, PCC.SYS_MSG_SKIP_YN				/* 시스템메시지여부 */
		, PCC.CLBK_YN				/* 콜백여부 */
		, PCC.CLBK_YMD				/* 콜백일자 */
		, PCC.CLBK_BGNG_DT			/* 콜백시작일자 */
		, PCC.BMK_YN				/* 책갈피여부 */
		, PCCD.RCPTN_DSPTCH_MSG		/* 최근채팅내용 */
		, PCCD.CHG_RCPTN_DSPTCH_MSG	/* 최근채팅내용 금칙어적용 */
		, PCCD.REG_DT				/* 최근채팅일시 */
	FROM (SELECT PCC_D.CHT_CUTT_ID
				, PCC_D.CUST_ID
				, PCC_D.CUSTCO_ID
				, PCC_D.CUSL_ID
				, PCC_D.SNDR_KEY
				, PCC_D.CUTT_BGNG_DT
				, PCC_D.CUTT_END_DT
				, PCC_D.CHN_CLSF_CD
				, PCC_D.CUTT_TYPE_ID
				, PCC_D.QSTN_TYPE_ID
				, PCC_D.CUTT_TTL
				, PCC_D.CUTT_CN
				, PCC_D.CUTT_STTS_CD
				, PCC_D.SYS_MSG_SKIP_YN
				, PCC_D.CLBK_YN
				, PCC_D.CLBK_YMD
				, PCC_D.CLBK_BGNG_DT
				, PCC_D.BMK_YN
			FROM PLT_CHT_CUTT PCC_D
			WHERE PCC_D.CHT_CUTT_ID IN (SELECT PCCD.CHT_CUTT_ID 
										FROM PLT_CHT_CUTT_DTL PCCD
										LEFT JOIN PLT_CHT_CUTT PCC
											ON PCC.CHT_CUTT_ID = PCCD.CHT_CUTT_ID
										WHERE PCC.CUSL_ID = #{USER_ID}::INTEGER
											AND PCCD.CUSTCO_ID = #{CUSTCO_ID}::INTEGER
											<choose>
												<when test="ST_DATE != '' and ST_DATE != null and ST_DATE != undefined">
													<![CDATA[
													AND PCCD.REG_DT >= #{ST_DATE}
													]]>
												</when>
												<otherwise>
													<![CDATA[
													AND PCCD.REG_DT >= TO_CHAR(NOW()-INTERVAL'7 DAYS','YYYYMMDDHH24MISS')
													]]>
												</otherwise>
											</choose>
											<if test="END_DATE != '' and END_DATE != null and END_DATE != undefined">
												<![CDATA[
												AND PCCD.REG_DT <= #{END_DATE}
												]]>
											</if>
											AND PCCD.RCPTN_DSPTCH_MSG LIKE ('%' || #{WORD} ||'%')
										GROUP BY PCCD.CHT_CUTT_ID)
			) PCC
	LEFT JOIN (SELECT DTL2.CHT_CUTT_DTL_ID, DTL2.CHT_CUTT_ID, DTL2.RCPTN_DSPTCH_MSG, DTL2.CHG_RCPTN_DSPTCH_MSG, DTL2.REG_DT
				FROM (SELECT CHT_CUTT_ID, MAX(REG_DT) AS RECENT_DT,  MAX(CHT_CUTT_DTL_ID) AS RECENT_DTL_ID
					FROM PLT_CHT_CUTT_DTL
					GROUP BY CHT_CUTT_ID) DTL1
				LEFT JOIN PLT_CHT_CUTT_DTL DTL2
				ON DTL1.RECENT_DT = DTL2.REG_DT
					AND DTL1.RECENT_DTL_ID = DTL2.CHT_CUTT_DTL_ID
					AND DTL1.CHT_CUTT_ID = DTL2.CHT_CUTT_ID
				WHERE DTL2.MSG_TYPE_CD != 'QSTN') PCCD
		ON PCC.CHT_CUTT_ID = PCCD.CHT_CUTT_ID 
	LEFT JOIN PLT_CHT_RDY PCR
		ON PCC.SNDR_KEY = PCR.SNDR_KEY
		AND PCC.CUST_ID = PCR.CUST_ID
		AND PCC.CUSL_ID = PCR.CUSL_ID
		AND PCC.CUTT_STTS_CD = PCR.ALTMNT_STTS_CD
 	<![CDATA[
	LEFT OUTER JOIN (
		WITH RECURSIVE CUTT_TREE AS (
			SELECT CUSTCO_ID, CUTT_TYPE_ID, UP_CUTT_TYPE_ID,  CASE WHEN (SELECT ITGRT_USE_YN FROM PLT_CUTT_TYPE_STNG WHERE CUSTCO_ID = PLT_CUTT_TYPE.CUSTCO_ID) = 'Y' THEN 'ITGRT' ELSE 'IN' END  AS CUTT_TYPE_SE_CD, CUTT_TYPE_NM, CUTT_TYPE_EXPLN, CUTT_TYPE_LVL, USE_YN, SORT_ORD, 1 AS LVL, LPAD(CAST(SORT_ORD AS VARCHAR),5,'0') AS SORT, CAST(CUTT_TYPE_NM AS VARCHAR(300)) AS FULL_PATH
			FROM PLT_CUTT_TYPE
			WHERE UP_CUTT_TYPE_ID IS NULL
			AND DEL_YN = 'N'
			AND USE_YN = 'Y'
			AND CUSTCO_ID = #{CUSTCO_ID}::INTEGER
			UNION ALL
			SELECT B.CUSTCO_ID, B.CUTT_TYPE_ID, B.UP_CUTT_TYPE_ID, B.CUTT_TYPE_SE_CD, B.CUTT_TYPE_NM, B.CUTT_TYPE_EXPLN, B.CUTT_TYPE_LVL, B.USE_YN, B.SORT_ORD, C.LVL + 1 AS LVL, C.SORT || ' > ' || LPAD(CAST(B.SORT_ORD AS VARCHAR),5,'0') AS SORT, CAST(C.FULL_PATH || ' > ' || B.CUTT_TYPE_NM AS VARCHAR(300)) AS FULL_PATH
			FROM PLT_CUTT_TYPE B
			INNER JOIN CUTT_TREE C ON C.CUTT_TYPE_ID = B.UP_CUTT_TYPE_ID
			WHERE B.DEL_YN = 'N'
			AND B.USE_YN = 'Y'
			AND B.CUTT_TYPE_SE_CD = CASE WHEN (SELECT ITGRT_USE_YN FROM PLT_CUTT_TYPE_STNG WHERE CUSTCO_ID = B.CUSTCO_ID) = 'Y' THEN 'ITGRT' ELSE 'IN' END
			AND B.CUSTCO_ID = #{CUSTCO_ID}::INTEGER
		)
		SELECT
			CT.CUSTCO_ID
			, CT.CUTT_TYPE_ID
			, CT.UP_CUTT_TYPE_ID
			, (SELECT CUTT_TYPE_NM FROM PLT_CUTT_TYPE WHERE CUTT_TYPE_ID = CT.UP_CUTT_TYPE_ID) AS UP_CUTT_TYPE_NM
			, ROW_NUMBER() OVER(PARTITION BY CT.UP_CUTT_TYPE_ID ORDER BY CT.SORT_ORD) AS RE_SORT_ORD
			, CT.FULL_PATH
		FROM CUTT_TREE CT
		LEFT OUTER JOIN PLT_COMM_CD PCC ON PCC.CUSTCO_ID = CT.CUSTCO_ID AND PCC.CD_ID = CT.CUTT_TYPE_SE_CD AND PCC.GROUP_CD_ID = 'CUSL_TP_CL'

		WHERE CT.CUTT_TYPE_LVL <= (SELECT CUTT_TYPE_LMT_LVL_CD::INTEGER + 1 FROM PLT_CUTT_TYPE_STNG WHERE CUSTCO_ID = CT.CUSTCO_ID)

		ORDER BY CT.SORT
	) CUTT ON CUTT.CUTT_TYPE_ID = PCC.CUTT_TYPE_ID
	LEFT OUTER JOIN (
		WITH RECURSIVE QSTN_TREE AS (
			SELECT CUSTCO_ID, QSTN_TYPE_ID, UP_QSTN_TYPE_ID, QSTN_TYPE_SE_CD, QSTN_TYPE_NM, QSTN_TYPE_EXPLN, USE_YN, SORT_ORD, 1 AS LVL, LPAD(CAST(SORT_ORD AS VARCHAR),5,'0') AS SORT, CAST(QSTN_TYPE_NM AS VARCHAR(300)) AS FULL_PATH
			FROM PLT_CHT_QSTN_TYPE
			WHERE UP_QSTN_TYPE_ID IS NULL
			AND DEL_YN = 'N'
			AND CUSTCO_ID = #{CUSTCO_ID}::INTEGER
			UNION ALL
			SELECT B.CUSTCO_ID, B.QSTN_TYPE_ID, B.UP_QSTN_TYPE_ID, B.QSTN_TYPE_SE_CD, B.QSTN_TYPE_NM, B.QSTN_TYPE_EXPLN, B.USE_YN, B.SORT_ORD, C.LVL + 1 AS LVL, C.SORT || ' > ' || LPAD(CAST(B.SORT_ORD AS VARCHAR),5,'0') AS SORT, CAST(C.FULL_PATH || ' > ' || B.QSTN_TYPE_NM AS VARCHAR(300)) AS FULL_PATH
			FROM PLT_CHT_QSTN_TYPE B
			INNER JOIN QSTN_TREE C ON C.QSTN_TYPE_ID = B.UP_QSTN_TYPE_ID
			WHERE B.DEL_YN = 'N'
			AND B.CUSTCO_ID = #{CUSTCO_ID}::INTEGER
		)
		SELECT
			QT.CUSTCO_ID
			, QT.QSTN_TYPE_ID
			, QT.UP_QSTN_TYPE_ID
			, (SELECT QSTN_TYPE_NM FROM PLT_CHT_QSTN_TYPE WHERE QSTN_TYPE_ID = QT.UP_QSTN_TYPE_ID) AS UP_CUTT_TYPE_NM
			, ROW_NUMBER() OVER(PARTITION BY QT.UP_QSTN_TYPE_ID ORDER BY QT.SORT_ORD) AS RE_SORT_ORD
			, QT.FULL_PATH
		FROM QSTN_TREE QT

		ORDER BY QT.SORT
	) QSTN ON QSTN.QSTN_TYPE_ID = PCC.QSTN_TYPE_ID
	]]>  
	WHERE PCC.CUSL_ID = #{USER_ID}::INTEGER
		AND PCC.CUSTCO_ID = #{CUSTCO_ID}::INTEGER
		AND PCC.CUTT_STTS_CD NOT LIKE '%'||'GIVEUP'||'%' 
		<choose>
			<when test="ST_DATE != '' and ST_DATE != null and ST_DATE != undefined">
				<![CDATA[
				AND PCC.CUTT_BGNG_DT >= #{ST_DATE}
				]]>
			</when>
			<otherwise>
				<![CDATA[
				AND (
				PCC.BMK_YN = 'Y' OR
				PCC.CUTT_STTS_CD IN ('AFTPRCS','AFTPRCS_NORSPNS','ING','TEMP_SAVE') OR
				((PCC.BMK_YN != 'N' OR PCC.BMK_YN IS NULL) AND PCC.CUTT_STTS_CD != 'AFTPRCS' AND PCC.CUTT_BGNG_DT >= TO_CHAR(NOW()-INTERVAL'7 DAYS','YYYYMMDDHH24MISS'))
				)
				]]>
			</otherwise>
		</choose>
		<if test="END_DATE != '' and END_DATE != null and END_DATE != undefined">
			<![CDATA[
			AND PCC.CUTT_BGNG_DT <= #{END_DATE}
			]]>
		</if>
		<if test="CHN_CLSF_CD != '' and CHN_CLSF_CD != null and CHN_CLSF_CD != undefined">
			AND PCC.CHN_CLSF_CD = #{CHN_CLSF_CD}
		</if>
	ORDER BY 
		CASE WHEN CUTT_STTS_CD = 'ING' OR CUTT_STTS_CD LIKE ('%' || 'WAIT' || '%') THEN 0
			WHEN CUTT_STTS_CD LIKE ('%' || 'AFTPRCS' || '%') THEN 1
			WHEN CUTT_STTS_CD LIKE ('%' || 'CMPL' || '%') THEN 2
		END
		, REG_DT DESC
</select>
<!-- 채팅 키워드 검색 쿼리 튜닝  -->
<select id="getCuttDetailList" resultType="java.util.HashMap">
	/* getCuttDetailList - 채팅 키워드 검색 쿼리 튜닝 */
 	<![CDATA[
	WITH RECURSIVE CUTT_TREE AS (
		SELECT CUSTCO_ID, CUTT_TYPE_ID, UP_CUTT_TYPE_ID,  CASE WHEN (SELECT ITGRT_USE_YN FROM PLT_CUTT_TYPE_STNG WHERE CUSTCO_ID = PLT_CUTT_TYPE.CUSTCO_ID) = 'Y' THEN 'ITGRT' ELSE 'IN' END  AS CUTT_TYPE_SE_CD, CUTT_TYPE_NM, CUTT_TYPE_EXPLN, CUTT_TYPE_LVL, USE_YN, SORT_ORD, 1 AS LVL, LPAD(CAST(SORT_ORD AS VARCHAR),5,'0') AS SORT, CAST(CUTT_TYPE_NM AS VARCHAR(300)) AS FULL_PATH
		FROM PLT_CUTT_TYPE
		WHERE UP_CUTT_TYPE_ID IS NULL
			AND DEL_YN = 'N'
			AND USE_YN = 'Y'
			AND CUSTCO_ID = #{CUSTCO_ID}::INTEGER
		UNION ALL
		SELECT B.CUSTCO_ID, B.CUTT_TYPE_ID, B.UP_CUTT_TYPE_ID, B.CUTT_TYPE_SE_CD, B.CUTT_TYPE_NM, B.CUTT_TYPE_EXPLN, B.CUTT_TYPE_LVL, B.USE_YN, B.SORT_ORD, C.LVL + 1 AS LVL, C.SORT || ' > ' || LPAD(CAST(B.SORT_ORD AS VARCHAR),5,'0') AS SORT, CAST(C.FULL_PATH || ' > ' || B.CUTT_TYPE_NM AS VARCHAR(300)) AS FULL_PATH
		FROM PLT_CUTT_TYPE B
		INNER JOIN CUTT_TREE C ON C.CUTT_TYPE_ID = B.UP_CUTT_TYPE_ID
		WHERE B.DEL_YN = 'N'
			AND B.USE_YN = 'Y'
			AND B.CUTT_TYPE_SE_CD = CASE WHEN (SELECT ITGRT_USE_YN FROM PLT_CUTT_TYPE_STNG WHERE CUSTCO_ID = B.CUSTCO_ID) = 'Y' THEN 'ITGRT' ELSE 'IN' END
			AND B.CUSTCO_ID = #{CUSTCO_ID}::INTEGER
	),
	QSTN_TREE AS (
		SELECT CUSTCO_ID, QSTN_TYPE_ID, UP_QSTN_TYPE_ID, QSTN_TYPE_SE_CD, QSTN_TYPE_NM, QSTN_TYPE_EXPLN, USE_YN, SORT_ORD, 1 AS LVL, LPAD(CAST(SORT_ORD AS VARCHAR),5,'0') AS SORT, CAST(QSTN_TYPE_NM AS VARCHAR(300)) AS FULL_PATH
		FROM PLT_CHT_QSTN_TYPE
		WHERE UP_QSTN_TYPE_ID IS NULL
			AND DEL_YN = 'N'
			AND CUSTCO_ID = #{CUSTCO_ID}::INTEGER
		UNION ALL
		SELECT B.CUSTCO_ID, B.QSTN_TYPE_ID, B.UP_QSTN_TYPE_ID, B.QSTN_TYPE_SE_CD, B.QSTN_TYPE_NM, B.QSTN_TYPE_EXPLN, B.USE_YN, B.SORT_ORD, C.LVL + 1 AS LVL, C.SORT || ' > ' || LPAD(CAST(B.SORT_ORD AS VARCHAR),5,'0') AS SORT, CAST(C.FULL_PATH || ' > ' || B.QSTN_TYPE_NM AS VARCHAR(300)) AS FULL_PATH
		FROM PLT_CHT_QSTN_TYPE B
		INNER JOIN QSTN_TREE C ON C.QSTN_TYPE_ID = B.UP_QSTN_TYPE_ID
		WHERE B.DEL_YN = 'N'
			AND B.CUSTCO_ID = #{CUSTCO_ID}::INTEGER
	)
	]]>  
	SELECT 
	  PCC.CHT_CUTT_ID,
	  PCR.CHT_RDY_ID,
	  PCC.CUST_ID,
	  PCCU.CHT_USER_KEY,
	  PLT_CUST.CUST_NM,
	  PCC.SNDR_KEY,
	  PCN.DSPTCH_PRF_NM,
	  PCC.CUTT_BGNG_DT,
	  PCC.CUTT_END_DT,
	  PCC.CHN_CLSF_CD,
	  CD_CHNL.CD_NM AS CHN_CLSF_CD_NM,
	  PCC.CUTT_TYPE_ID,
	  CUTT.FULL_PATH AS CUTT_TYPE,
	  PCC.QSTN_TYPE_ID,
	  QSTN.FULL_PATH AS QSTN_TYPE,
	  PCC.CUTT_TTL,
	  PCC.CUTT_CN,
	  PCC.CUTT_STTS_CD,
	  CD_STAT.CD_NM AS CUTT_STTS_CD_NM,
	  PCC.SYS_MSG_SKIP_YN,
	  PCC.CLBK_YN,
	  PCC.CLBK_YMD,
	  PCC.CLBK_BGNG_DT,
	  PCC.BMK_YN,
	  PCCD.RCPTN_DSPTCH_MSG,
	  PCCD.CHG_RCPTN_DSPTCH_MSG,
	  PCCD.REG_DT
	FROM PLT_CHT_CUTT PCC
	LEFT JOIN PLT_CHT_CUST PCCU ON PCC.CUST_ID = PCCU.CUST_ID AND PCC.SNDR_KEY = PCCU.SNDR_KEY
	LEFT JOIN PLT_CUST ON PCC.CUST_ID = PLT_CUST.CUST_ID
	LEFT JOIN PLT_CUSTCO_CHN PCN ON PCC.SNDR_KEY = PCN.SNDR_KEY
	LEFT JOIN PLT_COMM_CD CD_CHNL ON PCC.CUSTCO_ID = CD_CHNL.CUSTCO_ID AND PCC.CHN_CLSF_CD = CD_CHNL.CD_ID AND CD_CHNL.GROUP_CD_ID = 'CHNL_CL'
	LEFT JOIN PLT_COMM_CD CD_STAT ON PCC.CUSTCO_ID = CD_STAT.CUSTCO_ID AND PCC.CUTT_STTS_CD = CD_STAT.CD_ID AND CD_STAT.GROUP_CD_ID = 'CUSL_STAT'
	LEFT JOIN PLT_CHT_RDY PCR ON PCC.SNDR_KEY = PCR.SNDR_KEY
								AND PCC.CUST_ID = PCR.CUST_ID
		                        AND PCC.CUSL_ID = PCR.CUSL_ID
		                        AND PCC.CUTT_STTS_CD = PCR.ALTMNT_STTS_CD
	LEFT JOIN (SELECT DTL2.CHT_CUTT_DTL_ID, DTL2.CHT_CUTT_ID, DTL2.RCPTN_DSPTCH_MSG, DTL2.CHG_RCPTN_DSPTCH_MSG, DTL2.REG_DT
	            FROM (SELECT CHT_CUTT_ID, MAX(REG_DT) AS RECENT_DT,  MAX(CHT_CUTT_DTL_ID) AS RECENT_DTL_ID
	            FROM PLT_CHT_CUTT_DTL
	            GROUP BY CHT_CUTT_ID) DTL1
	            LEFT JOIN PLT_CHT_CUTT_DTL DTL2
	            ON DTL1.RECENT_DT = DTL2.REG_DT
	            AND DTL1.RECENT_DTL_ID = DTL2.CHT_CUTT_DTL_ID
	            AND DTL1.CHT_CUTT_ID = DTL2.CHT_CUTT_ID
	            WHERE DTL2.MSG_TYPE_CD != 'QSTN') PCCD ON PCC.CHT_CUTT_ID = PCCD.CHT_CUTT_ID
    LEFT JOIN (SELECT PCCD.CHT_CUTT_ID
                FROM PLT_CHT_CUTT_DTL PCCD
                LEFT JOIN PLT_CHT_CUTT PCC
                ON PCC.CHT_CUTT_ID = PCCD.CHT_CUTT_ID
                WHERE PCC.CUSL_ID = #{USER_ID}::INTEGER
					AND PCCD.CUSTCO_ID = #{CUSTCO_ID}::INTEGER
					<choose>
						<when test="ST_DATE != '' and ST_DATE != null and ST_DATE != undefined">
							<![CDATA[
							AND PCCD.REG_DT >= #{ST_DATE}
							]]>
						</when>
						<otherwise>
							<![CDATA[
							AND PCCD.REG_DT >= TO_CHAR(NOW()-INTERVAL'7 DAYS','YYYYMMDDHH24MISS')
							]]>
						</otherwise>
					</choose>
					<if test="END_DATE != '' and END_DATE != null and END_DATE != undefined">
						<![CDATA[
						AND PCCD.REG_DT <= #{END_DATE}
						]]>
					</if>
					AND PCCD.RCPTN_DSPTCH_MSG LIKE ('%' || REPLACE(#{WORD}, ' ', '') ||'%')
                GROUP BY PCCD.CHT_CUTT_ID) KEYWORD ON PCC.CHT_CUTT_ID = KEYWORD.CHT_CUTT_ID
	LEFT JOIN CUTT_TREE CUTT ON CUTT.CUTT_TYPE_ID = PCC.CUTT_TYPE_ID
	LEFT JOIN QSTN_TREE QSTN ON QSTN.QSTN_TYPE_ID = PCC.QSTN_TYPE_ID
	WHERE PCC.CUSL_ID = #{USER_ID}::INTEGER
	AND PCC.CUSTCO_ID = #{CUSTCO_ID}::INTEGER
	AND PCC.CUTT_STTS_CD NOT LIKE '%GIVEUP%'
	AND KEYWORD.CHT_CUTT_ID IS NOT NULL
	<choose>
			<when test="ST_DATE != '' and ST_DATE != null and ST_DATE != undefined">
				<![CDATA[
				AND PCC.CUTT_BGNG_DT >= #{ST_DATE}
				]]>
			</when>
			<otherwise>
				<![CDATA[
				AND (
				PCC.BMK_YN = 'Y' OR
				PCC.CUTT_STTS_CD IN ('AFTPRCS','AFTPRCS_NORSPNS','ING','TEMP_SAVE') OR
				((PCC.BMK_YN != 'N' OR PCC.BMK_YN IS NULL) AND PCC.CUTT_STTS_CD != 'AFTPRCS' AND PCC.CUTT_BGNG_DT >= TO_CHAR(NOW()-INTERVAL'7 DAYS','YYYYMMDDHH24MISS'))
				)
				]]>
			</otherwise>
		</choose>
		<if test="END_DATE != '' and END_DATE != null and END_DATE != undefined">
			<![CDATA[
			AND PCC.CUTT_BGNG_DT <= #{END_DATE}
			]]>
		</if>
		<if test="CHN_CLSF_CD != '' and CHN_CLSF_CD != null and CHN_CLSF_CD != undefined">
			AND PCC.CHN_CLSF_CD = #{CHN_CLSF_CD}
		</if>
	ORDER BY
	  CASE WHEN CUTT_STTS_CD = 'ING' OR CUTT_STTS_CD LIKE '%WAIT%' THEN 0
	       WHEN CUTT_STTS_CD LIKE '%AFTPRCS%' THEN 1
	       WHEN CUTT_STTS_CD LIKE '%CMPL%' THEN 2
	  END,
	  REG_DT DESC	
</select>

<!-- 게시판 문의 채널정보 가져오기  -->
<select id="selectPstQstn" resultType="java.util.HashMap">
	SELECT 		/* selectPstQstn - 게시판 문의 채널정보 가져오기 */
		PST_QSTN_CHN_ID
		, CUSTCO_ID
		, SNDR_KEY
		, API_URI
		, PST_USER_KEY
		, PST_TTL_KEY
		, PST_CN_KEY
		, PST_DT_KEY
		, SELECT_API
		, DATA_PATH
		, DATA_TYPE
		, PR_KEY
		, SELECT_API_KEY
		, SELECT_API_VALUE
		, API_TY
		, INSERT_API
		, SCS_CD
		, INSERT_API_KEY
		, INSERT_API_VALUE
		, RGTR_ID
		, REG_DT
		, MDFR_ID
		, MDFCN_DT
	FROM PLT_CHT_PST_QSTN_CHN
	WHERE SNDR_KEY = #{SNDR_KEY}::INTEGER
</select>

<!-- 게시판 문의 중복 체크  -->
<select id="selectPstQstnCount" resultType="java.util.HashMap">
	SELECT 		/* selectPstQstnCount - 게시판 문의 중복 체크 */
		COUNT(PST_QSTN_CUTT_ID) AS CNT
	FROM PLT_CHT_PST_QSTN_CUTT
	WHERE SNDR_KEY = #{SNDR_KEY}::INTEGER
		AND PST_ID = #{PST_ID}
</select>

<!-- 게시판 문의 문의 테이블에 넣기 -->
<insert id="insertPstQstn"  parameterType= "java.util.HashMap">
	INSERT INTO			/* insertPstQstn - 게시판 문의 문의 테이블에 넣기 */
		PLT_CHT_PST_QSTN_CUTT(
			PST_QSTN_CUTT_ID
			, SNDR_KEY
			, CHT_CUTT_ID
			, PST_ID
			, PST_USER
			, PST_TTL
			, PST_CN
			, PST_DT
			, RGTR_ID
			, REG_DT
			, MDFR_ID
			, MDFCN_DT
		) VALUES(
			#{PST_QSTN_CUTT_ID}::INTEGER
			, #{SNDR_KEY}::INTEGER
			, #{CHT_CUTT_ID}::INTEGER
			, #{PST_ID}
			, #{PST_USER}
			, #{PST_TTL}
			, #{PST_CN}
			, #{PST_DT}
			<choose>
				<when test="USER_ID != '' and USER_ID != null and USER_ID != undefined">
					, #{USER_ID}::INTEGER
				</when>
				<otherwise>
					, '2'::INTEGER
				</otherwise>
			</choose>
			, TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
			<choose>
				<when test="USER_ID != '' and USER_ID != null and USER_ID != undefined">
					, #{USER_ID}::INTEGER
				</when>
				<otherwise>
					, '2'::INTEGER
				</otherwise>
			</choose>
			, TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
		)
</insert>

<!-- 게시판 문의 업데이트 -->
<update id="updatePstQstn" parameterType="java.util.HashMap">
	UPDATE 			/* updatePstQstn - 게시판 문의 업데이트 */
		PLT_CHT_PST_QSTN_CUTT
	SET PST_USER = #{PST_USER}
		, PST_TTL = #{PST_TTL}
		, PST_CN = #{PST_CN}
		, PST_DT = #{PST_DT}
		<choose>
			<when test="USER_ID != '' and USER_ID != null and USER_ID != undefined">
				, MDFR_ID =  #{USER_ID}::INTEGER
			</when>
			<otherwise>
				, MDFR_ID = '2'::INTEGER
			</otherwise>
		</choose>
		, MDFCN_DT = TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
	WHERE SNDR_KEY = #{SNDR_KEY}::INTEGER
		AND PST_ID = #{PST_ID}
		AND CUSTCO_ID = #{CUSTCO_ID}::INTEGER
</update>

<!-- 게시판 문의 채팅상담 대기 테이블에 넣기 -->
<insert id="insertPstQstnToChtCuttRdy"  parameterType= "java.util.HashMap">
	INSERT INTO			/* insertPstQstnToChtCuttRdy - 게시판 문의 채팅상담 대기 테이블에 넣기 */
		PLT_CHT_RDY(
			CHT_RDY_ID
			, CUST_ID
			, CUSTCO_ID
			, SNDR_KEY
			, ALTMNT_STTS_CD
			, ALTMNT_RDY_REG_DT
			, MSG_HR
			, CUST_MSG_HR
			, CHN_TYPE_CD
			, RGTR_ID
			, REG_DT
			, MDFR_ID
			, MDFCN_DT
		) VALUES(
			#{CHT_RDY_ID}::INTEGER
			, (SELECT CUST_ID
				FROM PLT_CHT_CUST
				WHERE CHT_USER_KEY = #{PST_USER}
				ORDER BY CUST_ID
				LIMIT 1)::INTEGER
			, #{CUSTCO_ID}::INTEGER
			, #{SNDR_KEY}::INTEGER
			, 'ALTMNT_WAIT'
			, TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
			, '0'::INTEGER
			, '0'::INTEGER
			, 'PST'
			<choose>
				<when test="USER_ID != '' and USER_ID != null and USER_ID != undefined">
					, #{USER_ID}::INTEGER
				</when>
				<otherwise>
					, '2'::INTEGER
				</otherwise>
			</choose>
			, TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
			<choose>
				<when test="USER_ID != '' and USER_ID != null and USER_ID != undefined">
					, #{USER_ID}::INTEGER
				</when>
				<otherwise>
					, '2'::INTEGER
				</otherwise>
			</choose>
			, TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
		)
</insert>

<!-- 게시판 문의 채팅상담 테이블에 넣기 -->
<insert id="insertPstQstnToChtCutt"  parameterType= "java.util.HashMap">
	INSERT INTO			/* insertPstQstnToChtCutt - 게시판 문의 채팅상담 테이블에 넣기 */
		PLT_CHT_CUTT(
			CHT_CUTT_ID
			, CUSTCO_ID
			, CUST_ID
			, SNDR_KEY
			, CUTT_BGNG_DT
			, CHN_CLSF_CD
			, CUTT_STTS_CD
			, ALTMNT_RDY_REG_DT
			, RGTR_ID
			, REG_DT
			, MDFR_ID
			, MDFCN_DT
		) VALUES(
			#{CHT_CUTT_ID}::INTEGER
			, #{CUSTCO_ID}::INTEGER
			, (SELECT CUST_ID
				FROM PLT_CHT_CUST
				WHERE CHT_USER_KEY = #{PST_USER}
				ORDER BY CUST_ID
				LIMIT 1)::INTEGER
			, #{SNDR_KEY}::INTEGER
			, TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
			,'PST'
			, 'ALTMNT_WAIT'
			, TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
			<choose>
				<when test="USER_ID != '' and USER_ID != null and USER_ID != undefined">
					, #{USER_ID}::INTEGER
				</when>
				<otherwise>
					, '2'::INTEGER
				</otherwise>
			</choose>
			, TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
			<choose>
				<when test="USER_ID != '' and USER_ID != null and USER_ID != undefined">
					, #{USER_ID}::INTEGER
				</when>
				<otherwise>
					, '2'::INTEGER
				</otherwise>
			</choose>
			, TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
		)
</insert>

<!-- 채팅 설정값 조회 -->
<select id="getChtStng"   parameterType= "java.util.HashMap" resultType="java.util.HashMap">
	SELECT 		/* getChtStng - 채팅 설정값 조회 */
		STNG_VL
	FROM PLT_CHT_STNG
	WHERE STNG_CD = #{STNG_CD}
		AND CUSTCO_ID = #{CUSTCO_ID}::INTEGER
</select>


<!-- 3자채팅을 위한 특정 채팅 조회 -->
<select id="getTripleCutt"  parameterType= "java.util.HashMap"  resultType="java.util.HashMap">
	SELECT 		/* getTripleCutt - 3자채팅을 위한 특정 채팅 조회 */
		PCC.CHT_CUTT_ID			/* 채팅ID */
		, PCR.CHT_RDY_ID		/* 채팅대기ID */
		, PCC.CUST_ID				/* 고객ID */
		, (SELECT CHT_USER_KEY
			FROM PLT_CHT_CUST
			WHERE CUST_ID = PCC.CUST_ID
				AND SNDR_KEY = PCC.SNDR_KEY) AS CHT_USER_KEY		/* 채팅고객키 */
		, (SELECT CUST_NM
			FROM PLT_CUST
			WHERE CUST_ID = PCC.CUST_ID)	AS CUST_NM			/* 고객명 */
		, PCC.SNDR_KEY				/* 발송자 키 */
		, (SELECT DSPTCH_PRF_NM
			FROM PLT_CUSTCO_CHN
			WHERE SNDR_KEY = PCC.SNDR_KEY) AS DSPTCH_PRF_NM		/* 채널명 */
		, PCC.CUTT_BGNG_DT			/* 상담 시작 일시 */
		, PCC.CUTT_END_DT			/* 상담 종료 일시 */
		, PCC.CHN_CLSF_CD			/* 채널 분류 코드 */
		, (SELECT CD_NM
			FROM PLT_COMM_CD
			WHERE CUSTCO_ID = PCC.CUSTCO_ID AND GROUP_CD_ID = 'CHNL_CL'
				AND CD_ID = PCC.CHN_CLSF_CD)	AS CHN_CLSF_CD_NM		/* 채널분류명 */
		, PCC.CUTT_TYPE_ID				/* 상담유형 ID */
		, CUTT.FULL_PATH AS CUTT_TYPE
		, PCC.QSTN_TYPE_ID				/* 문의유형 ID */
		, QSTN.FULL_PATH AS QSTN_TYPE
		, PCC.CUTT_TTL				/* 상담제목 */
		, PCC.CUTT_CN				/* 상담내용 */
		, PCC.CUTT_STTS_CD			/* 상담상태코드 */
		, (SELECT CD_NM
			FROM PLT_COMM_CD
			WHERE CUSTCO_ID = PCC.CUSTCO_ID AND GROUP_CD_ID = 'CUSL_STAT'
				AND CD_ID = PCC.CUTT_STTS_CD)	AS CUTT_STTS_CD_NM		/* 상담상태명 */
		, PCC.SYS_MSG_SKIP_YN				/* 시스템메시지여부 */
		, PCC.CLBK_YN				/* 콜백여부 */
		, PCC.CLBK_YMD				/* 콜백일자 */
		, PCC.CLBK_BGNG_DT			/* 콜백시작일자 */
		, PCC.BMK_YN				/* 책갈피여부 */
		, PCCD.RCPTN_DSPTCH_MSG		/* 최근채팅내용 */
		, PCCD.CHG_RCPTN_DSPTCH_MSG		/* 최근채팅내용 금칙어 변환 */
		, PCCD.REG_DT				/* 최근채팅일시 */
	FROM PLT_CHT_CUTT PCC
	LEFT JOIN (SELECT DTL2.CHT_CUTT_DTL_ID, DTL2.CHT_CUTT_ID, DTL2.RCPTN_DSPTCH_MSG, DTL2.CHG_RCPTN_DSPTCH_MSG, DTL2.REG_DT
				FROM (SELECT CHT_CUTT_ID, MAX(REG_DT) AS RECENT_DT,  MAX(CHT_CUTT_DTL_ID) AS RECENT_DTL_ID
					FROM PLT_CHT_CUTT_DTL
					GROUP BY CHT_CUTT_ID) DTL1
				LEFT JOIN PLT_CHT_CUTT_DTL DTL2
				ON DTL1.RECENT_DT = DTL2.REG_DT
					AND DTL1.RECENT_DTL_ID = DTL2.CHT_CUTT_DTL_ID
					AND DTL1.CHT_CUTT_ID = DTL2.CHT_CUTT_ID
				WHERE DTL2.MSG_TYPE_CD != 'QSTN') PCCD
		ON PCC.CHT_CUTT_ID = PCCD.CHT_CUTT_ID 
	LEFT JOIN PLT_CHT_RDY PCR
		ON PCC.SNDR_KEY = PCR.SNDR_KEY
		AND PCC.CUST_ID = PCR.CUST_ID
		AND PCC.CUSL_ID = PCR.CUSL_ID
		AND PCC.CUTT_STTS_CD = PCR.ALTMNT_STTS_CD
 	<![CDATA[
	LEFT OUTER JOIN (
		WITH RECURSIVE CUTT_TREE AS (
			SELECT CUSTCO_ID, CUTT_TYPE_ID, UP_CUTT_TYPE_ID,  CASE WHEN (SELECT ITGRT_USE_YN FROM PLT_CUTT_TYPE_STNG WHERE CUSTCO_ID = PLT_CUTT_TYPE.CUSTCO_ID) = 'Y' THEN 'ITGRT' ELSE 'IN' END  AS CUTT_TYPE_SE_CD, CUTT_TYPE_NM, CUTT_TYPE_EXPLN, CUTT_TYPE_LVL, USE_YN, SORT_ORD, 1 AS LVL, LPAD(CAST(SORT_ORD AS VARCHAR),5,'0') AS SORT, CAST(CUTT_TYPE_NM AS VARCHAR(300)) AS FULL_PATH
			FROM PLT_CUTT_TYPE
			WHERE UP_CUTT_TYPE_ID IS NULL
			AND DEL_YN = 'N'
			AND USE_YN = 'Y'
			AND CUSTCO_ID = #{CUSTCO_ID}::INTEGER
			UNION ALL
			SELECT B.CUSTCO_ID, B.CUTT_TYPE_ID, B.UP_CUTT_TYPE_ID, B.CUTT_TYPE_SE_CD, B.CUTT_TYPE_NM, B.CUTT_TYPE_EXPLN, B.CUTT_TYPE_LVL, B.USE_YN, B.SORT_ORD, C.LVL + 1 AS LVL, C.SORT || ' > ' || LPAD(CAST(B.SORT_ORD AS VARCHAR),5,'0') AS SORT, CAST(C.FULL_PATH || ' > ' || B.CUTT_TYPE_NM AS VARCHAR(300)) AS FULL_PATH
			FROM PLT_CUTT_TYPE B
			INNER JOIN CUTT_TREE C ON C.CUTT_TYPE_ID = B.UP_CUTT_TYPE_ID
			WHERE B.DEL_YN = 'N'
			AND B.USE_YN = 'Y'
			AND B.CUTT_TYPE_SE_CD = CASE WHEN (SELECT ITGRT_USE_YN FROM PLT_CUTT_TYPE_STNG WHERE CUSTCO_ID = B.CUSTCO_ID) = 'Y' THEN 'ITGRT' ELSE 'IN' END
			AND B.CUSTCO_ID = #{CUSTCO_ID}::INTEGER
		)
		SELECT
			CT.CUSTCO_ID
			, CT.CUTT_TYPE_ID
			, CT.UP_CUTT_TYPE_ID
			, (SELECT CUTT_TYPE_NM FROM PLT_CUTT_TYPE WHERE CUTT_TYPE_ID = CT.UP_CUTT_TYPE_ID) AS UP_CUTT_TYPE_NM
			, ROW_NUMBER() OVER(PARTITION BY CT.UP_CUTT_TYPE_ID ORDER BY CT.SORT_ORD) AS RE_SORT_ORD
			, CT.FULL_PATH
		FROM CUTT_TREE CT
		LEFT OUTER JOIN PLT_COMM_CD PCC ON PCC.CUSTCO_ID = CT.CUSTCO_ID AND PCC.CD_ID = CT.CUTT_TYPE_SE_CD AND PCC.GROUP_CD_ID = 'CUSL_TP_CL'

		WHERE CT.CUTT_TYPE_LVL <= (SELECT CUTT_TYPE_LMT_LVL_CD::INTEGER + 1 FROM PLT_CUTT_TYPE_STNG WHERE CUSTCO_ID = CT.CUSTCO_ID)

		ORDER BY CT.SORT
	) CUTT ON CUTT.CUTT_TYPE_ID = PCC.CUTT_TYPE_ID
	LEFT OUTER JOIN (
		WITH RECURSIVE QSTN_TREE AS (
			SELECT CUSTCO_ID, QSTN_TYPE_ID, UP_QSTN_TYPE_ID, QSTN_TYPE_SE_CD, QSTN_TYPE_NM, QSTN_TYPE_EXPLN, USE_YN, SORT_ORD, 1 AS LVL, LPAD(CAST(SORT_ORD AS VARCHAR),5,'0') AS SORT, CAST(QSTN_TYPE_NM AS VARCHAR(300)) AS FULL_PATH
			FROM PLT_CHT_QSTN_TYPE
			WHERE UP_QSTN_TYPE_ID IS NULL
			AND DEL_YN = 'N'
			AND CUSTCO_ID = #{CUSTCO_ID}::INTEGER
			UNION ALL
			SELECT B.CUSTCO_ID, B.QSTN_TYPE_ID, B.UP_QSTN_TYPE_ID, B.QSTN_TYPE_SE_CD, B.QSTN_TYPE_NM, B.QSTN_TYPE_EXPLN, B.USE_YN, B.SORT_ORD, C.LVL + 1 AS LVL, C.SORT || ' > ' || LPAD(CAST(B.SORT_ORD AS VARCHAR),5,'0') AS SORT, CAST(C.FULL_PATH || ' > ' || B.QSTN_TYPE_NM AS VARCHAR(300)) AS FULL_PATH
			FROM PLT_CHT_QSTN_TYPE B
			INNER JOIN QSTN_TREE C ON C.QSTN_TYPE_ID = B.UP_QSTN_TYPE_ID
			WHERE B.DEL_YN = 'N'
			AND B.CUSTCO_ID = #{CUSTCO_ID}::INTEGER
		)
		SELECT
			QT.CUSTCO_ID
			, QT.QSTN_TYPE_ID
			, QT.UP_QSTN_TYPE_ID
			, (SELECT QSTN_TYPE_NM FROM PLT_CHT_QSTN_TYPE WHERE QSTN_TYPE_ID = QT.UP_QSTN_TYPE_ID) AS UP_CUTT_TYPE_NM
			, ROW_NUMBER() OVER(PARTITION BY QT.UP_QSTN_TYPE_ID ORDER BY QT.SORT_ORD) AS RE_SORT_ORD
			, QT.FULL_PATH
		FROM QSTN_TREE QT

		ORDER BY QT.SORT
	) QSTN ON QSTN.QSTN_TYPE_ID = PCC.QSTN_TYPE_ID
	]]>  
	WHERE PCC.CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
	ORDER BY 
		CASE WHEN CUTT_STTS_CD = 'ING' OR CUTT_STTS_CD LIKE ('%' || 'WAIT' || '%') THEN 0
			WHEN CUTT_STTS_CD LIKE ('%' || 'AFTPRCS' || '%') THEN 1
			WHEN CUTT_STTS_CD LIKE ('%' || 'CMPL' || '%') THEN 2
		END
		, REG_DT DESC
</select>

<!-- 이전채팅 조회 -->
<select id="selectBfrChat"   parameterType= "java.util.HashMap" resultType="java.util.HashMap">
	SELECT 		/* selectBfrChat - 이전채팅 조회 */
		COUNT(*) AS CNT, PCC.CHT_CUTT_ID
	FROM PLT_CHT_CUTT PCC
	WHERE PCC.CUST_ID = (SELECT CUST_ID
						FROM PLT_CHT_CUTT
						WHERE CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER)
	AND PCC.REG_DT = (SELECT MAX(REG_DT)
						FROM PLT_CHT_CUTT
						WHERE REG_DT <![CDATA[<]]> (SELECT REG_DT
										FROM PLT_CHT_CUTT
										WHERE CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER)
						AND CUST_ID = (SELECT CUST_ID
										FROM PLT_CHT_CUTT
										WHERE CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER)
						AND CUTT_STTS_CD NOT LIKE ('%' || 'GIVEUP' || '%'))
	GROUP BY PCC.CHT_CUTT_ID
</select>

<!-- 이후채팅 조회 -->
<select id="selectAftrChat"   parameterType= "java.util.HashMap" resultType="java.util.HashMap">
	SELECT 		/* selectAftrChat - 이후채팅 조회 */
		COUNT(*) AS CNT, PCC.CHT_CUTT_ID
	FROM PLT_CHT_CUTT PCC
	WHERE PCC.CUST_ID = (SELECT CUST_ID
						FROM PLT_CHT_CUTT
						WHERE CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER)
	AND PCC.REG_DT = (SELECT MIN(REG_DT)
						FROM PLT_CHT_CUTT
						WHERE REG_DT > (SELECT REG_DT
										FROM PLT_CHT_CUTT
										WHERE CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER)
						AND CUST_ID = (SELECT CUST_ID
										FROM PLT_CHT_CUTT
										WHERE CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER)
						AND CUTT_STTS_CD NOT LIKE ('%' || 'GIVEUP' || '%'))
	GROUP BY PCC.CHT_CUTT_ID
</select>


	<!-- 채팅 대기건이 정상적으로 들어있는지 확인 -->
	<select id="rdyDelCnt"   parameterType= "java.util.HashMap" resultType="java.util.HashMap">
		SELECT 		/* rdyDelCnt - 채팅 대기건이 정상적으로 들어있는지 확인 */
			COUNT(CHT_RDY_ID) AS CNT
		FROM PLT_CHT_RDY
		WHERE CHT_RDY_ID = #{CHT_RDY_ID}::INTEGER
	</select>


	<!-- 챗봇채널에대한 데이터 가져오기 -->
	<select id="getChbtUserData"   parameterType= "java.util.HashMap" resultType="java.util.HashMap">
		SELECT 		/* getChbtUserData - 챗봇고객에대한 데이터 가져오기 */
			AUTH_YN
			, AUTH_DTTM
			, MEMBER_NO
			, USER_NAME
			, USER_EMAIL
			, MEMBER_ID
		FROM goodwearmall.CHATBOT_USER
		WHERE USER_KEY = #{CHT_USER_KEY}
	</select>


	<!-- 고객 챗봇 내역 가져오기 -->
	<select id="getChbtData"   parameterType= "java.util.HashMap" resultType="java.util.HashMap">
		SELECT 		/* getChbtData - 고객 챗봇 내역 가져오기 */
			MESSAGE_ID
			, SENDER
			, TYPE
			, CONTENT
		FROM goodwearmall.CHATBOT_HISTORY
		WHERE MESSAGE_ID IN (
		    (SELECT MESSAGE_ID
		    FROM goodwearmall.CHATBOT_HISTORY
		    WHERE TYPE = 'composite'
		    	AND USER_KEY = #{CHT_USER_KEY}
		    	AND SUBSTRING(MESSAGE_ID,1,14) <![CDATA[<=]]> (SELECT CUTT_RDY_REG_DT
			    												FROM PLT_CHT_CUTT
			    												WHERE CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER)
		    ORDER BY MESSAGE_ID DESC
		    LIMIT 1)
		    <if test="CHN_CLSF_CD == 'NTT'">
			    , (SELECT MESSAGE_ID
			    FROM goodwearmall.CHATBOT_HISTORY
			    WHERE TYPE = 'text'
			    	AND USER_KEY = #{CHT_USER_KEY}
			    	AND SUBSTRING(MESSAGE_ID,1,14) <![CDATA[<=]]> (SELECT CUTT_RDY_REG_DT
				    												FROM PLT_CHT_CUTT
				    												WHERE CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER)
			    ORDER BY MESSAGE_ID DESC
			    LIMIT 1)
		    </if>
		)
		ORDER BY MESSAGE_ID
	</select>
	


	<!-- 고객 챗봇 고객 리스트 가져오기 - 확인용 -->
	<select id="getChbtUser"   parameterType= "java.util.HashMap" resultType="java.util.HashMap">
		SELECT 		/* getChbtUser - 고객 챗봇 고객 리스트 가져오기 - 확인용 */
			CH.BOT_ID
			, CH.MSG_CD AS CHN_CLSF_CD
			, PCCCC.CD_NM AS CHN_CLSF_NM
			, PCCC.DSPTCH_PRF_NM AS SNDR_NM
			, CH.USER_KEY AS CHT_USER_KEY
			, PC.CUST_NM
		FROM (SELECT
				CH.BOT_ID
				, CH.MSG_CD
				, CH.USER_KEY
			FROM goodwearmall.CHATBOT_HISTORY CH
			group by CH.USER_KEY, CH.BOT_ID, CH.MSG_CD)CH
		LEFT JOIN PLT_CHT_CUST PCC ON CH.USER_KEY = PCC.CHT_USER_KEY
		LEFT JOIN PLT_CUST PC ON PC.CUST_ID = PCC.CUST_ID
		LEFT JOIN PLT_CUSTCO_CHN PCCC ON PCCC.DSPTCH_PRF_KEY = CH.BOT_ID
		LEFT JOIN PLT_COMM_CD PCCCC ON CH.MSG_CD = PCCCC.CD_ID AND PCCCC.GROUP_CD_ID = 'CHNL_CL' AND PCCCC.CUSTCO_ID = #{CUSTCO_ID}::INTEGER
		WHERE 1 = 1
			<if test="CHT_USER_KEY != '' and CHT_USER_KEY != null and CHT_USER_KEY != undefined">
				AND CH.USER_KEY = #{CHT_USER_KEY}
			</if>
			<if test="CHN_CLSF_CD != '' and CHN_CLSF_CD != null and CHN_CLSF_CD != undefined">
				AND CH.MSG_CD = #{CHN_CLSF_CD}
			</if>
	</select>
	


	<!-- 고객 챗봇 전체 내역 가져오기 - 확인용 -->
	<select id="getChbtUserHsty"   parameterType= "java.util.HashMap" resultType="java.util.HashMap">
		SELECT 		/* getChbtUserHsty - 고객 챗봇 전체 내역 가져오기 - 확인용 */
			MESSAGE_ID
			, SENDER
			, TYPE
			, CONTENT
		FROM goodwearmall.CHATBOT_HISTORY
		WHERE USER_KEY = #{CHT_USER_KEY}
		ORDER BY MESSAGE_ID
	</select>
	

	<!-- 통계테이블 상담 상태 업데이트 -->
	<update id="updateChtStat" parameterType="java.util.HashMap">
		UPDATE 		/* updateChtStat - 통계테이블 상담 상태 업데이트 */
			PLT_STATS_CHT_CUTT_DTL
		SET CUTT_RSLT_CD = #{CUTT_STTS_CD}
			<if test="CUTT_TYPE_ID != '' and CUTT_TYPE_ID != null and CUTT_TYPE_ID != undefined">
				, CUTT_TYPE_ID = #{CUTT_TYPE_ID}::INTEGER
			</if>
		WHERE CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
	</update>
	


	<!-- 인증받은 챗봇 회원이 있는지 확인 -->
	<select id="selectChbtUser"   parameterType= "java.util.HashMap" resultType="java.util.HashMap">
		SELECT 		/* selectChbtUser - 인증받은 챗봇 회원이 있는지 확인 */
			COUNT(USER_KEY) AS CNT
		FROM goodwearmall.CHATBOT_USER
		WHERE USER_KEY = #{CHT_USER_KEY}
			AND AUTH_DTTM > NOW() - '1 day'::INTERVAL
	</select>
	

	<!-- 채팅내역 챗봇상담/일반상담 구분값 UPDATE -->
	<update id="updateChbtCutt" parameterType="java.util.HashMap">
		UPDATE PLT_CHT_CUTT			/* updateChbtCutt - 채팅내역 챗봇상담/일반상담 구분값 UPDATE */
		SET CHBT_STTS_CD = #{CHBT_STTS_CD}
		WHERE CHT_CUTT_ID = #{CHT_CUTT_ID}::INTEGER
	</update>
	

	<!-- 고객 안내메시지 입력 업데이트 -->
	<update id="updateInputInfoMsg" parameterType="java.util.HashMap">
		UPDATE PLT_CHT_CUTT_DTL			/* updateInputInfoMsg - 고객 안내메시지 입력 업데이트 */
		SET RCPTN_DSPTCH_MSG = #{MSG}
			, CHG_RCPTN_DSPTCH_MSG = #{MSG}
		WHERE CHT_CUTT_DTL_ID = #{CHT_CUTT_DTL_ID}::INTEGER
	</update>
	

	<!-- 예약시간 버튼 조회 -->
	<select id="getRsvtBtn"   parameterType= "java.util.HashMap" resultType="java.util.HashMap">
		/* getRsvtBtn - 예약시간 버튼 조회 */
		WITH interval_setting AS (
		    SELECT STNG_VL::INTEGER AS interval_minutes
		    FROM PLT_CHT_STNG
		    WHERE STNG_CD = 'RSVT_ITV' AND CUSTCO_ID = #{CUSTCO_ID}::INTEGER
		),
		time_settings AS (
		    SELECT
		        TO_TIMESTAMP(TO_CHAR(NOW(), 'YYYYMMDD') || (SELECT STNG_VL FROM PLT_CHT_STNG WHERE STNG_CD = 'RSVT_START_TIME') || '00', 'YYYYMMDDHH24MISS')::TIMESTAMP AS start_time,
		        TO_TIMESTAMP(TO_CHAR(NOW(), 'YYYYMMDD') || (SELECT STNG_VL FROM PLT_CHT_STNG WHERE STNG_CD = 'RSVT_END_TIME') || '00', 'YYYYMMDDHH24MISS')::TIMESTAMP AS end_time
		)
		SELECT
		    TO_CHAR(TIME_INTERVALS, 'HH24:MI') AS HR
		FROM (
		    SELECT
		        generate_series(
		            (SELECT start_time FROM time_settings),
		            (SELECT end_time FROM time_settings),
		            (SELECT interval_minutes FROM interval_setting) * INTERVAL '1 minute'
		        ) AS TIME_INTERVALS
		) A
	</select>
	

	<!-- 상담 예약 insert -->
	<insert id="insertRsvt"  parameterType= "java.util.HashMap">
		/* insertRsvt - 상담 예약 insert */
		INSERT INTO
			PLT_RSVT(
				RSVT_ID
				, CUST_ID
				, CUSTCO_ID
				, RSVT_DT
				, DRWI_SE_NM
				, STLM_YN
				, REG_DT
				, RGTR_ID
			) VALUES(
				#{RSVT_ID}::INTEGER
				, (SELECT CUST_ID
					FROM PLT_CHT_CUST
					WHERE CHT_USER_KEY = #{CHT_USER_KEY}
					AND SNDR_KEY = #{SNDR_KEY}::INTEGER)::INTEGER
				, #{CUSTCO_ID}::INTEGER
				, #{RSVT_DT}||'00'
				, #{DRWI_SE_NM}
				, #{STLM_YN}
				, TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
				, '2'::INTEGER
			)
	</insert>
	

	<!-- 채팅 상담 예약 insert -->
	<insert id="insertChtRsvt"  parameterType= "java.util.HashMap">
		INSERT INTO			/* insertChtRsvt - 채팅 상담 예약 insert */
			PLT_CHT_CUTT_RSVT(
				CHT_CUTT_ID
				, RSVT_ID
			) VALUES(
				(SELECT CHT_CUTT_ID
					FROM PLT_CHT_CUTT_DTL
					WHERE CHT_CUTT_DTL_ID = #{CHT_CUTT_DTL_ID}::INTEGER
					GROUP BY CHT_CUTT_ID
					LIMIT 1)::INTEGER
				, #{RSVT_ID}::INTEGER
			)
	</insert>
	

	<!-- 채팅상담id로 상담예약찾기 -->
	<select id="selectChtRsvt"   parameterType= "java.util.HashMap" resultType="java.util.HashMap">
		SELECT 		/* selectChtRsvt - 채팅상담id로 상담예약찾기 */
			RSVT_ID
		FROM PLT_CHT_CUTT_RSVT
		WHERE CHT_CUTT_ID = (SELECT CHT_CUTT_ID
								FROM PLT_CHT_CUTT_DTL
								WHERE CHT_CUTT_DTL_ID = #{CHT_CUTT_DTL_ID}::INTEGER
								GROUP BY CHT_CUTT_ID
								LIMIT 1)::INTEGER
	</select>
	

	<!-- 상담예약 시간변경 -->
	<update id="updateRsvt" parameterType="java.util.HashMap">
		UPDATE PLT_RSVT			/* updateRsvt - 상담예약 시간변경 */
		SET RSVT_DT = #{RSVT_DT}||'00'
			, ALTMNT_YN = NULL
			, ALTMNT_DT = NULL
		WHERE RSVT_ID = #{RSVT_ID}::INTEGER
	</update>
	

	<!-- UUID로 SNDR_KEY 조회 -->
	<select id="getSndrKey"   parameterType= "java.util.HashMap" resultType="java.util.HashMap">
		SELECT 		/* getSndrKey - UUID로 SNDR_KEY 조회 */
			DSPTCH_PRF_KEY
		FROM PLT_CUSTCO_CHN
		WHERE UUID = #{UUID}
	</select>
	
	<!-- 상담예약배분 삭제 -->
	<delete id="deleteRsvtAltmnt" parameterType="java.util.HashMap">
		/* deleteRsvtAltmnt - 상담예약배분 삭제 */
		DELETE FROM PLT_RSVT_ALTMNT
		WHERE RSVT_ID = #{RSVT_ID}::INTEGER
	</delete>
	
	<!-- 상담배분 가능한 상담원 있는지 체크 -->
	<select id="selectRsvtAltmnt"   parameterType= "java.util.HashMap" resultType="java.util.HashMap">
		/* selectRsvtAltmnt - 상담배분 가능한 상담원 있는지 체크 */
		SELECT PU.USER_ID
		FROM PLT_USER PU
		LEFT JOIN PLT_USER_AUTHRT PUA
			ON PUA.USER_ID = PU.USER_ID
		LEFT JOIN (SELECT COALESCE(COUNT(CUSL_ID),0) AS CNT
						, CUSL_ID 
					FROM PLT_RSVT_ALTMNT PRA
					LEFT JOIN PLT_RSVT PR
						ON PR.RSVT_ID = PRA.RSVT_ID
					WHERE PR.RSVT_DT > TO_CHAR(NOW(), 'YYYYMMDD')||'000000' AND PR.RSVT_DT<![CDATA[ < ]]>TO_CHAR(NOW(), 'YYYYMMDD')||'235959'
					GROUP BY CUSL_ID) PRA
			ON PRA.CUSL_ID = PU.USER_ID
		WHERE PU.USER_ID NOT IN (SELECT CUSL_ID
									FROM PLT_RSVT_ALTMNT PRA
									LEFT JOIN PLT_RSVT PR
										ON PR.RSVT_ID = PRA.RSVT_ID
									WHERE RSVT_DT = #{RSVT_DT}||'00')
			AND PU.RSVT_ALTMNT_USE_YN = 'Y'
	</select>

	<!-- 상담예약 배분 -->
	<update id="insertRsvtAltmnt" parameterType="java.util.HashMap">
		INSERT INTO PLT_RSVT_ALTMNT			/* insertRsvtAltmnt - 상담예약 배분 */
		(
			CUSL_ID
			, RSVT_ID
			, REG_DT
			, RGTR_ID
		) VALUES (
			(SELECT PU.USER_ID
			FROM PLT_USER PU
			LEFT JOIN PLT_USER_AUTHRT PUA
				ON PUA.USER_ID = PU.USER_ID
			LEFT JOIN (SELECT COALESCE(COUNT(CUSL_ID),0) AS CNT
							, CUSL_ID 
						FROM PLT_RSVT_ALTMNT PRA
						LEFT JOIN PLT_RSVT PR
							ON PR.RSVT_ID = PRA.RSVT_ID
						WHERE PR.RSVT_DT > TO_CHAR(NOW(), 'YYYYMMDD')||'000000' AND PR.RSVT_DT<![CDATA[ < ]]>TO_CHAR(NOW(), 'YYYYMMDD')||'235959'
						GROUP BY CUSL_ID) PRA
				ON PRA.CUSL_ID = PU.USER_ID
			WHERE PU.USER_ID NOT IN (SELECT CUSL_ID
										FROM PLT_RSVT_ALTMNT PRA
										LEFT JOIN PLT_RSVT PR
											ON PR.RSVT_ID = PRA.RSVT_ID
										WHERE RSVT_DT = #{RSVT_DT}||'00')
				AND PU.RSVT_ALTMNT_USE_YN = 'Y'
			ORDER BY PRA.CNT NULLS FIRST, RANDOM()
			LIMIT 1)::INTEGER
			, #{RSVT_ID}::INTEGER
			, TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
			, '2'::INTEGER
		)
	</update>
	

	<!-- 상담예약 배분정보 예약테이블에 UPDATE -->
	<update id="updateRsvtAltmntInfo" parameterType="java.util.HashMap">
		UPDATE PLT_RSVT			/* updateRsvtAltmntInfo - 상담예약 배분정보 예약테이블에 UPDATE */
		SET ALTMNT_YN = 'Y'
			, ALTMNT_DT = #{BOOKING_DT}
			, MDFCN_DT = TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
			, MDFR_ID = '2'::INTEGER
		WHERE RSVT_ID = #{RSVT_ID}::INTEGER
	</update>
	

	<!-- 상담예약 가능 상담원 수 -->
	<select id="selectCountCusl"   parameterType= "java.util.HashMap" resultType="java.util.HashMap">
		SELECT 		/* selectCountCusl - 상담예약 가능 상담원 수 */
			COUNT(PU.USER_ID) AS CNT
		FROM PLT_USER PU
		LEFT JOIN PLT_USER_AUTHRT PUA
			ON PUA.USER_ID = PU.USER_ID
		WHERE PU.RSVT_ALTMNT_USE_YN = 'Y'
	</select>
	

	<!-- 현재 상담예약 건수 -->
	<select id="selectCountRsvt"   parameterType= "java.util.HashMap" resultType="java.util.HashMap">
		SELECT 		/* selectCountRsvt - 현재 상담예약 건수 */
			COUNT(RSVT_ID) AS CNT
		FROM PLT_RSVT 
		WHERE RSVT_DT = #{RSVT_DT}||'00'
	</select>
	

	<!-- 조회한 고객정보 update -->
	<update id="updateRsvtCust" parameterType="java.util.HashMap">
		UPDATE PLT_CUST			/* updateRsvtCust - 조회한 고객정보 update */
		SET MDFCN_DT = TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
			, MDFR_ID = '2'::INTEGER
			<if test='CUST_NM != "" and CUST_NM != null and CUST_NM != undefined'>
				, CUST_NM = #{CUST_NM}
			</if> 
			<if test='CUST_TEL_NO != "" and CUST_TEL_NO != null and CUST_TEL_NO != undefined'>
				, CUST_PHN_NO = #{CUST_TEL_NO}
			</if> 
		WHERE CUST_ID = (SELECT CUST_ID
						FROM PLT_CHT_CUST
						WHERE CHT_USER_KEY = #{CHT_USER_KEY})::INTEGER
	</update>
	

	<!-- 예약고객기준 고객명 update -->
	<update id="updateRsvtCustNm" parameterType="java.util.HashMap">
		UPDATE PLT_CUST			/* updateRsvtCustNm - 예약고객기준 고객명 update */
		SET MDFCN_DT = TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
			, MDFR_ID = '2'::INTEGER
			, CUST_NM = #{CUST_NM}
		WHERE CUST_ID = (SELECT CUST_ID
						FROM PLT_CHT_CUST
						WHERE CHT_USER_KEY = #{CHT_USER_KEY})::INTEGER
	</update>
	

	<!-- 상담예약고객 cust_id조회 -->
	<select id="selectRsvtCust"   parameterType= "java.util.HashMap" resultType="java.util.HashMap">
		/* selectRsvtCust - 상담예약고객 cust_id조회 */
		SELECT
			CUST_ID
			, CUST_NM
			, COALESCE(CUST_PHN_NO, '0') AS CUST_PHN_NO
		FROM PLT_CUST
		WHERE CUST_ID = (SELECT CUST_ID
						FROM PLT_CHT_CUST
						WHERE CHT_USER_KEY = #{CHT_USER_KEY}
						AND SNDR_KEY = #{SNDR_KEY}::INTEGER)::INTEGER
	</select>
	

	<!-- 상담 예약 전화번호를 가지고 있는 팔레트 고객 조회 -->
	<select id="selectRsvtPaletteCust"   parameterType= "java.util.HashMap" resultType="java.util.HashMap">
		SELECT 		/* selectRsvtPaletteCust - 상담 예약 전화번호를 가지고 있는 팔레트 고객 조회 */
			CUST_ID
		FROM PLT_CUST
		WHERE CUST_PHN_NO = #{CUST_TEL_NO}
	</select>
	

	<!-- 상담 예약 가능날짜 조회 -->
	<select id="getRsvtDate"   parameterType= "java.util.HashMap" resultType="java.util.HashMap">
		SELECT 		/* getRsvtDate - 상담 예약 가능날짜 조회 */
			TO_CHAR(TO_DATE(HLDY_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS HLDY
		FROM PLT_CHT_HLDY
		WHERE TO_DATE(HLDY_YMD, 'YYYYMMDD') BETWEEN CURRENT_DATE AND CURRENT_DATE + INTERVAL '60 DAY'
	</select>
	

	<!-- SW상담예약고객 존재여부 -->
	<select id="selectSwCustCount"   parameterType= "java.util.HashMap" resultType="java.util.HashMap">
		SELECT 		/* selectSwCust - SW상담예약고객 존재여부 */
			COUNT(CUST_ID) AS CNT
		FROM PLT_CHT_CUST
		WHERE CHT_USER_KEY = #{MEMBER_ID}
	</select>
	

	<!-- SW상담예약고객 존재여부 -->
	<select id="selectSwCust"   parameterType= "java.util.HashMap" resultType="java.util.HashMap">
		SELECT 		/* selectSwCust - SW상담예약고객 존재여부 */
			PCC.CUST_ID
			, COALESCE(PC.CUST_PHN_NO, '') AS CUST_PHN_NO
		FROM PLT_CHT_CUST PCC
		LEFT JOIN PLT_CUST PC
			ON PC.CUST_ID = PCC.CUST_ID
		WHERE PCC.CHT_USER_KEY = #{MEMBER_ID}
		GROUP BY PCC.CUST_ID, PC.CUST_PHN_NO
		LIMIT 1
	</select>
	

	<!-- 현재 고객이 상담중인지 체크 -->
	<select id="chkInputPsblty"   parameterType= "java.util.HashMap" resultType="java.util.HashMap">
		SELECT 		/* chkInputPsblty - 현재 고객이 상담중인지 체크 */
			CHT_CUTT_ID	/* 고객 문의유형 선택 안함(접수지연) 시스템 메시지 발송 후 저장 */
		FROM PLT_CHT_CUTT
		WHERE SNDR_KEY = (SELECT SNDR_KEY
							FROM PLT_CUSTCO_CHN
							WHERE DSPTCH_PRF_KEY = #{DSPTCH_PRF_KEY})::INTEGER
			AND CUST_ID = (SELECT CUST_ID
							FROM PLT_CHT_CUST
							WHERE CHT_USER_KEY = #{CHT_USER_KEY}
							AND SNDR_KEY = (SELECT SNDR_KEY
											FROM PLT_CUSTCO_CHN
											WHERE DSPTCH_PRF_KEY = #{DSPTCH_PRF_KEY})::INTEGER
							ORDER BY CUST_ID
							LIMIT 1)::INTEGER
			AND CUTT_STTS_CD IN ('WAIT', 'QSTN_CHCING', 'ALTMNT_WAIT', 'ING')
	</select>

    <insert id="cuttExpsnAttrReg"  parameterType= "java.util.HashMap">
        INSERT /*채팅 상담 상세 확장 정보 저장 (kr.co.hkcloud.palette3.chat.main.dao.ChatMainMapper.cuttExpsnAttrReg)*/
        INTO PLT_CHT_CUTT_DTL_EXPSN (
          CHT_CUTT_ID
        , ATTR_ID
        , ATTR_VL
        )
        VALUES (
          #{CHT_CUTT_ID}::BIGINT
        , #{ATTR_ID}::BIGINT
        , <if test='INDI_INFO_ENCPT_YN == "Y"'>custco.gen_encrypt(</if>#{ATTR_VL}<if test='INDI_INFO_ENCPT_YN == "Y"'>, #{PP_KEY_PP}, #{PP_ALG_PP})</if>
        )
    </insert>

    <update id="cuttExpsnAttrMerge"  parameterType= "java.util.HashMap">
        WITH upsert AS (
            UPDATE PLT_CHT_CUTT_DTL_EXPSN
                SET
                    ATTR_VL =
                    <if test='INDI_INFO_ENCPT_YN == "Y"'>
                        custco.gen_encrypt(
                    </if>
                    #{ATTR_VL}
                    <if test='INDI_INFO_ENCPT_YN == "Y"'>
                        , #{PP_KEY_PP}, #{PP_ALG_PP}
                        )
                    </if>
            WHERE CHT_CUTT_ID = CAST(#{CHT_CUTT_ID} AS BIGINT) AND ATTR_ID = CAST(#{ATTR_ID} AS BIGINT) RETURNING *
        )
        INSERT INTO PLT_CHT_CUTT_DTL_EXPSN (
            CHT_CUTT_ID
            , ATTR_ID
            , ATTR_VL
        )
        SELECT
            #{CHT_CUTT_ID}::BIGINT
            , #{ATTR_ID}::BIGINT
            , <if test='INDI_INFO_ENCPT_YN == "Y"'>custco.gen_encrypt(</if>#{ATTR_VL}<if test='INDI_INFO_ENCPT_YN == "Y"'>, #{PP_KEY_PP}, #{PP_ALG_PP})</if>
        WHERE NOT EXISTS ( SELECT * FROM upsert )
    </update>

</mapper>

