<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="kr.co.hkcloud.palette3.phone.cmpgn.dao.PhoneCmpgnResultMapper">

<!-- 프로젝트별 리스트 조회 -->
<select id="selectRtnPrj"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
SELECT ROW_NUMBER() OVER() AS ROW_NUMBER,
       TMP_LAST.*
			FROM (
				SELECT
					CASE WHEN INTG_PRJ_NO_TC = 1 THEN '' ELSE GROP_CD END AS AREA_CD
					, CASE WHEN INTG_PRJ_NO_TC = 1 THEN '' ELSE F.CD_NM END AS AREA_NM
					, CASE WHEN PTNR_CD_TC = 1 THEN '지역 소계' ELSE
							CASE WHEN INTG_PRJ_NO_TC =1 THEN '협력사 소계' ELSE (SELECT PTNR_NM FROM SAP_PTNR WHERE PTNR_CD = A.PTNR_CD) END
					END AS PTNR_NM
					, PTNR_CD
					, CASE WHEN INTG_PRJ_NO_TC = 1 THEN '' ELSE FN_PRJ_NM(A.INTG_PRJ_NO, '') END AS PRJ_NM
					, A.INTG_PRJ_NO
					, ACPT_CNT, TOT_CNT, HPCL_PROC_CNT
					, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20
					, A21, A22, A23, A24, A25, A26, A27, A28, A29, A30, A31, A32, A33, A34, A35, A36, A37, A38, A39, A40
					, (A1+A6+A11+A16+A21+A26+A31+A36) AS TOT1
					, (A2+A7+A12+A17+A22+A27+A32+A37) AS TOT2
					, (A3+A8+A13+A18+A23+A28+A33+A38) AS TOT3
					, (A4+A9+A14+A19+A24+A29+A34+A39) AS TOT4
					, (A5+A10+A15+A20+A25+A30+A35+A40) AS TOT5
					, ARRV_POINT, FIN_POINT
				FROM  (
					SELECT
						GROUPING(G.GROP_CD) AS GROP_CD_TC
						, GROUPING(A.PTNR_CD) AS PTNR_CD_TC
						, GROUPING(A.INTG_PRJ_NO) AS INTG_PRJ_NO_TC
						, G.GROP_CD, A.PTNR_CD
						, A.INTG_PRJ_NO
						, COUNT(*) AS TOT_CNT
						, VALUE(SUM(TIMESTAMPDIFF (8, CHAR(TIMESTAMP(ARRV_DATE||ARRV_TIME)-TIMESTAMP(ARRG_DATE||ARRG_TIME)))),0) AS ARRV_POINT
						, VALUE(SUM(TIMESTAMPDIFF (8, CHAR(TIMESTAMP(FIN_DATE||FIN_TIME)-TIMESTAMP(ARRV_DATE||ARRV_TIME)))),0) AS FIN_POINT
						, VALUE(SUM(HPCL_PROC_CNT),0) AS HPCL_PROC_CNT
						, VALUE(SUM(A1),0) AS A1
						, VALUE(SUM(A2),0) AS A2
						, VALUE(SUM(A3),0) AS A3
						, VALUE(SUM(A4),0) AS A4
						, VALUE(SUM(A5),0) AS A5		
						, VALUE(SUM(A6),0) AS A6
						, VALUE(SUM(A7),0) AS A7
						, VALUE(SUM(A8),0) AS A8
						, VALUE(SUM(A9),0) AS A9
						, VALUE(SUM(A10),0) AS A10
						, VALUE(SUM(A11),0) AS A11
						, VALUE(SUM(A12),0) AS A12
						, VALUE(SUM(A13),0) AS A13
						, VALUE(SUM(A14),0) AS A14
						, VALUE(SUM(A15),0) AS A15
						, VALUE(SUM(A16),0) AS A16
						, VALUE(SUM(A17),0) AS A17
						, VALUE(SUM(A18),0) AS A18
						, VALUE(SUM(A19),0) AS A19
						, VALUE(SUM(A20),0) AS A20
						, VALUE(SUM(A21),0) AS A21
						, VALUE(SUM(A22),0) AS A22
						, VALUE(SUM(A23),0) AS A23
						, VALUE(SUM(A24),0) AS A24
						, VALUE(SUM(A25),0) AS A25		
						, VALUE(SUM(A26),0) AS A26
						, VALUE(SUM(A27),0) AS A27
						, VALUE(SUM(A28),0) AS A28
						, VALUE(SUM(A29),0) AS A29
						, VALUE(SUM(A30),0) AS A30
						, VALUE(SUM(A31),0) AS A31
						, VALUE(SUM(A32),0) AS A32
						, VALUE(SUM(A33),0) AS A33
						, VALUE(SUM(A34),0) AS A34
						, VALUE(SUM(A35),0) AS A35
						, VALUE(SUM(A36),0) AS A36
						, VALUE(SUM(A37),0) AS A37
						, VALUE(SUM(A38),0) AS A38
						, VALUE(SUM(A39),0) AS A39
						, VALUE(SUM(A40),0) AS A40
					FROM UC_ASS_BASE AS A
					LEFT JOIN UC_CRS_CUST_INFO AS F ON A.CUST_NO=F.CUST_NO
					,SAP_PTNR AS G
					, UC_SYS_USER AS B
					, UC_ASS_PROC_HIST AS E
					, UC_ASS_FIN_RPT AS C
					, (
						SELECT
							KEY_NO
							, COUNT(*) AS HPCL_PROC_CNT
							, MAX(A1) AS A1
							, MAX(A2) AS A2
							, MAX(A3) AS A3
							, MAX(A4) AS A4
							, MAX(A5) AS A5
							, MAX(A6) AS A6
							, MAX(A7) AS A7
							, MAX(A8) AS A8
							, MAX(A9) AS A9
							, MAX(A10) AS A10
							, MAX(A11) AS A11
							, MAX(A12) AS A12
							, MAX(A13) AS A13
							, MAX(A14) AS A14
							, MAX(A15) AS A15
							, MAX(A16) AS A16
							, MAX(A17) AS A17
							, MAX(A18) AS A18
							, MAX(A19) AS A19
							, MAX(A20) AS A20
							, MAX(A21) AS A21
							, MAX(A22) AS A22
							, MAX(A23) AS A23
							, MAX(A24) AS A24
							, MAX(A25) AS A25
							, MAX(A26) AS A26
							, MAX(A27) AS A27
							, MAX(A28) AS A28
							, MAX(A29) AS A29
							, MAX(A30) AS A30
							, MAX(A31) AS A31
							, MAX(A32) AS A32
							, MAX(A33) AS A33
							, MAX(A34) AS A34
							, MAX(A35) AS A35
							, MAX(A36) AS A36
							, MAX(A37) AS A37
							, MAX(A38) AS A38
							, MAX(A39) AS A39
							, MAX(A40) AS A40
						FROM (
							SELECT
								KEY_NO
								, SUM(CASE WHEN LUP_ORD = 1 THEN ANSW_CNTN_5 ELSE 0 END) A1
								, SUM(CASE WHEN LUP_ORD = 1 THEN ANSW_CNTN_4 ELSE 0 END) A2
								, SUM(CASE WHEN LUP_ORD = 1 THEN ANSW_CNTN_3 ELSE 0 END) A3
								, SUM(CASE WHEN LUP_ORD = 1 THEN ANSW_CNTN_2 ELSE 0 END) A4
								, SUM(CASE WHEN LUP_ORD = 1 THEN ANSW_CNTN_1 ELSE 0 END) A5
								, SUM(CASE WHEN LUP_ORD = 2 THEN ANSW_CNTN_5 ELSE 0 END) A6
								, SUM(CASE WHEN LUP_ORD = 2 THEN ANSW_CNTN_4 ELSE 0 END) A7
								, SUM(CASE WHEN LUP_ORD = 2 THEN ANSW_CNTN_3 ELSE 0 END) A8
								, SUM(CASE WHEN LUP_ORD = 2 THEN ANSW_CNTN_2 ELSE 0 END) A9
								, SUM(CASE WHEN LUP_ORD = 2 THEN ANSW_CNTN_1 ELSE 0 END) A10
								, SUM(CASE WHEN LUP_ORD = 3 THEN ANSW_CNTN_5 ELSE 0 END) A11
								, SUM(CASE WHEN LUP_ORD = 3 THEN ANSW_CNTN_4 ELSE 0 END) A12
								, SUM(CASE WHEN LUP_ORD = 3 THEN ANSW_CNTN_3 ELSE 0 END) A13
								, SUM(CASE WHEN LUP_ORD = 3 THEN ANSW_CNTN_2 ELSE 0 END) A14
								, SUM(CASE WHEN LUP_ORD = 3 THEN ANSW_CNTN_1 ELSE 0 END) A15
								, SUM(CASE WHEN LUP_ORD = 4 THEN ANSW_CNTN_5 ELSE 0 END) A16
								, SUM(CASE WHEN LUP_ORD = 4 THEN ANSW_CNTN_4 ELSE 0 END) A17
								, SUM(CASE WHEN LUP_ORD = 4 THEN ANSW_CNTN_3 ELSE 0 END) A18
								, SUM(CASE WHEN LUP_ORD = 4 THEN ANSW_CNTN_2 ELSE 0 END) A19
								, SUM(CASE WHEN LUP_ORD = 4 THEN ANSW_CNTN_1 ELSE 0 END) A20
								, SUM(CASE WHEN LUP_ORD = 5 THEN ANSW_CNTN_5 ELSE 0 END) A21
								, SUM(CASE WHEN LUP_ORD = 5 THEN ANSW_CNTN_4 ELSE 0 END) A22
								, SUM(CASE WHEN LUP_ORD = 5 THEN ANSW_CNTN_3 ELSE 0 END) A23
								, SUM(CASE WHEN LUP_ORD = 5 THEN ANSW_CNTN_2 ELSE 0 END) A24
								, SUM(CASE WHEN LUP_ORD = 5 THEN ANSW_CNTN_1 ELSE 0 END) A25
								, SUM(CASE WHEN LUP_ORD = 6 THEN ANSW_CNTN_5 ELSE 0 END) A26
								, SUM(CASE WHEN LUP_ORD = 6 THEN ANSW_CNTN_4 ELSE 0 END) A27
								, SUM(CASE WHEN LUP_ORD = 6 THEN ANSW_CNTN_3 ELSE 0 END) A28
								, SUM(CASE WHEN LUP_ORD = 6 THEN ANSW_CNTN_2 ELSE 0 END) A29
								, SUM(CASE WHEN LUP_ORD = 6 THEN ANSW_CNTN_1 ELSE 0 END) A30
								, SUM(CASE WHEN LUP_ORD = 7 THEN ANSW_CNTN_5 ELSE 0 END) A31
								, SUM(CASE WHEN LUP_ORD = 7 THEN ANSW_CNTN_4 ELSE 0 END) A32
								, SUM(CASE WHEN LUP_ORD = 7 THEN ANSW_CNTN_3 ELSE 0 END) A33
								, SUM(CASE WHEN LUP_ORD = 7 THEN ANSW_CNTN_2 ELSE 0 END) A34
								, SUM(CASE WHEN LUP_ORD = 7 THEN ANSW_CNTN_1 ELSE 0 END) A35
								, SUM(CASE WHEN LUP_ORD = 8 THEN ANSW_CNTN_5 ELSE 0 END) A36
								, SUM(CASE WHEN LUP_ORD = 8 THEN ANSW_CNTN_4 ELSE 0 END) A37
								, SUM(CASE WHEN LUP_ORD = 8 THEN ANSW_CNTN_3 ELSE 0 END) A38
								, SUM(CASE WHEN LUP_ORD = 8 THEN ANSW_CNTN_2 ELSE 0 END) A39
								, SUM(CASE WHEN LUP_ORD = 8 THEN ANSW_CNTN_1 ELSE 0 END) A40
							FROM (
									SELECT
                                    <![CDATA[						
										CASE WHEN MAX(D4.ACPT_NO) <> '' THEN MAX(D4.ACPT_NO) ELSE KEY_NO END AS KEY_NO
									]]>
										, D2.SCRT_QTNA_SEQ, D1.QUEST_SEQ
										, D3.LUP_ORD
										, SUM(CASE WHEN EXPL_NO = 1 THEN 1 ELSE 0 END) AS ANSW_CNTN_5
										, SUM(CASE WHEN EXPL_NO = 2 THEN 1 ELSE 0 END) AS ANSW_CNTN_4
										, SUM(CASE WHEN EXPL_NO = 3 THEN 1 ELSE 0 END) AS ANSW_CNTN_3
										, SUM(CASE WHEN EXPL_NO = 4 THEN 1 ELSE 0 END) AS ANSW_CNTN_2
										, SUM(CASE WHEN EXPL_NO = 5 THEN 1 ELSE 0 END) AS ANSW_CNTN_1
									FROM UC_SVY_ANSW AS D1, UC_CMP_BASE AS D2 , UC_CMP_OBJ_LIST D4
									, (
										SELECT
											ROW_NUMBER() OVER () AS LUP_ORD
											, QTNA_SEQ
											, QUEST_SEQ
										FROM UC_SVY_QTNA_QUEST
										WHERE QTNA_SEQ= CAST(#{QTNA_SEQ} AS INTEGER)
										ORDER BY QUEST_NO
									) AS D3
									WHERE D1.CAMP_SEQ=D2.CAMP_SEQ
									AND D1.QTNA_SEQ=D3.QTNA_SEQ
									AND D1.QUEST_SEQ=D3.QUEST_SEQ
									AND D1.CAMP_SEQ = D4.CAMP_SEQ
									AND D1.LIST_SEQ = D4.LIST_SEQ
									AND D1.CAMP_SEQ = CAST(#{CAMP_SEQ} AS INTEGER)
									GROUP BY KEY_NO, D2.SCRT_QTNA_SEQ, D1.QUEST_SEQ, D3.LUP_ORD
							) TMP
							GROUP BY KEY_NO
						) AS TMP
						GROUP BY KEY_NO
					) AS D
					WHERE A.ACPT_NO=C.ACPT_NO
					AND C.ACPT_NO=D.KEY_NO
					AND A.PTNR_CD = G.PTNR_CD
					AND C.ACTL_STAT_CD='21004'
					AND A.PROC_TC NOT IN ('07006','07007')
					AND C.PROC_USER_ID=B.USER_ID
					AND C.ACPT_NO=E.ACPT_NO
					AND C.PROC_USER_ID=E.PROC_EGNR_USER_ID
                  <![CDATA[				
					AND (COALESCE(RTRM_DATE,'') = '' OR RTRM_DATE > '20100301')
					]]>
					AND A.ACPT_DATE BETWEEN #{STRT_ACPT_DATE} AND #{END_ACPT_DATE}
           <if test="AREA_CD != ''  and AREA_CD != null">          AND A.AREA_CD = #{AREA_CD} </if>
           <if test="PTNR_CD != ''  and PTNR_CD != null">          AND A.PTNR_CD = #{PTNR_CD} </if>
           <if test="USER_ID != ''  and USER_ID != null">          AND C.PROC_USER_ID = #{USER_ID} </if>
           <if test="INTG_PRJ_NO != ''  and INTG_PRJ_NO != null">  AND A.INTG_PRJ_NO = #{INTG_PRJ_NO} </if>
					GROUP BY ROLLUP(G.GROP_CD, A.PTNR_CD, A.INTG_PRJ_NO)
					ORDER BY G.GROP_CD, A.PTNR_CD, A.INTG_PRJ_NO
				) AS A
				LEFT OUTER JOIN (
					SELECT CD, CD_NM FROM UC_SYS_CODEBOOK
					WHERE LCD ='CST115B'
					AND CD != '000'
					AND USE_YN='Y'
				) F
				ON A.GROP_CD=F.CD
				LEFT JOIN (
					SELECT 
						INTG_PRJ_NO
						, COUNT(*) AS ACPT_CNT
					FROM UC_ASS_BASE A, UC_ASS_FIN_RPT B
					WHERE A.ACPT_NO=B.ACPT_NO
					AND ACPT_DATE BETWEEN #{STRT_ACPT_DATE} AND #{END_ACPT_DATE}
					AND PROC_TC NOT IN ('07006','07007')
					GROUP BY INTG_PRJ_NO
				) G
				ON A.INTG_PRJ_NO=G.INTG_PRJ_NO
			) TMP_LAST
			WHERE PRJ_NM IS NOT NULL
            

</select>

<!-- 상세리스트 리스트 조회 -->
<select id="selectRtnDetail"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
SELECT ROW_NUMBER() OVER() AS ROW_NUMBER,
				AREA_CD, F.CD_NM AS AREA_NM, PTNR_NM, ACPT_NO, A.INTG_PRJ_NO
				, FN_PRJ_NM(A.INTG_PRJ_NO, '') AS PRJ_NM 
				, CALL_TNO, A.PROC_USER_NM, G.HO_NM
				, A.CAMP_CUST_NM
				, A.CAMP_CUST_TNO
				, A.CAMP_CALL_TNO
				, A.CAMP_ALLC_AGNT_NM							
				, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20
				, A21, A22, A23, A24, A25, A26, A27, A28, A29, A30, A31, A32, A33, A34, A35, A36, A37, A38, A39, A40
				, (A1+A6+A11+A16+A21+A26+A31+A36) AS TOT1
				, (A2+A7+A12+A17+A22+A27+A32+A37) AS TOT2
				, (A3+A8+A13+A18+A23+A28+A33+A38) AS TOT3
				, (A4+A9+A14+A19+A24+A29+A34+A39) AS TOT4
				, (A5+A10+A15+A20+A25+A30+A35+A40) AS TOT5
				, ARRV_POINT, FIN_POINT
			FROM  (
				SELECT
					G.AREA_CD AS AREA_CD
					, A.PTNR_CD
					, FN_PTNR_NM(A.PTNR_CD) AS PTNR_NM
					, A.ACPT_NO
					, A.INTG_PRJ_NO
					, A.DEAL_LINE_DIV
					, A.PRJ_NO
					, A.HO_NO
					, PRJ_NM
					, A.CUST_NM
					, A.CALL_TNO
					, FN_USER(C.PROC_USER_ID,'') AS PROC_USER_NM
					, C.PROC_USER_ID
					, VALUE(TIMESTAMPDIFF (8, CHAR(TIMESTAMP(ARRV_DATE||ARRV_TIME)-TIMESTAMP(ARRG_DATE||ARRG_TIME))),0) AS ARRV_POINT
					, VALUE(TIMESTAMPDIFF (8, CHAR(TIMESTAMP(FIN_DATE||FIN_TIME)-TIMESTAMP(ARRV_DATE||ARRV_TIME))),0) AS FIN_POINT
					, VALUE(A1,0) AS A1
					, VALUE(A2,0) AS A2
					, VALUE(A3,0) AS A3
					, VALUE(A4,0) AS A4
					, VALUE(A5,0) AS A5		
					, VALUE(A6,0) AS A6
					, VALUE(A7,0) AS A7
					, VALUE(A8,0) AS A8
					, VALUE(A9,0) AS A9
					, VALUE(A10,0) AS A10
					, VALUE(A11,0) AS A11
					, VALUE(A12,0) AS A12
					, VALUE(A13,0) AS A13
					, VALUE(A14,0) AS A14
					, VALUE(A15,0) AS A15
					, VALUE(A16,0) AS A16
					, VALUE(A17,0) AS A17
					, VALUE(A18,0) AS A18
					, VALUE(A19,0) AS A19
					, VALUE(A20,0) AS A20
					, VALUE(A21,0) AS A21
					, VALUE(A22,0) AS A22
					, VALUE(A23,0) AS A23
					, VALUE(A24,0) AS A24
					, VALUE(A25,0) AS A25
					, VALUE(A26,0) AS A26
					, VALUE(A27,0) AS A27
					, VALUE(A28,0) AS A28
					, VALUE(A29,0) AS A29
					, VALUE(A30,0) AS A30
					, VALUE(A31,0) AS A31
					, VALUE(A32,0) AS A32
					, VALUE(A33,0) AS A33
					, VALUE(A34,0) AS A34
					, VALUE(A35,0) AS A35
					, VALUE(A36,0) AS A36
					, VALUE(A37,0) AS A37
					, VALUE(A38,0) AS A38
					, VALUE(A39,0) AS A39
					, VALUE(A40,0) AS A40
					, D.CUST_NM AS CAMP_CUST_NM
					, D.CUST_TNO AS CAMP_CUST_TNO
					, D.CALL_TNO AS CAMP_CALL_TNO
					, D.ALLC_AGNT_NM AS CAMP_ALLC_AGNT_NM							
				FROM UC_ASS_BASE AS A
				,UC_CRS_CUST_INFO AS F 
				,SAP_PTNR AS G 
				, UC_SYS_USER AS B
				, UC_ASS_PROC_HIST AS E
				, UC_ASS_FIN_RPT AS C
				,(
					SELECT
						KEY_NO
						, CUST_NM
						, CUST_TNO
						, CALL_TNO
						, ALLC_AGNT_NM							
						, COUNT(*) AS HPCL_PROC_CNT
						, MAX(A1) AS A1
						, MAX(A2) AS A2
						, MAX(A3) AS A3
						, MAX(A4) AS A4
						, MAX(A5) AS A5
						, MAX(A6) AS A6
						, MAX(A7) AS A7
						, MAX(A8) AS A8
						, MAX(A9) AS A9
						, MAX(A10) AS A10
						, MAX(A11) AS A11
						, MAX(A12) AS A12
						, MAX(A13) AS A13
						, MAX(A14) AS A14
						, MAX(A15) AS A15
						, MAX(A16) AS A16
						, MAX(A17) AS A17
						, MAX(A18) AS A18
						, MAX(A19) AS A19
						, MAX(A20) AS A20
						, MAX(A21) AS A21
						, MAX(A22) AS A22
						, MAX(A23) AS A23
						, MAX(A24) AS A24
						, MAX(A25) AS A25
						, MAX(A26) AS A26
						, MAX(A27) AS A27
						, MAX(A28) AS A28
						, MAX(A29) AS A29
						, MAX(A30) AS A30
						, MAX(A31) AS A31
						, MAX(A32) AS A32
						, MAX(A33) AS A33
						, MAX(A34) AS A34
						, MAX(A35) AS A35
						, MAX(A36) AS A36
						, MAX(A37) AS A37
						, MAX(A38) AS A38
						, MAX(A39) AS A39
						, MAX(A40) AS A40
					FROM (
						SELECT
							KEY_NO
							, CUST_NM
							, CUST_TNO
							, CALL_TNO
							, ALLC_AGNT_NM							
							, SUM(CASE WHEN LUP_ORD = 1 THEN ANSW_CNTN_5 ELSE 0 END) A1
							, SUM(CASE WHEN LUP_ORD = 1 THEN ANSW_CNTN_4 ELSE 0 END) A2
							, SUM(CASE WHEN LUP_ORD = 1 THEN ANSW_CNTN_3 ELSE 0 END) A3
							, SUM(CASE WHEN LUP_ORD = 1 THEN ANSW_CNTN_2 ELSE 0 END) A4
							, SUM(CASE WHEN LUP_ORD = 1 THEN ANSW_CNTN_1 ELSE 0 END) A5
							, SUM(CASE WHEN LUP_ORD = 2 THEN ANSW_CNTN_5 ELSE 0 END) A6
							, SUM(CASE WHEN LUP_ORD = 2 THEN ANSW_CNTN_4 ELSE 0 END) A7
							, SUM(CASE WHEN LUP_ORD = 2 THEN ANSW_CNTN_3 ELSE 0 END) A8
							, SUM(CASE WHEN LUP_ORD = 2 THEN ANSW_CNTN_2 ELSE 0 END) A9
							, SUM(CASE WHEN LUP_ORD = 2 THEN ANSW_CNTN_1 ELSE 0 END) A10
							, SUM(CASE WHEN LUP_ORD = 3 THEN ANSW_CNTN_5 ELSE 0 END) A11
							, SUM(CASE WHEN LUP_ORD = 3 THEN ANSW_CNTN_4 ELSE 0 END) A12
							, SUM(CASE WHEN LUP_ORD = 3 THEN ANSW_CNTN_3 ELSE 0 END) A13
							, SUM(CASE WHEN LUP_ORD = 3 THEN ANSW_CNTN_2 ELSE 0 END) A14
							, SUM(CASE WHEN LUP_ORD = 3 THEN ANSW_CNTN_1 ELSE 0 END) A15
							, SUM(CASE WHEN LUP_ORD = 4 THEN ANSW_CNTN_5 ELSE 0 END) A16
							, SUM(CASE WHEN LUP_ORD = 4 THEN ANSW_CNTN_4 ELSE 0 END) A17
							, SUM(CASE WHEN LUP_ORD = 4 THEN ANSW_CNTN_3 ELSE 0 END) A18
							, SUM(CASE WHEN LUP_ORD = 4 THEN ANSW_CNTN_2 ELSE 0 END) A19
							, SUM(CASE WHEN LUP_ORD = 4 THEN ANSW_CNTN_1 ELSE 0 END) A20
							, SUM(CASE WHEN LUP_ORD = 5 THEN ANSW_CNTN_5 ELSE 0 END) A21
							, SUM(CASE WHEN LUP_ORD = 5 THEN ANSW_CNTN_4 ELSE 0 END) A22
							, SUM(CASE WHEN LUP_ORD = 5 THEN ANSW_CNTN_3 ELSE 0 END) A23
							, SUM(CASE WHEN LUP_ORD = 5 THEN ANSW_CNTN_2 ELSE 0 END) A24
							, SUM(CASE WHEN LUP_ORD = 5 THEN ANSW_CNTN_1 ELSE 0 END) A25
							, SUM(CASE WHEN LUP_ORD = 6 THEN ANSW_CNTN_5 ELSE 0 END) A26
							, SUM(CASE WHEN LUP_ORD = 6 THEN ANSW_CNTN_4 ELSE 0 END) A27
							, SUM(CASE WHEN LUP_ORD = 6 THEN ANSW_CNTN_3 ELSE 0 END) A28
							, SUM(CASE WHEN LUP_ORD = 6 THEN ANSW_CNTN_2 ELSE 0 END) A29
							, SUM(CASE WHEN LUP_ORD = 6 THEN ANSW_CNTN_1 ELSE 0 END) A30
							, SUM(CASE WHEN LUP_ORD = 7 THEN ANSW_CNTN_5 ELSE 0 END) A31
							, SUM(CASE WHEN LUP_ORD = 7 THEN ANSW_CNTN_4 ELSE 0 END) A32
							, SUM(CASE WHEN LUP_ORD = 7 THEN ANSW_CNTN_3 ELSE 0 END) A33
							, SUM(CASE WHEN LUP_ORD = 7 THEN ANSW_CNTN_2 ELSE 0 END) A34
							, SUM(CASE WHEN LUP_ORD = 7 THEN ANSW_CNTN_1 ELSE 0 END) A35
							, SUM(CASE WHEN LUP_ORD = 8 THEN ANSW_CNTN_5 ELSE 0 END) A36
							, SUM(CASE WHEN LUP_ORD = 8 THEN ANSW_CNTN_4 ELSE 0 END) A37
							, SUM(CASE WHEN LUP_ORD = 8 THEN ANSW_CNTN_3 ELSE 0 END) A38
							, SUM(CASE WHEN LUP_ORD = 8 THEN ANSW_CNTN_2 ELSE 0 END) A39
							, SUM(CASE WHEN LUP_ORD = 8 THEN ANSW_CNTN_1 ELSE 0 END) A40
						FROM (
									SELECT
                                      <![CDATA[
										CASE WHEN MAX(D4.ACPT_NO) <> '' THEN MAX(D4.ACPT_NO) ELSE KEY_NO END AS KEY_NO
										]]>
										, D4.CUST_NM
										, D4.CUST_TNO
										, D4.CALL_TNO
										, FN_USER(D4.ALLC_AGNT_ID, '') AS ALLC_AGNT_NM , D2.SCRT_QTNA_SEQ, D1.QUEST_SEQ
										, D3.LUP_ORD
										, SUM(CASE WHEN EXPL_NO = 1 THEN 1 ELSE 0 END) AS ANSW_CNTN_5
										, SUM(CASE WHEN EXPL_NO = 2 THEN 1 ELSE 0 END) AS ANSW_CNTN_4
										, SUM(CASE WHEN EXPL_NO = 3 THEN 1 ELSE 0 END) AS ANSW_CNTN_3
										, SUM(CASE WHEN EXPL_NO = 4 THEN 1 ELSE 0 END) AS ANSW_CNTN_2
										, SUM(CASE WHEN EXPL_NO = 5 THEN 1 ELSE 0 END) AS ANSW_CNTN_1
									FROM UC_SVY_ANSW AS D1, UC_CMP_BASE AS D2 , UC_CMP_OBJ_LIST D4
									, (
										SELECT
											ROW_NUMBER() OVER () AS LUP_ORD
											, QTNA_SEQ
											, QUEST_SEQ
										FROM UC_SVY_QTNA_QUEST
										WHERE QTNA_SEQ= CAST(#{QTNA_SEQ} AS INTEGER)
										ORDER BY QUEST_NO
									) AS D3
									WHERE D1.CAMP_SEQ=D2.CAMP_SEQ
									AND D1.QTNA_SEQ=D3.QTNA_SEQ
									AND D1.QUEST_SEQ=D3.QUEST_SEQ
									AND D1.CAMP_SEQ = D4.CAMP_SEQ
									AND D1.LIST_SEQ = D4.LIST_SEQ
									AND D1.CAMP_SEQ = CAST(#{CAMP_SEQ} AS INTEGER)
									GROUP BY KEY_NO, D4.CUST_NM, D4.CUST_TNO, D4.CALL_TNO, D4.ALLC_AGNT_ID, D2.SCRT_QTNA_SEQ, D1.QUEST_SEQ, D3.LUP_ORD
						) TMP
						GROUP BY KEY_NO, CUST_NM, CUST_TNO, CALL_TNO, ALLC_AGNT_NM							
					) AS TMP
					GROUP BY KEY_NO, CUST_NM, CUST_TNO, CALL_TNO, ALLC_AGNT_NM							
				) AS D
				WHERE A.ACPT_NO=C.ACPT_NO
				AND C.ACPT_NO=D.KEY_NO
				AND A.PTNR_CD = G.PTNR_CD
				AND A.CUST_NO=F.CUST_NO				
				AND C.ACTL_STAT_CD='21004'
				AND A.PROC_TC NOT IN ('07006','07007')
				AND C.PROC_USER_ID=B.USER_ID
				AND C.ACPT_NO=E.ACPT_NO
				AND C.PROC_USER_ID=E.PROC_EGNR_USER_ID
    <![CDATA[
				AND (COALESCE(RTRM_DATE,'') = '' OR RTRM_DATE > '20100301')
				]]>
				AND A.ACPT_DATE BETWEEN #{STRT_ACPT_DATE} AND #{END_ACPT_DATE}
           <if test="PTNR_CD != ''  and PTNR_CD != null">          AND A.PTNR_CD = #{PTNR_CD} </if>
           <if test="USER_ID != ''  and USER_ID != null">          AND C.PROC_USER_ID = #{USER_ID} </if>
           <if test="INTG_PRJ_NO != ''  and INTG_PRJ_NO != null">  AND A.INTG_PRJ_NO = #{INTG_PRJ_NO} </if>
				ORDER BY ACPT_NO, G.AREA_CD, PTNR_CD
			) AS A
			LEFT OUTER JOIN (
				SELECT CD, CD_NM FROM UC_SYS_CODEBOOK
				WHERE LCD ='CST115'
				AND CD != '000'
				AND USE_YN='Y'
			) F
			ON A.AREA_CD=F.CD
			LEFT JOIN SAP_HO_INFO AS G
			ON A.INTG_PRJ_NO=G.INTG_PRJ_NO
			AND A.DEAL_LINE_DIV=G.DEAL_LINE_DIV
			AND A.PRJ_NO=G.PRJ_NO
			AND A.HO_NO=G.HO_NO

</select>

	   
<!-- PM 목록 -->
<select id="selectRtnPm"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
            SELECT 
			     USER_ID AS CD, USER_NM CD_NM, 
			     CASE WHEN PTNR_CD IS NOT NULL THEN
				           FN_PTNR_NM(PTNR_CD)
                      ELSE FN_PTNR_NM(TEAM_SCD)	 END PTNR_NM				   
            FROM UC_SYS_USER
			WHERE GRADE_CD = '8'
			ORDER BY USER_NM  

</select>	
		
<!-- 해피콜그룹 -->
<select id="selectRtnHappyCallGroup"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
			SELECT '0' AS STEP
				, CAMP_SEQ CODE
				, CAMP_NM  CODENAME
				, SCRT_QTNA_SEQ SVY_ID
			FROM UC_CMP_BASE
			WHERE CAMP_TYPE_CD = '09'
			

</select>	

<!-- QTNA_SEQ 가져오는 문장 -->
<select id="selectRtnQtnaSEQ"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
    SELECT  CAMP_SEQ
    ,CAMP_NM
    ,CAMP_TYPE_CD
    ,CAMP_STAT_CD
    ,STRT_DATE
    ,END_DATE
    ,SCRT_QTNA_TC
    ,SCRT_QTNA_SEQ
    ,CAMP_DESC
    ,CHG_USER_ID
    ,CHG_DT
        ,REG_DT
    ,REG_USER_ID
FROM  UC_CMP_BASE
WHERE   CAMP_SEQ = #{CAMP_SEQ}
ORDER BY    CAMP_SEQ DESC

</select>   
	
</mapper>