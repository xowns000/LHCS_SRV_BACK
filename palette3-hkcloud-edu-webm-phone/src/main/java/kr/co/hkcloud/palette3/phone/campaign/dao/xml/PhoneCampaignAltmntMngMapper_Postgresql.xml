<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.hkcloud.palette3.phone.campaign.dao.PhoneCampaignAltmntMngMapper">

	<!--  캠페인 TOP리스트 -->
	<select id="selectTopCpiAltmntMng" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT	 /* selectTopCpiAltmntMng 캠페인 TOP리스트 */
				 X.CPI_NM
				,X.CPI_BGNG_DT
				,X.CPI_END_DT
				,X.PLAN_CYCL
				,X.PRGRS_STTS_NM
				,X.PRGRS_STTS_CD
				,X.REG_DT
				,X.RGTR_ID
				,X.CUST_TOT
				,X.CUST_ALT
				,(X.CUST_TOT - X.CUST_ALT) AS UN_CUST_ALT
--				,(CASE WHEN X.CUST_TOT = 0 THEN 0 ELSE ROUND((X.CUST_ALT::DECIMAL / X.CUST_TOT::DECIMAL) * 100,1) END)::TEXT || '%' AS CUST_AVR
				,(CASE WHEN X.CUSL_ALT = 0 THEN 0 ELSE ROUND((X.CUST_ALT::DECIMAL / X.CUSL_ALT::DECIMAL),1) END) AS CUST_AVR
				,X.CUSL_TOT
				,X.CUSL_ALT
				,(X.CUSL_TOT - X.CUSL_ALT) AS UN_CUSL_ALT
		FROM (
			SELECT 	 A.CPI_NM
					,SUBSTR(A.CPI_BGNG_DT, 1, 4) || '-' || SUBSTR(A.CPI_BGNG_DT, 5, 2) || '-' || SUBSTR(A.CPI_BGNG_DT, 7, 2) AS CPI_BGNG_DT
					,SUBSTR(A.CPI_END_DT, 1, 4) || '-' || SUBSTR(A.CPI_END_DT, 5, 2) || '-' || SUBSTR(A.CPI_END_DT, 7, 2) AS CPI_END_DT
					,A.PLAN_CYCL
					,B.CD_NM AS PRGRS_STTS_NM
					,A.PRGRS_STTS_CD
					,TO_DATE(A.REG_DT,'YYYYMMDDHH24MISS')::TEXT AS REG_DT
					,C.USER_NM AS RGTR_ID
					,(SELECT COUNT(X.CUST_ID) FROM PLT_OBD_CPI_CUST X WHERE X.CPI_ID = A.CPI_ID) AS CUST_TOT
					,(SELECT COUNT(X.CUST_ID)
						FROM PLT_OBD_CPI_CUST_ALTMNT X
						LEFT OUTER JOIN PLT_OBD_CPI_CUST Y
							ON X.CUST_ID = Y.CUST_ID AND X.CPI_ID = Y.CPI_ID
						WHERE X.CPI_ID = A.CPI_ID) AS CUST_ALT
					,(SELECT COUNT(X.CUSL_ID) FROM PLT_OBD_CPI_CUSL X WHERE X.CPI_ID = A.CPI_ID) AS CUSL_TOT
					,(SELECT COUNT(DISTINCT X.CUSL_ID)
						FROM PLT_OBD_CPI_CUST_ALTMNT X
						LEFT OUTER JOIN PLT_OBD_CPI_CUSL Y
							ON X.CUSL_ID = Y.CUSL_ID AND X.CPI_ID = Y.CPI_ID
						WHERE X.CPI_ID = A.CPI_ID) AS CUSL_ALT
			FROM PLT_OBD_CPI A
			LEFT OUTER JOIN PLT_COMM_CD B
				ON A.PRGRS_STTS_CD = B.CD_ID AND B.GROUP_CD_ID = 'CMPN_ST' AND B.CUSTCO_ID = A.CUSTCO_ID
			LEFT OUTER JOIN PLT_USER C
				ON A.RGTR_ID = C.USER_ID
			WHERE 	A.CPI_ID = #{CPI_ID}::INTEGER
		) X
	</select>

	<!--  상담직원 조회 -->
	<select id="selectCuslAltmntMng" parameterType="java.util.HashMap" resultType="java.util.HashMap">

<!--		SELECT	 /* selectCuslAltmntMng 상담직원 조회 */-->
<!--				 ROW_NUMBER() OVER(ORDER BY X.USER_NM) AS ROW_NUMBER-->
<!--				,X.USER_NM-->
<!--				,X.LGN_ID-->
<!--				,X.DEPT_NM-->
<!--				,X.CUSL_ALT-->
<!--				,X.CMPTN-->
<!--				,(X.CUSL_ALT - X.CMPTN) AS UN_CMPTN-->
<!--				,'0' AS ADDRE-->
<!--				,X.EXL_RSN_CD-->
<!--				,X.CUSL_ID-->
<!--				,X.CPI_ID-->
<!--				,X.CPI_NM-->
<!--				,X.PLAN_SE_NM-->
<!--				,X.PRGRS_STTS_CD-->
<!--				,X.PRGRS_STTS_NM-->
<!--		FROM (-->
<!--			SELECT	 C.USER_NM-->
<!--					,C.LGN_ID-->
<!--					,E.DEPT_NM-->
<!--					,COUNT(F.CUSL_ID) AS CUSL_ALT-->
<!--					,(	SELECT COUNT(X.CPI_ID)-->
<!--						FROM PLT_PHN_CUTT X-->
<!--						LEFT OUTER JOIN PLT_PHN_CUTT_DTL_EXPSN Y-->
<!--							ON X.PHN_CUTT_ID = Y.PHN_CUTT_ID-->
<!--						WHERE B.CPI_ID = X.CPI_ID-->
<!--						AND B.CUSL_ID = X.CUSL_ID-->
<!--						AND Y.ATTR_VL = 'COMPLETED') AS CMPTN-->
<!--					,B.EXL_RSN_CD-->
<!--					,B.CUSL_ID-->
<!--					,B.CPI_ID-->
<!--					,A.CPI_NM-->
<!--					,G.CD_NM AS PLAN_SE_NM-->
<!--					,A.PRGRS_STTS_CD-->
<!--					,H.CD_NM AS PRGRS_STTS_NM-->
<!--			FROM PLT_OBD_CPI A-->
<!--			INNER JOIN PLT_OBD_CPI_CUSL B-->
<!--				ON A.CPI_ID = B.CPI_ID-->
<!--			LEFT OUTER JOIN PLT_USER C-->
<!--				ON B.CUSL_ID = C.USER_ID-->
<!--			LEFT OUTER JOIN PLT_USER_OGNZ D-->
<!--				ON C.USER_ID = D.USER_ID AND A.CUSTCO_ID = D.CUSTCO_ID-->
<!--			LEFT OUTER JOIN PLT_OGNZ E-->
<!--				ON D.DEPT_ID = E.DEPT_ID-->
<!--			LEFT OUTER JOIN PLT_OBD_CPI_CUST_ALTMNT F-->
<!--				ON B.CUSL_ID = F.CUSL_ID AND A.CPI_ID = F.CPI_ID-->
<!--			LEFT OUTER JOIN PLT_COMM_CD G-->
<!--				ON A.PLAN_SE_CD = G.CD_ID AND G.GROUP_CD_ID = 'CMPN_CL' AND G.CUSTCO_ID = A.CUSTCO_ID-->
<!--			LEFT OUTER JOIN PLT_COMM_CD H-->
<!--				ON A.PRGRS_STTS_CD = H.CD_ID AND H.GROUP_CD_ID = 'CMPN_ST' AND H.CUSTCO_ID = A.CUSTCO_ID-->
<!--			WHERE	A.CPI_ID = #{CPI_ID}::INTEGER-->
<!--			AND 	A.CUSTCO_ID = #{CUSTCO_ID}::INTEGER-->
<!--			GROUP BY C.USER_NM-->
<!--					,C.LGN_ID-->
<!--					,E.DEPT_NM-->
<!--					,B.CUSL_ID-->
<!--					,C.USER_ID-->
<!--					,B.CPI_ID-->
<!--					,B.EXL_RSN_CD-->
<!--					,A.CPI_NM-->
<!--					,G.CD_NM-->
<!--					,A.PRGRS_STTS_CD-->
<!--					,H.CD_NM-->
<!--		) X-->
		SELECT /* 캠페인 상담직원 목록 (kr.co.hkcloud.palette3.phone.campaign.dao.PhoneCampaignAltmntMngMapper.selectCuslAltmntMng)*/
			ROW_NUMBER() OVER(ORDER BY A.USER_NM) AS ROW_NUMBER
			, A.USER_NM
			, A.LGN_ID
			, A.AUTHRT_GROUP_NM
			, A.CUSL_ALT
			, A.CMPTN
			,(A.CUSL_ALT - A.CMPTN) AS UN_CMPTN
			,'0' AS ADDRE
			, A.EXL_RSN_CD
			, A.CUSL_ID
			, A.CPI_ID
			, A.CPI_NM
			, A.PLAN_SE_NM
			, A.PRGRS_STTS_CD
			, A.PRGRS_STTS_NM
		FROM (
			SELECT
				POCC.CUSL_ID
				, (SELECT USER_NM FROM PLT_USER WHERE USER_ID = POCC.CUSL_ID) AS USER_NM
				, (SELECT LGN_ID FROM PLT_USER WHERE USER_ID = POCC.CUSL_ID) AS LGN_ID
				, (SELECT PA.AUTHRT_GROUP_NM FROM PLT_AUTHRT PA INNER JOIN PLT_USER_AUTHRT PUA ON PA.AUTHRT_GROUP_ID = PUA.AUTHRT_GROUP_ID WHERE USER_ID = POCC.CUSL_ID) AS AUTHRT_GROUP_NM
				, (SELECT COUNT(CUSL_ID) FROM PLT_OBD_CPI_CUST_ALTMNT WHERE CPI_ID = POC.CPI_ID AND CUSL_ID = POCC.CUSL_ID) AS CUSL_ALT
				, (SELECT COUNT(PPC.CPI_ID)
					FROM PLT_PHN_CUTT PPC
					LEFT OUTER JOIN PLT_PHN_CUTT_DTL_EXPSN PPCDE ON PPC.PHN_CUTT_ID = PPCDE.PHN_CUTT_ID
					WHERE PPC.CPI_ID = POCC.CPI_ID
					AND PPC.CUSL_ID = POCC.CUSL_ID
					AND PPCDE.ATTR_VL = 'COMPLETED') AS CMPTN
				, POCC.EXL_RSN_CD
				, POC.CPI_ID
				, POC.CPI_NM
				, POC.PLAN_SE_CD
				, (SELECT CD_NM FROM PLT_COMM_CD WHERE CUSTCO_ID = POC.CUSTCO_ID AND GROUP_CD_ID = 'CMPN_CL' AND CD_ID = POC.PLAN_SE_CD) AS PLAN_SE_NM
				, POC.PRGRS_STTS_CD
				, (SELECT CD_NM FROM PLT_COMM_CD WHERE CUSTCO_ID = POC.CUSTCO_ID AND GROUP_CD_ID = 'CMPN_ST' AND CD_ID = POC.PRGRS_STTS_CD) AS PRGRS_STTS_NM
			FROM PLT_OBD_CPI POC
			INNER JOIN PLT_OBD_CPI_CUSL POCC ON POC.CPI_ID = POCC.CPI_ID
			WHERE POC.CUSTCO_ID = #{CUSTCO_ID}::INT
			AND POCC.CPI_ID = #{CPI_ID}::INT
		) A
	</select>
	<!--  배분처리 -->
	<insert id="insertCuslAltmntMng"  parameterType="java.util.HashMap">
		INSERT INTO PLT_OBD_CPI_CUST_ALTMNT
		SELECT 	 /* insertCuslAltmntMng 배분처리 */
				 #{CUSL_ID}::INTEGER
				,A.CUST_ID
				,TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
				,#{CPI_ID}::INTEGER
		FROM 	PLT_OBD_CPI_CUST A
		WHERE 	CPI_ID = #{CPI_ID}::INTEGER
		AND NOT EXISTS (
			SELECT 'X'
			FROM PLT_OBD_CPI_CUST_ALTMNT X
			WHERE X.CUST_ID = A.CUST_ID
			AND X.CPI_ID = A.CPI_ID
		)
		LIMIT 	#{ADDRE}::INTEGER
	</insert>
	<!--  제외사유 변경 -->
	<insert id="updateExlAltmntMng"  parameterType="java.util.HashMap">
		UPDATE 	/* updateExlAltmntMng 제외사유 변경 */
				PLT_OBD_CPI_CUSL
		SET 	EXL_RSN_CD = #{EXL_RSN_CD}
		WHERE 	CUSL_ID = #{CUSL_ID}::INTEGER
		AND 	CPI_ID = #{CPI_ID}::INTEGER
	</insert>
	<!--  회수 -->
	<delete id="returnCuslAltmntMng"  parameterType="java.util.HashMap">
		DELETE /* returnCuslAltmntMng 회수 */
		FROM PLT_OBD_CPI_CUST_ALTMNT X
		USING (
			SELECT A.*
			FROM PLT_OBD_CPI_CUST_ALTMNT A
			WHERE A.CPI_ID = #{CPI_ID}::INTEGER
		<if test="ARG == 'indi'">
			AND A.CUSL_ID = #{CUSL_ID}::INTEGER
			AND NOT EXISTS (
				SELECT 'X'
				FROM PLT_PHN_CUTT X
				WHERE X.CUSL_ID = A.CUSL_ID
				AND 	X.CUST_ID = A.CUST_ID
				AND 	X.CPI_ID = A.CPI_ID
			)
			LIMIT #{ADDRE}::INTEGER
		</if>
		) Y
		WHERE 	X.CUSL_ID = Y.CUSL_ID
		AND 	X.CUST_ID = Y.CUST_ID
		AND 	X.CPI_ID = Y.CPI_ID
	</delete>

	<!--  배분된 정보 조회 -->
	<select id="selectCustAltmntMng" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT 	 /* selectCustAltmntMng 배분된 정보 조회 */
				 ROW_NUMBER() OVER(ORDER BY X.CUST_NM) AS ROW_NUMBER
				,X.CUST_NM
				,X.CUST_PHN_NO
				,X.ALTMNT_DT
				,(CASE WHEN X.CALL_YN = 0 THEN 'N' ELSE 'Y' END) AS YN
				,(CASE WHEN X.CALL_YN = 0 THEN '미완료' ELSE '완료' END) AS YN_NM
				,X.TRY_CNT
				,X.CUST_ID
				<if test="arrAttrColId != null and arrAttrColId != ''">
					, <foreach collection="arrAttrColId" item="EXPSN_ATTR_COL_ID" open="" separator="," close="" >
						${EXPSN_ATTR_COL_ID}::TEXT
					</foreach>
				</if>
		FROM (
			SELECT 	 B.CUST_NM
					,B.CUST_PHN_NO
					,TO_TIMESTAMP(A.ALTMNT_DT,'YYYYMMDDHH24MISS') AS ALTMNT_DT
					,(	SELECT COUNT(X.CPI_ID)
						FROM PLT_PHN_CUTT X
						LEFT OUTER JOIN PLT_PHN_CUTT_DTL_EXPSN Y
							ON X.PHN_CUTT_ID = Y.PHN_CUTT_ID
						WHERE A.CPI_ID = X.CPI_ID
						AND A.CUST_ID = X.CUST_ID
						AND Y.ATTR_VL = 'COMPLETED') AS CALL_YN
					,(	SELECT COUNT(X.CPI_ID)
						FROM PLT_PHN_CUTT X
						WHERE A.CPI_ID = X.CPI_ID
						AND A.CUST_ID = X.CUST_ID) AS TRY_CNT
					,A.CUST_ID

			FROM 	PLT_OBD_CPI_CUST_ALTMNT A
			INNER JOIN PLT_CUST B
				ON A.CUST_ID = B.CUST_ID
			WHERE A.CUSL_ID = #{CUSL_ID}::INTEGER
			AND 	A.CPI_ID = #{CPI_ID}::INTEGER
		) X
		<if test="arrAttrColId != null and arrAttrColId != ''">
			LEFT OUTER JOIN (
				SELECT * FROM DYNAMIC_CROSSTAB(#{CUSTCO_ID}::INTEGER, 'CAMP', #{CPI_ID}::INTEGER) AS TBL(CUST_ID INTEGER,
				<foreach collection="arrAttrColId" item="EXPSN_ATTR_COL_ID" open="" separator="," close="" >
					${EXPSN_ATTR_COL_ID} TEXT
				</foreach>
				)
			) ATTR ON ATTR.CUST_ID = X.CUST_ID
		</if>
	</select>

	<!-- 상담사 상태 조회 -->
	<select id="chkCustExlAltmntMng" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT 	/* chkCustExlAltmntMng 상담사 상태 조회 */
				A.CUSL_ID
		FROM 	PLT_OBD_CPI_CUSL A
		WHERE 	A.CUSL_ID = #{AFTR_CUSL_ID}::INTEGER
		AND 	A.CPI_ID = #{CPI_ID}::INTEGER
		AND 	A.EXL_RSN_CD != '1'
	</select>

	<!-- 상담사 없는경우 저장 -->
	<insert id="addCuslAltmntMng"  parameterType="java.util.HashMap">
		INSERT INTO PLT_OBD_CPI_CUSL(
					/* addCuslAltmntMng 상담사 없는경우 저장 */
					CUSL_ID
					,EXL_RSN_CD
					,RGTR_ID
					,REG_DT
					,CPI_ID
		) VALUES (
					#{AFTR_CUSL_ID}::INTEGER
					,'1'
					,#{USER_ID}::INTEGER
					,TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
					,#{CPI_ID}::INTEGER
		) ON CONFLICT (CUSL_ID, CPI_ID) DO NOTHING
	</insert>

	<!--  인수인계 -->
	<insert id="tkoverCuslAltmntMng"  parameterType="java.util.HashMap">
		INSERT INTO PLT_OBD_CPI_CUST_ALTMNT
		SELECT 	 /* tkoverCuslAltmntMng 인수인계 */
				 #{AFTR_CUSL_ID}::INTEGER			AS CUSL_ID
				,A.CUST_ID							AS CUST_ID
				,TO_CHAR(NOW(), 'YYYYMMDDHH24MISS') AS ALTMNT_DT
				,#{CPI_ID}::INTEGER					AS CPI_ID
		FROM PLT_OBD_CPI_CUST_ALTMNT A
		WHERE A.CPI_ID  = #{CPI_ID}::INTEGER
		AND A.CUSL_ID = #{BFR_CUSL_ID}::INTEGER
		AND NOT EXISTS (
			SELECT 'X'
			FROM PLT_PHN_CUTT X
			WHERE X.CUSL_ID = A.CUSL_ID
			AND X.CUST_ID = A.CUST_ID
			AND X.CPI_ID = A.CPI_ID
		)
	</insert>

	<!--  인수인계 후 삭제 -->
	<delete id="deleteCuslAltmntMng"  parameterType="java.util.HashMap">
		DELETE /* deleteCuslAltmntMng 인수인계 후 삭제 */
		FROM PLT_OBD_CPI_CUST_ALTMNT A
		WHERE A.CPI_ID  = #{CPI_ID}::INTEGER
		AND A.CUSL_ID = #{BFR_CUSL_ID}::INTEGER
		AND NOT EXISTS (
			SELECT 'X'
			FROM PLT_PHN_CUTT X
			WHERE X.CUSL_ID = A.CUSL_ID
			AND X.CUST_ID = A.CUST_ID
			AND X.CPI_ID = A.CPI_ID
		)
	</delete>

	<!--  상담원 변경 -->
	<insert id="chgCuslAltmntMng"  parameterType="java.util.HashMap">
		INSERT INTO PLT_OBD_CPI_CUST_ALTMNT
		SELECT 	 /* chgCuslAltmntMng 상담원 변경 */
				 #{AFTR_CUSL_ID}::INTEGER			AS CUSL_ID
				,A.CUST_ID							AS CUST_ID
				,TO_CHAR(NOW(), 'YYYYMMDDHH24MISS') AS ALTMNT_DT
				,#{CPI_ID}::INTEGER					AS CPI_ID
		FROM PLT_OBD_CPI_CUST_ALTMNT A
		WHERE A.CPI_ID  = #{CPI_ID}::INTEGER
		AND A.CUSL_ID = #{BFR_CUSL_ID}::INTEGER
		AND A.CUST_ID IN (
		<foreach collection="CUST_LIST" item="ITEM" close="" separator=",">
			#{ITEM.CUST_ID}::INTEGER
		</foreach>
		)
	</insert>

	<!--  인수인계 후 삭제 -->
	<delete id="deleteChgCuslAltmntMng"  parameterType="java.util.HashMap">
		DELETE /* deleteChgCuslAltmntMng 인수인계 후 삭제 */
		FROM PLT_OBD_CPI_CUST_ALTMNT A
		WHERE A.CPI_ID  = #{CPI_ID}::INTEGER
		AND A.CUSL_ID = #{BFR_CUSL_ID}::INTEGER
		AND A.CUST_ID IN (
		<foreach collection="CUST_LIST" item="ITEM" close="" separator=",">
			#{ITEM.CUST_ID}::INTEGER
		</foreach>
		)
	</delete>

	<select id="expsnAttrList"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
		SELECT 	  /* expsnAttrList */
				  ROW_NUMBER() OVER(ORDER BY PEA.SORT_ORD) AS ROW_NUMBER
				, PEA.ATTR_ID
				, PEA.BSC_PVSN_ATTR_YN
				, PEA.SE
				, PCC_SE.CD_NM AS SE_NM
				, PEA.EXPSN_ATTR_NM
				, PEA.EXPSN_ATTR_COL_ID
				, PEA.DATA_TYPE_CD
				, PCC_DATA.CD_NM AS DATA_TYPE_NM
				, PEA.DATA_LEN
				, PEA.GROUP_CD_ID
				, (SELECT CD_NM FROM PLT_COMM_CD WHERE CUSTCO_ID = #{CUSTCO_ID}::INT AND GROUP_CD_ID = '*' AND CD_ID = PEA.GROUP_CD_ID) AS GROUP_CD_NM
				, PEA.SIC_ID
				, PCC_SIC.CD_NM AS SIC_NM
				, PEA.SYS_BSC_YN
				, PEA.ESNTL_YN
				, PCC_ESNTL.CD_NM AS ESNTL_NM
				, PEA.MDFCN_PSBLTY_YN
				, PCC_MOD.CD_NM AS MDFCN_PSBLTY_NM
				, PEA.USE_YN
				, PEA.SCRN_EXPSR_YN
				, PCC_USE.CD_NM AS USE_NM
				, PEA.MSG_USE_YN
				, PEA.MSG_CN
				, PEA.DEL_YN
				, PEA.EXPSN_ATTR_EXPLN
				, PEA.SORT_ORD
				, PEA.RGTR_ID
				, PEA.REG_DT
				, PEA.MDFR_ID
				, PEA.MDFCN_DT
				, PEA.CUSTCO_ID
				, PEA.CPI_ID
		FROM PLT_EXPSN_ATTR PEA
		LEFT OUTER JOIN PLT_COMM_CD PCC_SE ON PCC_SE.CUSTCO_ID = #{CUSTCO_ID}::INT AND PCC_SE.CD_ID = PEA.SE AND PCC_SE.GROUP_CD_ID = 'CATG_EXT_CL' --구분(고객정보, 상담내용, 캠페인)
		LEFT OUTER JOIN PLT_COMM_CD PCC_DATA ON PCC_DATA.CUSTCO_ID = #{CUSTCO_ID}::INT AND PCC_DATA.CD_ID = PEA.DATA_TYPE_CD AND PCC_DATA.GROUP_CD_ID = 'EXPN_PT' --속성(문자형, ㅅ수자형, 단일선택형, 날짜형)
		LEFT OUTER JOIN PLT_COMM_CD PCC_USE ON PCC_USE.CUSTCO_ID = #{CUSTCO_ID}::INT AND PCC_USE.CD_ID = PEA.USE_YN AND PCC_USE.GROUP_CD_ID = 'USE_WT' --사용여부(사용, 사용안함)
		LEFT OUTER JOIN PLT_COMM_CD PCC_MOD ON PCC_MOD.CUSTCO_ID = #{CUSTCO_ID}::INT AND PCC_MOD.CD_ID = PEA.MDFCN_PSBLTY_YN AND PCC_MOD.GROUP_CD_ID = 'MODI_WT' --수정가능여부(가능, 불가능)
		LEFT OUTER JOIN PLT_COMM_CD PCC_ESNTL ON PCC_ESNTL.CUSTCO_ID = #{CUSTCO_ID}::INT AND PCC_ESNTL.CD_ID = PEA.ESNTL_YN AND PCC_ESNTL.GROUP_CD_ID = 'REQR_WT' --필수여부(필수, 옵션)
		LEFT OUTER JOIN PLT_COMM_CD PCC_SIC ON PCC_SIC.CUSTCO_ID = #{CUSTCO_ID}::INT AND PCC_SIC.CD_ID = PEA.SIC_ID AND PCC_SIC.GROUP_CD_ID = 'SIC' --표준산업분류
		WHERE 1 = 1
		AND PEA.BSC_PVSN_ATTR_YN = #{BSC_PVSN_ATTR_YN}
		AND PEA.SE = #{SE}
		AND PEA.CPI_ID = #{CPI_ID}::INTEGER
		AND PEA.DEL_YN = 'N'
	</select>

	<!--  고객 개별 추가 -->
	<insert id="addIndiCustAltmntMng"  parameterType="java.util.HashMap">
		INSERT INTO PLT_OBD_CPI_CUST_DTL(
					/* addIndiCustAltmntMng 고객 개별 추가 */
					 ATTR_ID
					,CUST_ID
					,ATTR_VL
					,CPI_ID
		) VALUES
			<foreach collection="CUST_LIST" item="ITEM" close="" separator=",">
				<if test='ITEM.ATTR_VL != null and ITEM.ATTR_VL != ""'>
				(
					 #{ITEM.ATTR_ID}::INTEGER
					,#{CUST_ID}::INTEGER
					,#{ITEM.ATTR_VL}
					,#{CPI_ID}::INTEGER
				)
				</if>
			</foreach>

	</insert>

	<!-- 고객이 있는지 체크 -->
	<select id="chkCustAltmntMng" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT 	 /* chkCustAltmntMng 고객이 있는지 체크 */
				 COALESCE(A.CUST_ID,-1) AS CUST_ID
				,COALESCE((SELECT X.CUST_ID FROM PLT_OBD_CPI_CUST X WHERE X.CUST_ID = A.CUST_ID AND X.CPI_ID = #{CPI_ID}::INTEGER),-1) AS OBD_CUST_ID
		FROM PLT_CUST A
		WHERE A.CUST_PHN_NO = #{CUST_PHN_NO}
	</select>

	<!--  개별 배분처리 -->
	<insert id="addCustAltmntMng"  parameterType="java.util.HashMap">
		INSERT INTO PLT_OBD_CPI_CUST_ALTMNT(
				/* addCustAltmntMng 개별 배분처리 */
				 CUSL_ID
				,CUST_ID
				,ALTMNT_DT
				,CPI_ID
		) VALUES (
				 #{AFTR_CUSL_ID}::INTEGER
				,#{CUST_ID}::INTEGER
				,TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
				,#{CPI_ID}::INTEGER
		)
	</insert>
	
	<select id="cpiStatHistList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT  /*캠페인 이력 목록 (kr.co.hkcloud.palette3.phone.campaign.dao.PhoneCampaignAltmntMngMapper.cpiStatHistList)*/
			*
			, ROW_NUMBER() OVER(PARTITION BY A.CPI_ID, A.CUSL_ID, A.CUST_ID ORDER BY A.CPI_ID, A.CUSL_ID, A.CUST_ID, A.PHN_CUTT_ID DESC) AS ROW_NUMBER
		FROM (
			SELECT
				POC.CUSTCO_ID
				, NULL::BIGINT AS PHN_CUTT_ID
				, POC.CPI_ID
				, POC.CPI_NM
				, POC.CPI_BGNG_DT
				, POC.CPI_END_DT
				, POCC.CUSL_ID
				, (SELECT USER_NM FROM PLT_USER WHERE USER_ID = POCC.CUSL_ID) AS CUSL_NM
				, POCCA.CUST_ID
				, PC.CUST_NM
				, PC.CUST_PHN_NO
				, (SELECT MAX(REG_DT) FROM PLT_PHN_CUTT WHERE CPI_ID = POCCA.CPI_ID AND CUSL_ID = POCCA.CUSL_ID AND CUST_ID = POCCA.CUST_ID) AS MAX_REG_DT
				, (SELECT COUNT(PHN_CUTT_ID) FROM PLT_PHN_CUTT WHERE CPI_ID = POCCA.CPI_ID AND CUSL_ID = POCCA.CUSL_ID AND CUST_ID = POCCA.CUST_ID) AS CALL_TRY_CNT
				, (SELECT PLAN_CYCL FROM PLT_OBD_CPI WHERE CPI_ID = POCCA.CPI_ID) AS CALL_TRY_LMT
				, ''::VARCHAR(14) AS CUTT_BGNG_DT
				, ''::VARCHAR(14) AS CUTT_END_DT
				, NULL::BIGINT AS CUSL_RS_ID
				, COALESCE((SELECT DTL.ATTR_VL FROM PLT_EXPSN_ATTR ATTR
					LEFT OUTER JOIN PLT_PHN_CUTT_DTL_EXPSN DTL ON DTL.ATTR_ID = ATTR.ATTR_ID
					WHERE ATTR.CUSTCO_ID = POC.CUSTCO_ID
					AND ATTR.BSC_PVSN_ATTR_YN = 'N' AND ATTR.SE = 'CONSEL' AND ATTR.EXPSN_ATTR_COL_ID = 'CUSL_RS' --상담 결과
					AND DTL.PHN_CUTT_ID = (SELECT MAX(PHN_CUTT_ID) FROM PLT_PHN_CUTT WHERE CPI_ID = POCCA.CPI_ID AND CUSL_ID = POCCA.CUSL_ID AND CUST_ID = POCCA.CUST_ID)
				), 'PROCESSING') AS CUSL_RS_CD
				, COALESCE((SELECT COMM.CD_NM FROM PLT_EXPSN_ATTR ATTR
					LEFT OUTER JOIN PLT_PHN_CUTT_DTL_EXPSN DTL ON DTL.ATTR_ID = ATTR.ATTR_ID
					LEFT OUTER JOIN PLT_COMM_CD COMM ON COMM.CUSTCO_ID = #{CUSTCO_ID}::INT AND COMM.CD_ID = DTL.ATTR_VL AND COMM.GROUP_CD_ID = 'CUSL_RS' --상담 결과
					WHERE ATTR.CUSTCO_ID = POC.CUSTCO_ID
					AND ATTR.BSC_PVSN_ATTR_YN = 'N' AND ATTR.SE = 'CONSEL' AND ATTR.EXPSN_ATTR_COL_ID = 'CUSL_RS' --상담 결과
					AND DTL.PHN_CUTT_ID = (SELECT MAX(PHN_CUTT_ID) FROM PLT_PHN_CUTT WHERE CPI_ID = POCCA.CPI_ID AND CUSL_ID = POCCA.CUSL_ID AND CUST_ID = POCCA.CUST_ID)
				), '처리중') AS CUSL_RS_NM
				, NULL::BIGINT AS CAMP_RS_ID
				, ''::VARCHAR(500) AS CAMP_RS_CD
				, ''::VARCHAR(200) AS CAMP_RS_NM
				, ''::TEXT AS CUTT_CN
				, ROW_NUMBER() OVER(PARTITION BY POC.CPI_ID, POCC.CUSL_ID, POCCA.CUST_ID ORDER BY POC.CPI_ID, POCC.CUSL_ID, POCCA.CUST_ID) AS RNUM
			FROM PLT_OBD_CPI_CUST_ALTMNT POCCA
			INNER JOIN PLT_OBD_CPI_CUSL POCC ON POCC.CPI_ID = POCCA.CPI_ID AND POCC.CUSL_ID = POCCA.CUSL_ID
			INNER JOIN PLT_OBD_CPI POC ON POC.CPI_ID = POCC.CPI_ID AND POC.PRGRS_STTS_CD = 'ONGONG' --진행중
			INNER JOIN PLT_CUST PC ON PC.CUST_ID = POCCA.CUST_ID
			WHERE POC.CUSTCO_ID = #{CUSTCO_ID}::INT
			<if test='CUST_ID != null and CUST_ID != ""'>AND POCCA.CUST_ID = #{CUST_ID}::INT</if>
			<if test='CUSL_ID != null and CUSL_ID != ""'>AND POCC.CUSL_ID = #{CUSL_ID}::INT</if>
			<if test='CPI_ID != null and CPI_ID != ""'>AND POCCA.CPI_ID = #{CPI_ID}::INT</if>
			UNION ALL
			SELECT
				PPC.CUSTCO_ID
				, PPC.PHN_CUTT_ID
				, PPC.CPI_ID
				, ''::VARCHAR(200) AS CPI_NM
				, ''::VARCHAR(14) AS CPI_BGNG_DT
				, ''::VARCHAR(14) AS CPI_END_DT
				, PPC.CUSL_ID
				, (SELECT USER_NM FROM PLT_USER WHERE USER_ID = PPC.CUSL_ID) AS CUSL_NM
				, PPC.CUST_ID
				, (SELECT CUST_NM FROM PLT_CUST WHERE CUST_ID = PPC.CUST_ID) AS CUST_NM
				, ''::VARCHAR(60) AS CUST_PHN_NO
				, ''::VARCHAR(14) AS MAX_REG_DT
				, (SELECT COUNT(PHN_CUTT_ID) FROM PLT_PHN_CUTT WHERE CPI_ID = PPC.CPI_ID AND CUSL_ID = PPC.CUSL_ID AND CUST_ID = PPC.CUST_ID) AS CALL_TRY_CNT
				, (SELECT PLAN_CYCL FROM PLT_OBD_CPI WHERE CPI_ID = PPC.CPI_ID) AS CALL_TRY_LMT
				, PPC.CUTT_BGNG_DT
				, PPC.CUTT_END_DT
				, PEA.ATTR_ID AS CUSL_RS_ID
				, COALESCE((SELECT PPCDE.ATTR_VL FROM PLT_PHN_CUTT_DTL_EXPSN PPCDE WHERE PPCDE.PHN_CUTT_ID = PPC.PHN_CUTT_ID AND PPCDE.ATTR_ID = PEA.ATTR_ID), 'PROCESSING') AS CUSL_RS_CD
				, (SELECT CD_NM FROM PLT_PHN_CUTT_DTL_EXPSN PPCDE INNER JOIN PLT_COMM_CD PCC ON PCC.CUSTCO_ID = #{CUSTCO_ID}::INT AND PCC.CD_ID = COALESCE(PPCDE.ATTR_VL, 'PROCESSING') AND PCC.GROUP_CD_ID = 'CUSL_RS' WHERE PPCDE.PHN_CUTT_ID = PPC.PHN_CUTT_ID AND PPCDE.ATTR_ID = PEA.ATTR_ID) AS CUSL_RS_NM
				, PEA2.ATTR_ID AS CAMP_RS_ID
				, (SELECT PPCDE.ATTR_VL FROM PLT_PHN_CUTT_DTL_EXPSN PPCDE WHERE PPCDE.PHN_CUTT_ID = PPC.PHN_CUTT_ID AND PPCDE.ATTR_ID = PEA2.ATTR_ID) AS CAMP_RS_ID
				, (SELECT CD_NM FROM PLT_PHN_CUTT_DTL_EXPSN PPCDE INNER JOIN PLT_COMM_CD PCC ON PCC.CUSTCO_ID = #{CUSTCO_ID}::INT AND PCC.CD_ID = PPCDE.ATTR_VL AND PCC.GROUP_CD_ID = 'CAMP_RS' WHERE PPCDE.PHN_CUTT_ID = PPC.PHN_CUTT_ID AND PPCDE.ATTR_ID = PEA2.ATTR_ID) AS CAMP_RS_CD
<!--				, (SELECT CUTT_CN FROM PLT_PHN_CUTT_DTL_CN PPCD INNER JOIN PLT_PHN_CUTT_DTL_EXPSN PPCDE ON PPCDE.PHN_CUTT_ID = PPCD.PHN_CUTT_ID AND PPCDE.ATTR_ID = PPCD.ATTR_ID WHERE PPCDE.PHN_CUTT_ID = PPC.PHN_CUTT_ID AND PPCDE.ATTR_ID = PEA3.ATTR_ID) AS CUTT_CN-->
				, (SELECT CASE WHEN COALESCE(PEA.INDI_INFO_ENCPT_YN, 'N') = 'Y' THEN CUSTCO.GEN_DECRYPT(PPCDC.CUTT_CN, #{PP_KEY_PP}, #{PP_ALG_PP}) ELSE PPCDC.CUTT_CN END FROM PLT_PHN_CUTT_DTL_CN PPCDC INNER JOIN PLT_PHN_CUTT_DTL_EXPSN PPCDE ON PPCDE.PHN_CUTT_ID = PPCDC.PHN_CUTT_ID AND PPCDE.ATTR_ID = PPCDC.ATTR_ID INNER JOIN PLT_EXPSN_ATTR PEA ON PEA.CUSTCO_ID = PPC.CUSTCO_ID AND PEA.ATTR_ID = PPCDC.ATTR_ID WHERE PEA.BSC_PVSN_ATTR_YN = 'N' AND PEA.SE = 'CONSEL' AND PEA.EXPSN_ATTR_COL_ID = 'CUSL_CN' AND PPCDE.PHN_CUTT_ID = PPC.PHN_CUTT_ID) AS CUTT_CN
				, ROW_NUMBER() OVER(PARTITION BY PPC.CPI_ID, PPC.CUSL_ID, PPC.CUST_ID ORDER BY PPC.CPI_ID, PPC.CUSL_ID, PPC.CUST_ID, PPC.PHN_CUTT_ID) AS RNUM
			FROM PLT_PHN_CUTT PPC
			LEFT OUTER JOIN PLT_EXPSN_ATTR PEA ON PEA.CUSTCO_ID = PPC.CUSTCO_ID AND PEA.BSC_PVSN_ATTR_YN = 'N' AND PEA.SE = 'CONSEL' AND PEA.EXPSN_ATTR_COL_ID = 'CUSL_RS' --상담 결과
			LEFT OUTER JOIN PLT_EXPSN_ATTR PEA2 ON PEA2.CUSTCO_ID = PPC.CUSTCO_ID AND PEA2.BSC_PVSN_ATTR_YN = 'N' AND PEA2.SE = 'CONSEL' AND PEA2.EXPSN_ATTR_COL_ID = 'CAMP_RS' --처리 결과
			LEFT OUTER JOIN PLT_EXPSN_ATTR PEA3 ON PEA3.CUSTCO_ID = PPC.CUSTCO_ID AND PEA3.BSC_PVSN_ATTR_YN = 'N' AND PEA3.SE = 'CONSEL' AND PEA3.EXPSN_ATTR_COL_ID = 'CUSL_CN' --상담내용
			WHERE PPC.CUSTCO_ID = #{CUSTCO_ID}::INT
			<if test='CUST_ID != null and CUST_ID != ""'>
			AND EXISTS (SELECT 1 FROM PLT_OBD_CPI_CUST_ALTMNT A
						INNER JOIN PLT_OBD_CPI B ON B.CPI_ID = A.CPI_ID
						WHERE A.CPI_ID = PPC.CPI_ID AND A.CUSL_ID = PPC.CUSL_ID AND A.CUST_ID = PPC.CUST_ID
						AND A.CUST_ID = #{CUST_ID}::INT
						)
			</if>
			<if test='CUSL_ID != null and CUSL_ID != ""'>
			AND PPC.CUSL_ID = #{CUSL_ID}::INT
			AND EXISTS (SELECT 1 FROM PLT_OBD_CPI_CUST_ALTMNT A INNER JOIN PLT_OBD_CPI B ON B.CPI_ID = A.CPI_ID AND B.PRGRS_STTS_CD = 'ONGONG' WHERE A.CPI_ID = PPC.CPI_ID AND A.CUSL_ID = PPC.CUSL_ID AND A.CUST_ID = PPC.CUST_ID)
			</if>
			<if test='CPI_ID != null and CPI_ID != ""'>AND PPC.CPI_ID = #{CPI_ID}::INT</if>
			<if test='(SCH_CALL_ST_DT != null and SCH_CALL_ST_DT!= "") or (SCH_CALL_END_DT != null and SCH_CALL_END_DT!= "")'>
				<if test='SCH_CALL_ST_DT != null and SCH_CALL_ST_DT!= ""'>
				AND PPC.CUTT_BGNG_DT <![CDATA[>=]]> CONCAT(#{SCH_CALL_ST_DT}, '000000')::VARCHAR(14)
				</if>
				<if test='SCH_CALL_END_DT != null and SCH_CALL_END_DT!= ""'>
				AND PPC.CUTT_BGNG_DT <![CDATA[<=]]> CONCAT(#{SCH_CALL_END_DT}, '235959')::VARCHAR(14)
				</if>
			</if>
		) A WHERE 1 = 1
		<if test='CALL_TRY_CNT != null and CALL_TRY_CNT != "" and CALL_TRY_CNT > "0"'>
		AND A.CALL_TRY_CNT <choose><when test='UPDOWN == "UP"'><![CDATA[>=]]></when><otherwise><![CDATA[<=]]></otherwise></choose> #{CALL_TRY_CNT}::INT
		</if>
		<if test='CAMP_RS_CD != null and CAMP_RS_CD != ""'>
		AND EXISTS (SELECT 1 FROM PLT_PHN_CUTT CUTT
						INNER JOIN PLT_EXPSN_ATTR ATTR ON ATTR.CUSTCO_ID = CUTT.CUSTCO_ID AND ATTR.BSC_PVSN_ATTR_YN = 'N' AND ATTR.SE = 'CONSEL' AND ATTR.EXPSN_ATTR_COL_ID = 'CAMP_RS'
						INNER JOIN PLT_PHN_CUTT_DTL_EXPSN DTL ON DTL.PHN_CUTT_ID = CUTT.PHN_CUTT_ID AND DTL.ATTR_ID = ATTR.ATTR_ID
						WHERE A.CUSTCO_ID = CUTT.CUSTCO_ID
						AND A.CPI_ID = CUTT.CPI_ID
						AND A.CUSL_ID = CUTT.CUSL_ID
						AND A.CUST_ID = CUTT.CUST_ID
						AND DTL.ATTR_VL = #{CAMP_RS_CD}
					)
		</if>
		<if test='CUSL_RS != null and CUSL_RS != ""'>
		AND A.CUSL_RS_CD = #{CUSL_RS}
		</if>
	</select>

	<select id="cuslCampaignMonitor" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT  /*상담원별 캠페인 상태 조회 (kr.co.hkcloud.palette3.phone.campaign.dao.PhoneCampaignAltmntMngMapper.cuslCampaignMonitor)*/
			COUNT(*) AS TARGET_CNT
			, COALESCE(SUM(A.COMPLETED_CNT), 0) AS COMPLETED_CNT
			, COALESCE(COUNT(*) - SUM(A.COMPLETED_CNT), 0) AS NO_COMPLETED_CNT
			, COALESCE(ROUND((SUM(A.COMPLETED_CNT)::DECIMAL / COUNT(*)::DECIMAL) * 100, 2), 0) AS COMPLETED_RATE
		FROM (
			SELECT
				POC.CUSTCO_ID, POCCA.CPI_ID, POCCA.CUSL_ID, POCCA.CUST_ID
				, COALESCE((SELECT CASE WHEN DTL.ATTR_VL = 'COMPLETED' THEN 1 ELSE 0 END FROM PLT_EXPSN_ATTR ATTR
					LEFT OUTER JOIN PLT_PHN_CUTT_DTL_EXPSN DTL ON DTL.ATTR_ID = ATTR.ATTR_ID
					WHERE ATTR.CUSTCO_ID = POC.CUSTCO_ID
					AND ATTR.BSC_PVSN_ATTR_YN = 'N' AND ATTR.SE = 'CONSEL' AND ATTR.EXPSN_ATTR_COL_ID = 'CUSL_RS' --상담 결과
					AND DTL.PHN_CUTT_ID = (SELECT MAX(PHN_CUTT_ID) FROM PLT_PHN_CUTT WHERE CPI_ID = POCCA.CPI_ID AND CUSL_ID = POCCA.CUSL_ID AND CUST_ID = POCCA.CUST_ID)
				), 0) AS COMPLETED_CNT
			FROM PLT_OBD_CPI_CUST_ALTMNT POCCA
			INNER JOIN PLT_OBD_CPI_CUSL POCC ON POCC.CPI_ID = POCCA.CPI_ID AND POCC.CUSL_ID = POCCA.CUSL_ID
			INNER JOIN PLT_OBD_CPI POC ON POC.CPI_ID = POCC.CPI_ID AND POC.PRGRS_STTS_CD = 'ONGONG' --진행중
			WHERE POC.CUSTCO_ID = #{CUSTCO_ID}::INT
			AND POCCA.CUSL_ID = #{USER_ID}::INT
		) A
	</select>

	<select id="cuslCpiDtlMonitor" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT  /*상담원별 처리결과별 상태 조회 (kr.co.hkcloud.palette3.phone.campaign.dao.PhoneCampaignAltmntMngMapper.cuslCpiDtlMonitor)*/
			PCC.CD_ID
			, PCC.CD_NM
			, (SELECT COUNT(PPC.PHN_CUTT_ID) FROM PLT_PHN_CUTT PPC
				LEFT OUTER JOIN PLT_EXPSN_ATTR PEA ON PEA.CUSTCO_ID = PPC.CUSTCO_ID AND PEA.BSC_PVSN_ATTR_YN = 'N' AND PEA.SE = 'CONSEL' AND PEA.EXPSN_ATTR_COL_ID = 'CAMP_RS'
				LEFT OUTER JOIN PLT_PHN_CUTT_DTL_EXPSN PPCDE ON PPCDE.PHN_CUTT_ID = PPC.PHN_CUTT_ID AND PPCDE.ATTR_ID = PEA.ATTR_ID
				WHERE PPC.CUSTCO_ID = #{CUSTCO_ID}::INT
				AND PPC.CUSL_ID = #{USER_ID}::INT
				AND PPCDE.ATTR_VL = PCC.CD_ID
				AND EXISTS (SELECT 1 FROM PLT_OBD_CPI WHERE CPI_ID = PPC.CPI_ID AND PRGRS_STTS_CD = 'ONGONG') --진행중
			) AS CNT
		FROM PLT_COMM_CD PCC
		WHERE PCC.CUSTCO_ID = #{CUSTCO_ID}::INT AND PCC.GROUP_CD_ID = 'CAMP_RS' ORDER BY PCC.SORT_ORD
	</select>
</mapper>