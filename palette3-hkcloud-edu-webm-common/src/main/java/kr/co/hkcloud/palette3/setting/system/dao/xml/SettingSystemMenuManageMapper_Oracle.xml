<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.hkcloud.palette3.setting.system.dao.SettingSystemMenuManageMapper">
    <!-- <mapper namespace="com.hcteletalk.teletalk.mng.bas.bas04.dao.TwbBas04Mapper"> -->
    <!-- 기존파일 <mapper namespace="com.hcteletalk.teletalk.mng.bas.bas04.dao.Bas04Mapper"> -->

    <!-- ######################################################################### -->
    <!-- 선택된 그룹의 메뉴를 조회한다. -->
    <select id="selectRtnMenuTree" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        <![CDATA[
	/* selectRtnMenuTree - 선택된 그룹의 메뉴를 조회한다. */
    WITH RECURSIVE MENU_TREE AS (
		SELECT MENU_ID, UP_MENU_ID, MENU_NM, MENU_NM_ENG, VIEW_TRGT, MENU_SE_CD_LVL, USE_YN, DEL_YN,LPAD(CAST(SORT_ORD AS VARCHAR),5,'0') AS SORT
		FROM PLT_MENU
		WHERE UP_MENU_ID IS NULL
		AND DEL_YN = 'N'
		UNION ALL
		SELECT B.MENU_ID, B.UP_MENU_ID, B.MENU_NM, B.MENU_NM_ENG, B.VIEW_TRGT, B.MENU_SE_CD_LVL, B.USE_YN, B.DEL_YN, C.SORT || ' > ' || LPAD(CAST(B.SORT_ORD AS VARCHAR),5,'0') AS SORT
		FROM PLT_MENU B
		INNER JOIN MENU_TREE C ON C.MENU_ID = B.UP_MENU_ID
		WHERE B.DEL_YN = 'N'
	)
	SELECT MT.MENU_ID
		, MT.UP_MENU_ID
		, MT.MENU_NM
		, MT.MENU_NM_ENG
		, MT.VIEW_TRGT
		, MT.MENU_SE_CD_LVL
		, MT.USE_YN
		, MT.DEL_YN
		, MT.SORT
	FROM MENU_TREE MT
	WHERE 
	 ]]>
        MT.DEL_YN = 'N'
        <if test='MENU_GROUP != "" and MENU_GROUP != null and MENU_GROUP != undefined'>
            AND (MT.MENU_ID = #{MENU_GROUP} OR MT.UP_MENU_ID = #{MENU_GROUP} OR MT.UP_MENU_ID IN (SELECT PM.MENU_ID
            FROM PLT_MENU PM
            WHERE PM.UP_MENU_ID = #{MENU_GROUP}))
        </if>
        <if test='VIEW_TRGT != "" and VIEW_TRGT != null and VIEW_TRGT != undefined'>
            AND MT.VIEW_TRGT = #{VIEW_TRGT}
        </if>
        <if test='USE_YN != "" and USE_YN != null and USE_YN != undefined'>
            AND MT.USE_YN = #{USE_YN}
        </if>
        ORDER BY MT.VIEW_TRGT,MT.SORT
    </select>

    <!-- 메뉴 그룹을 가지고 온다. -->
    <select id="selectRtnMenuGroup" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT MENU_ID     AS CD
             , MENU_NM     AS CD_NM
             , MENU_NM_ENG AS CD_NM_ENG
        FROM PLT_MENU
        WHERE UP_MENU_ID IS NULL
          AND DEL_YN = 'N'
          AND VIEW_TRGT = 'MAIN'
        ORDER BY SORT_ORD
    </select>

    <!-- 메뉴 등록 전 같은 아이디값이 있는지 체크한다. -->
    <select id="selectDupMenuID" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT COUNT(LOWRNK_MENU_ID) AS MENU_CNT
             , MENU_NM               AS MENU_NM
        FROM PLT_MENU A
        WHERE LOWRNK_MENU_ID = #{LOWRNK_MENU_ID}
        GROUP BY MENU_NM
    </select>

    <!-- PLT_MENU(메뉴관리) 테이블 수정 -->
    <update id="updateRtnMenu" parameterType="java.util.HashMap">
        UPDATE PLT_MENU
        SET MENU_NM       = #{MENU_NM}
          , MENU_EXPLN    = #{MENU_EXPLN}
          , ICON_CLASS_NM = #{ICON_CLASS_NM}
          , PATH_NM       = #{PATH_NM}
          , VIEW_TRGT     = #{VIEW_TRGT}
          , USE_YN        = #{USE_YN}
          , SORT_ORD      = #{SORT_ORD}
          , ACT_NM         = #{ACT_NM}         -- 액션명
          , LAYOUT_ID = <choose>
                            <when test="LAYOUT_ID == null or LAYOUT_ID ==''">NULL</when>
                            <otherwise>#{LAYOUT_ID}</otherwise>
                        </choose>
          , MDFR_ID = #{USER_ID}:: INTEGER
          , MDFCN_DT = TO_CHAR(SYSDATE
          , 'YYYYMMDDHH24MISS')
        WHERE MENU_ID = #{MENU_ID}:: INTEGER
    </update>

    <update id="updateRtnMenuYN" parameterType="java.util.HashMap">
        UPDATE PLT_MENU
        SET USE_YN = #{USE_YN}
        , PROC_ID = #{PROC_ID}
        , IT_PROCESSING = SYSDATE
        <if test="AMDR_DEPT_CD 	!='' and AMDR_DEPT_CD 	!= null">, AMDR_DEPT_CD = #{AMDR_DEPT_CD} -- 수정자부서코드</if>
        <if test="AMDR_ID 		!='' and AMDR_ID 		!= null">, AMDR_ID = #{AMDR_ID} -- 수정자ID</if>
        <if test="UPD_DTTM 		!='' and UPD_DTTM 		!= null">
            <choose>
                <when test="UPD_DTTM == 'SYSDATE'">
                    , UPD_DTTM = SYSDATE /* 수정일시 */
                </when>
                <otherwise>
                    , UPD_DTTM = #{UPD_DTTM} /* 수정일시 */
                </otherwise>
            </choose>
        </if>
        WHERE MENU_ID IN (SELECT AA.MENU_ID
        FROM ( SELECT A.MENU_ID AS MENU_ID
        , A.LOWRNK_MENU_ID AS C_NODE_NO
        , A.SPST_MENU_ID AS P_NODE_NO
        , A.SORT_ORD AS SORT_ORD
        FROM PLT_MENU A
        , (SELECT MENU_ID AS MENU_ID
        , LOWRNK_MENU_ID AS C_NODE_NO
        , SPST_MENU_ID AS P_NODE_NO
        , SORT_ORD AS SORT_ORD
        FROM PLT_MENU
        WHERE LOWRNK_MENU_ID = #{LOWRNK_MENU_ID}) B
        START WITH B.MENU_ID= A.MENU_ID
        CONNECT BY A.SPST_MENU_ID = PRIOR A.LOWRNK_MENU_ID
        ORDER SIBLINGS BY SORT_ORD
        ) AA
        GROUP BY AA.MENU_ID, AA.C_NODE_NO, AA.P_NODE_NO
        )
    </update>

    <!-- 메뉴 삭제 -->
    <delete id="deleteRtnMenuBase22" parameterType="java.util.HashMap">

        DELETE
        FROM PLT_AUTH_PRG
        WHERE MENU_ID IN (SELECT A.MENU_ID
                          FROM PLT_MENU A
                             , (SELECT MENU_DIV_CD
                                     , LOWRNK_MENU_ID
                                FROM PLT_MENU R
                                WHERE CASE
                                          WHEN #{MENU_GROUP} = '*'
                                              THEN SPST_MENU_ID
                                          ELSE LOWRNK_MENU_ID
                                          END = #{LOWRNK_MENU_ID}) B
                          WHERE CAST(A.MENU_DIV_CD AS INTEGER) >= CAST(B.MENU_DIV_CD AS INTEGER)
                            AND A.LOWRNK_MENU_ID LIKE B.LOWRNK_MENU_ID || '%')

    </delete>

    <delete id="deleteRtnMenuBase20" parameterType="java.util.HashMap">

        DELETE
        FROM PLT_MENU
        WHERE MENU_ID IN (SELECT *
                          FROM (SELECT A.MENU_ID
                                FROM PLT_MENU A
                                   , (SELECT MENU_DIV_CD
                                           , LOWRNK_MENU_ID
                                      FROM PLT_MENU R
                                      WHERE CASE
                                                WHEN #{MENU_GROUP} = '*'
                                                    THEN SPST_MENU_ID
                                                ELSE LOWRNK_MENU_ID
                                                END = #{LOWRNK_MENU_ID}) B
                                WHERE CAST(A.MENU_DIV_CD AS INTEGER) >= CAST(B.MENU_DIV_CD AS INTEGER)
                                  AND A.LOWRNK_MENU_ID LIKE B.LOWRNK_MENU_ID || '%') AA)

    </delete>

    <!-- 메뉴 삭제 -->
    <update id="deleteRtnMenu" parameterType="java.util.HashMap">
        UPDATE PLT_MENU
        SET DEL_YN = 'Y'
        , MDFR_ID = #{USER_ID}
        , MDFCN_DT = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
        WHERE MENU_ID = #{MENU_ID}
        <choose>
            <when test='MENU_SE_CD_LVL=="2"'>
                OR MENU_ID IN (select MENU_ID
                from PLT_MENU
                where UP_MENU_ID = #{MENU_ID})
            </when>
            <when test='MENU_SE_CD_LVL=="1"'>
                OR MENU_ID IN (select MENU_ID
                from PLT_MENU
                where UP_MENU_ID = #{MENU_ID})
                OR MENU_ID IN (select MENU_ID
                from plt_menu
                where UP_MENU_ID IN(select MENU_ID
                from PLT_MENU
                where UP_MENU_ID = #{MENU_ID}))
            </when>
        </choose>
    </update>

    <select id="selectRtnBtnIdByMenuId" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT BTN_ID
        FROM PLT_BTN
        WHERE 1 = 1
          AND MENU_ID = #{MENU_ID}
    </select>

    <delete id="deleteRtnBtnByMeneId" parameterType="java.util.HashMap">
        DELETE
        FROM PLT_BTN
        WHERE 1 = 1
          AND BTN_ID = #{BTN_ID}
    </delete>

    <select id="selectRtnAuthBtnIdByMenuId" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT ATRT_GROUP_ID
             , MENU_ID
             , BTN_ID
        FROM PLT_BTN_AUTH
        WHERE 1 = 1
          AND MENU_ID = #{MENU_ID}
    </select>

    <delete id="deleteRtnAuthBtnByMeneId" parameterType="java.util.HashMap">
        DELETE
        FROM PLT_BTN_AUTH
        WHERE 1 = 1
          AND ATRT_GROUP_ID = #{ATRT_GROUP_ID}
          AND MENU_ID = #{MENU_ID}
          AND BTN_ID = #{BTN_ID}
    </delete>

    <!-- <delete id="deleteRtnAuthBTN" parameterType="java.util.HashMap">
    DELETE
      FROM PLT_BTN_AUTH
     WHERE 1 = 1
       AND (ATRT_GROUP_ID, MENU_ID, BTN_ID) IN (SELECT ATRT_GROUP_ID, MENU_ID, BTN_ID FROM
                                               (
                                                SELECT ATRT_GROUP_ID, MENU_ID, BTN_ID
                                                  FROM PLT_BTN_AUTH
                                                 WHERE 1 = 1
                                                   AND MENU_ID = #{LOWRNK_MENU_ID}
                                                ) AA
                                                )
    </delete> -->

    <!-- 프로그램경로의 게시판연결 게시판 종류를 호출한다. -->
    <select id="selectBoardPath" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        <![CDATA[
 SELECT A.UNITY_BLBD_ID
      , A.UNITY_BLBD_NM
      , A.UNITY_BLBD_XPLN
      , A.BLBD_TYPE_CD
      , A.BLBD_DIV_CD
      , B.CD_NM AS BLBD_TYPE_NM
      , (SELECT COUNT(CD_TYPE) FROM PLT_COMN_CD WHERE GROUP_CD = 'TWB154' AND CD <> '****' AND USE_YN = 'Y' AND CD_TYPE = A.BLBD_DIV_CD) AS DETAIL_CNT 
   FROM PLT_BLBD_MNG A
      , PLT_COMN_CD B
]]>
        WHERE <!-- A.CUSTCO_ID = #{CUSTCO_ID} -->
        AND B.CUSTCO_ID = #{CUSTCO_ID}
        AND A.BLBD_TYPE_CD = B.CD
        AND B.GROUP_CD = 'TWB153'
        AND B.USE_YN = 'Y'
        AND A.USE_YN = 'Y'
        ORDER BY A.BLBD_TYPE_CD
    </select>

    <!-- 프로그램경로의 게시판연결 게시판 종류를 호출한다. -->
    <select id="selectBoardPathDetail" parameterType="java.util.HashMap" resultType="java.util.HashMap">
<![CDATA[
        SELECT CD
             , CD_NM
             , CD_TYPE
        FROM PLT_COMN_CD
        WHERE GROUP_CD = 'TWB154'
          AND CD <> '****'
          AND USE_YN = 'Y'
          AND CD_TYPE = #{BLBD_DIV_CD}
        ]]>
</select>

    <!-- 메뉴URL경로로 메뉴ID를 조회한다. -->
    <select id="selectMenuIdByMenuPath" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT MENU_ID
             , SPST_MENU_ID
             , LOWRNK_MENU_ID
             , MENU_NM
             , PGM_PARM
             , VIEW_TRGT
             , PUP_WIDTH_SIZE
             , PUP_HGHT_SIZE
        FROM PLT_MENU
        WHERE PATH_NM = #{PATH_NM}
    </select>

    <!-- PLT_MENU(메뉴관리) 테이블 데이터 등록 -->
    <insert id="INSERT_PLT_MENU" parameterType="java.util.HashMap">
        INSERT INTO PLT_MENU
        ( MENU_ID /*메뉴ID*/
        <if test="UP_MENU_ID != '' and UP_MENU_ID != null and UP_MENU_ID != undefined">
            , UP_MENU_ID /* 상위메뉴ID */
        </if>
        , MENU_SE_CD_LVL /* 메뉴레벨 */
        , MENU_NM /* 메뉴명 */
        , MENU_EXPLN /* 메뉴설명 */
        , ICON_CLASS_NM /* 아이콘 클래스 */
        , PATH_NM /* 메뉴 경로 */
        , VIEW_TRGT /* 뷰타겟 */
        , USE_YN /* 사용여부(표시여부) */
        , DEL_YN /* 삭제여부 */
        , SORT_ORD /* 정렬순서 */
        , ACT_NM /* ACT_NM */
        , LAYOUT_ID
        , RGTR_ID /* 등록자 */
        , REG_DT /* 등록일시 */
        , MDFR_ID /* 수정자 */
        , MDFCN_DT /* 수정일시 */
        )
        VALUES ( #{MENU_ID}
        <if test="UP_MENU_ID != '' and UP_MENU_ID != null and UP_MENU_ID != undefined">
            , #{UP_MENU_ID}
        </if>
        <choose>
            <when test="UP_MENU_ID != '' and UP_MENU_ID != null and UP_MENU_ID != undefined">
                , (SELECT MENU_SE_CD_LVL
                FROM PLT_MENU
                WHERE MENU_ID = #{UP_MENU_ID}) + 1
            </when>
            <otherwise>
                , 1
            </otherwise>
        </choose>
        , #{MENU_NM}
        , #{MENU_EXPLN}
        , #{ICON_CLASS_NM}
        , #{PATH_NM}
        , #{VIEW_TRGT}
        , #{USE_YN}
        , 'N'
        <choose>
            <when test="UP_MENU_ID != '' and UP_MENU_ID != null and UP_MENU_ID != undefined">
                , (SELECT MAX(SORT_ORD)
                FROM PLT_MENU
                WHERE UP_MENU_ID = #{UP_MENU_ID}) + 1
            </when>
            <otherwise>
                , (SELECT MAX(SORT_ORD)
                FROM PLT_MENU
                WHERE UP_MENU_ID IS NULL) + 1
            </otherwise>
        </choose>
        , #{ACT_NM}
        , <choose>
            <when test="LAYOUT_ID == null or LAYOUT_ID ==''">NULL</when>
            <otherwise>#{LAYOUT_ID}</otherwise>
        </choose>
        , #{USER_ID}
        , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
        , #{USER_ID}
        , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
        )
    </insert>

    <!-- PLT_MENU(메뉴관리) 테이블 수정 -->
    <update id="UPDATE_PLT_MENU" parameterType="java.util.HashMap">
        UPDATE PLT_MENU
        SET IT_PROCESSING = SYSDATE
        , SPST_MENU_ID = #{SPST_MENU_ID} -- 상위메뉴ID
        , LOWRNK_MENU_ID = #{LOWRNK_MENU_ID} -- 하위메뉴ID
        , MENU_NM = #{MENU_NM} -- 메뉴명
        , MENU_XPLN = #{MENU_XPLN} -- 메뉴설명
        , PUP_FILE_NM = #{PUP_FILE_NM} -- 팝업파일명
        , PGM_PARM = #{PGM_PARM} -- 프로그램파라미터
        , VIEW_TRGT = #{VIEW_TRGT} -- 뷰타겟
        , PATH_NM = #{PATH_NM} -- 경로명
        , PUP_WIDTH_SIZE = #{PUP_WIDTH_SIZE} -- 팝업가로사이즈
        , PUP_HGHT_SIZE = #{PUP_HGHT_SIZE} -- 팝업세로사이즈
        , ICON_CLASS_NM = #{ICON_CLASS_NM} -- 아이콘클래스명
        , SELECT_ATRT = #{SELECT_ATRT} -- 조회권한
        , PROC_ATRT = #{PROC_ATRT} -- 처리권한
        , DEL_ATRT = #{DEL_ATRT} -- 삭제권한
        , OUTPUT_XPLN = #{OUTPUT_XPLN} -- 출력권한
        , EXCEL_ATRT = #{EXCEL_ATRT} -- 엑셀권한
        , ADT_ATRT = #{ADT_ATRT} -- 추가권한
        , USE_YN = #{USE_YN} -- 사용여부
        , SORT_ORD = #{SORT_ORD} -- 정렬순서
        , REGR_DEPT_CD = #{REGR_DEPT_CD} -- 등록자부서코드
        , REGR_ID = #{REGR_ID} -- 등록자ID
        , REG_DTTM = #{REG_DTTM} -- 등록일시
        , AMDR_DEPT_CD = #{AMDR_DEPT_CD} -- 수정자부서코드
        , AMDR_ID = #{AMDR_ID} -- 수정자ID
        , UPD_DTTM = #{UPD_DTTM} -- 수정일시
        , PROC_ID = #{PROC_ID} -- 처리자
        , ACT_NM = #{ACT_NM} -- 액션명
        , LAYOUT_ID =
        <choose>
            <when test="LAYOUT_ID == null or LAYOUT_ID ==''">NULL</when>
            <otherwise>#{LAYOUT_ID}</otherwise>
        </choose>
        WHERE 1 = 1
        AND MENU_ID = #{MENU_ID}:: INTEGER
    </update>


    <!-- 메뉴 순서변경 - 변경하는 메뉴 -->
    <update id="changingMenuOrder" parameterType="java.util.HashMap">
        UPDATE PLT_MENU
        SET
        <if test='CHANGE == "+"'>SORT_ORD = (#{SORT_ORD}) + 1</if>
        <if test='CHANGE == "-"'>SORT_ORD = (#{SORT_ORD}) - 1</if>
        , MDFR_ID = #{USER_ID}
        , MDFCN_DT = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
        WHERE
        <choose>
            <when test="UP_MENU_ID != '' and UP_MENU_ID != null and UP_MENU_ID != undefined">
                UP_MENU_ID = #{UP_MENU_ID}
            </when>
            <otherwise>
                UP_MENU_ID IS NULL
            </otherwise>
        </choose>
        AND SORT_ORD = #{SORT_ORD}
        AND MENU_ID = #{MENU_ID}
    </update>
    <!-- 메뉴 순서변경 - 변경받는 메뉴 -->
    <update id="changedMenuOrder" parameterType="java.util.HashMap">
        UPDATE PLT_MENU
        SET SORT_ORD = #{SORT_ORD}
        , MDFR_ID = #{USER_ID}
        , MDFCN_DT = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
        WHERE
        <choose>
            <when test="UP_MENU_ID != '' and UP_MENU_ID != null and UP_MENU_ID != undefined">
                UP_MENU_ID = #{UP_MENU_ID}
            </when>
            <otherwise>
                UP_MENU_ID IS NULL
            </otherwise>
        </choose>
        <if test='CHANGE == "+"'>AND SORT_ORD = (#{SORT_ORD}) + 1</if>
        <if test='CHANGE == "-"'>AND SORT_ORD = (#{SORT_ORD}) - 1</if>
        AND MENU_ID != #{MENU_ID}
    </update>

    <!-- PLT_MENU(메뉴관리) 데이터 삭제 -->
    <delete id="DELETE_PLT_MENU" parameterType="java.util.HashMap">
        DELETE
        FROM PLT_MENU
        WHERE 1 = 1
          AND MENU_ID = #{MENU_ID}
    </delete>

    <!-- PLT_MENU(메뉴관리) 테이블 데이터 조회 -->
    <select id="SELECT_PLT_MENU" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT PM1.MENU_ID /* 메뉴ID */
             , PM1.UP_MENU_ID /* 상위메뉴ID */
             , PM1.MENU_SE_CD_LVL /* 메뉴레벨 */
             , PM1.MENU_NM /* 메뉴명 */
             , PM1.MENU_EXPLN /* 메뉴설명 */
             , PM1.VIEW_TRGT /* 뷰타겟 */
             , PM1.PATH_NM /* 경로명 */
             , PM1.ICON_CLASS_NM /* 아이콘 */
             , PM1.USE_YN /* 표시여부 */
             , PM1.SORT_ORD /* 정렬순서 */
             , PM1.ACT_NM /* 액션명 */
             , PM1.LAYOUT_ID /* 레이아웃_ID */
             , CASE
                   WHEN PM1.UP_MENU_ID IS NULL
                       THEN CASE
                                WHEN PM1.VIEW_TRGT = 'MAIN' OR PM1.VIEW_TRGT = 'DEV' THEN PM3.MAIN_SORT_MAX
                                WHEN PM1.VIEW_TRGT = 'LEFT' THEN PM3.LEFT_SORT_MAX
                                WHEN PM1.VIEW_TRGT = 'RIGHT' THEN PM3.RIGHT_SORT_MAX
                       END
                   ELSE PM2.SORT_MAX
            END AS SORT_MAX
        FROM PLT_MENU PM1
                 LEFT JOIN (SELECT PM.UP_MENU_ID, COUNT(PM.UP_MENU_ID) AS SORT_MAX
                            FROM PLT_MENU PM
                            GROUP BY PM.UP_MENU_ID) PM2 ON PM2.UP_MENU_ID = PM1.UP_MENU_ID
                 LEFT JOIN (SELECT COUNT(PM.MENU_ID) FILTER(WHERE PM.VIEW_TRGT = 'MAIN' OR PM.VIEW_TRGT = 'DEV') AS MAIN_SORT_MAX
					, COUNT(PM.MENU_ID) FILTER(WHERE PM.VIEW_TRGT = 'LEFT') AS LEFT_SORT_MAX
					, COUNT(PM.MENU_ID) FILTER(WHERE PM.VIEW_TRGT = 'RIGHT') AS RIGHT_SORT_MAX
                            FROM PLT_MENU PM
                            WHERE PM.UP_MENU_ID IS NULL) PM3 ON PM1.UP_MENU_ID IS NULL
        WHERE PM1.MENU_ID = #{MENU_ID}
    </select>

    <!-- PLT_MENU(메뉴관리) 테이블 데이터 페이징 조회 -->
    <select id="SELECT_PAGE_PLT_MENU" parameterType="java.util.HashMap" resultType="java.util.HashMap">

        SELECT ROWNUM AS ROW_NUMBER
        , ROW_TBL.*
        FROM (

        SELECT MENU_ID -- 메뉴ID
        , SPST_MENU_ID -- 상위메뉴ID
        , LOWRNK_MENU_ID -- 하위메뉴ID
        , MENU_NM -- 메뉴명
        , MENU_XPLN -- 메뉴설명
        , PUP_FILE_NM -- 팝업파일명
        , PGM_PARM -- 프로그램파라미터
        , VIEW_TRGT -- 뷰타겟
        , PATH_NM -- 경로명
        , PUP_WIDTH_SIZE -- 팝업가로사이즈
        , PUP_HGHT_SIZE -- 팝업세로사이즈
        , ICON_CLASS_NM -- 아이콘클래스명
        , SELECT_ATRT -- 조회권한
        , PROC_ATRT -- 처리권한
        , DEL_ATRT -- 삭제권한
        , OUTPUT_XPLN -- 출력권한
        , EXCEL_ATRT -- 엑셀권한
        , ADT_ATRT -- 추가권한
        , USE_YN -- 사용여부
        , SORT_ORD -- 정렬순서
        , REGR_DEPT_CD -- 등록자부서코드
        , REGR_ID -- 등록자ID
        , TO_CHAR(REG_DTTM, 'YYYY/MM/DD HH24:MI:SS') AS REG_DTTM -- 등록일시
        , AMDR_DEPT_CD -- 수정자부서코드
        , AMDR_ID -- 수정자ID
        , TO_CHAR(UPD_DTTM, 'YYYY/MM/DD HH24:MI:SS') AS UPD_DTTM -- 수정일시
        , PROC_ID -- 처리자
        , TO_CHAR(IT_PROCESSING, 'YYYY/MM/DD HH24:MI:SS') AS IT_PROCESSING -- 전산처리일시
        FROM PLT_MENU
        WHERE 1 = 1
        <if test="MENU_ID 		 !='' and MENU_ID		 != null">AND MENU_ID = #{MENU_ID}</if>
        <if test="SPST_MENU_ID	 !='' and SPST_MENU_ID	 != null">AND SPST_MENU_ID = #{SPST_MENU_ID}</if>
        <if test="LOWRNK_MENU_ID !='' and LOWRNK_MENU_ID != null">AND LOWRNK_MENU_ID = #{LOWRNK_MENU_ID}</if>
        <if test="MENU_NM 		 !='' and MENU_NM		 != null">AND MENU_NM = #{MENU_NM}</if>
        <if test="MENU_XPLN 	 !='' and MENU_XPLN 	 != null">AND MENU_XPLN = #{MENU_XPLN}</if>
        <if test="PUP_FILE_NM 	 !='' and PUP_FILE_NM 	 != null">AND PUP_FILE_NM = #{PUP_FILE_NM}</if>
        <if test="PGM_PARM 		 !='' and PGM_PARM 		 != null">AND PGM_PARM = #{PGM_PARM}</if>
        <if test="VIEW_TRGT 	 !='' and VIEW_TRGT 	 != null">AND VIEW_TRGT = #{VIEW_TRGT}</if>
        <if test="PATH_NM 		 !='' and PATH_NM 		 != null">AND PATH_NM = #{PATH_NM}</if>
        <if test="PUP_WIDTH_SIZE !='' and PUP_WIDTH_SIZE != null">AND PUP_WIDTH_SIZE = #{PUP_WIDTH_SIZE}</if>
        <if test="PUP_HGHT_SIZE  !='' and PUP_HGHT_SIZE	 != null">AND PUP_HGHT_SIZE = #{PUP_HGHT_SIZE}</if>
        <if test="ICON_CLASS_NM  !='' and ICON_CLASS_NM != null">AND ICON_CLASS_NM = #{ICON_CLASS_NM}</if>
        <if test="SELECT_ATRT 	 !='' and SELECT_ATRT	 != null">AND SELECT_ATRT = #{SELECT_ATRT}</if>
        <if test="PROC_ATRT 	 !='' and PROC_ATRT		 != null">AND PROC_ATRT = #{PROC_ATRT}</if>
        <if test="DEL_ATRT 		 !='' and DEL_ATRT		 != null">AND DEL_ATRT = #{DEL_ATRT}</if>
        <if test="OUTPUT_XPLN 	 !='' and OUTPUT_XPLN	 != null">AND OUTPUT_XPLN = #{OUTPUT_XPLN}</if>
        <if test="EXCEL_ATRT 	 !='' and EXCEL_ATRT	 != null">AND EXCEL_ATRT = #{EXCEL_ATRT}</if>
        <if test="ADT_ATRT 		 !='' and ADT_ATRT		 != null">AND ADT_ATRT = #{ADT_ATRT}</if>
        <if test="USE_YN 		 !='' and USE_YN		 != null">AND USE_YN = #{USE_YN}</if>
        <if test="SORT_ORD 		 !='' and SORT_ORD		 != null">AND SORT_ORD = #{SORT_ORD}</if>
        <if test="REGR_DEPT_CD 	 !='' and REGR_DEPT_CD	 != null">AND REGR_DEPT_CD = #{REGR_DEPT_CD}</if>
        <if test="REGR_ID 		 !='' and REGR_ID		 != null">AND REGR_ID = #{REGR_ID}</if>
        <if test="REG_DTTM 		 !='' and REG_DTTM		 != null">AND REG_DTTM = #{REG_DTTM}</if>
        <if test="AMDR_DEPT_CD 	 !='' and AMDR_DEPT_CD	 != null">AND AMDR_DEPT_CD = #{AMDR_DEPT_CD}</if>
        <if test="AMDR_ID 		 !='' and AMDR_ID		 != null">AND AMDR_ID = #{AMDR_ID}</if>
        <if test="UPD_DTTM 		 !='' and UPD_DTTM		 != null">AND UPD_DTTM = #{UPD_DTTM}</if>
        <if test="PROC_ID 		 !='' and PROC_ID		 != null">AND PROC_ID = #{PROC_ID}</if>

        ) ROW_TBL

    </select>
    <select id="selectLkagLayoutList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            PL.LAYOUT_ID
             , PL.LAYOUT_NM
             , PL.LAYOUT_CLSF_ID
             , (SELECT CLSF_NM FROM CUSTCO.PLT_LAYOUT_CLSF WHERE LAYOUT_CLSF_ID = PL.LAYOUT_CLSF_ID) as CLSF_NM
        FROM PLT_LAYOUT PL
        WHERE PL.DEL_YN = 'N'
          AND USE_YN = 'Y'
    </select>
</mapper>