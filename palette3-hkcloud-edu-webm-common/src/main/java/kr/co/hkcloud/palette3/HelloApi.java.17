package kr.co.hkcloud.palette3;

//import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;

import java.io.IOException;
import java.security.KeyManagementException;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import javax.servlet.http.HttpServletRequest;
import kr.co.hkcloud.palette3.exception.teleweb.TelewebApiException;
import kr.co.hkcloud.palette3.sse.app.SseService;
import kr.co.hkcloud.palette3.sse.message.model.SseMessage;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.apache.http.HttpResponse;
import org.json.simple.parser.ParseException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

@Slf4j
@RequiredArgsConstructor
@RestController
public class HelloApi {

    private final SseService sseService;

    @GetMapping("/api/helloenv")
    public Object processRtnAttachFiles() throws TelewebApiException {

        return System.getenv();
    }

    @Autowired
    public RestTemplate restTemplate;
//
//    @GetMapping
//    @HystrixCommand(fallbackMethod = "handleFallback")
//    public String test(){
//        String url = "http://<< CLOUD 서비스아이디 >>/demo/hello/server";
//        return restTemplate.getForObject(url, String.class);
//    }
//    public String handleFallback(){
//        return "Fallback hello service";
//    }

    @RequestMapping(value="/api/sse-api/welcome" , method = {RequestMethod.GET, RequestMethod.POST})
    public Object sseApiWelcome( SseMessage sseMessage, HttpServletRequest request ) throws TelewebApiException, IOException, ParseException, NoSuchAlgorithmException, KeyStoreException, KeyManagementException {

        HttpResponse response;
            String authorization = request.getHeader( "Authorization" );

        log.info( "Authorization : " + authorization);
        sseMessage.setApiKey( authorization );
        response = sseService.sendMessage( sseMessage );

        return response.toString();
    }
}
