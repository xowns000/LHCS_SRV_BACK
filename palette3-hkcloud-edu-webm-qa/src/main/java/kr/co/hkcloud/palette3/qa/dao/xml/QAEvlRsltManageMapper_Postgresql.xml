<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="kr.co.hkcloud.palette3.qa.dao.QAEvlRsltManageMapper">

	<select id="selectQaEvlRsltMngrList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT ROW_NUMBER 
			  ,LGN_ID
			  ,USER_NM
			  ,FULL_PATH
			  ,QA_MNGR_ID
			  ,QA_PLAN_ID
			  ,DEPT_ID
			  ,CONCAT(CYCL1, ' / ' , CNT) AS CYCL1
			  ,CONCAT(CYCL2, ' / ' , CNT) AS CYCL2
			  ,CONCAT(CYCL3, ' / ' , CNT) AS CYCL3
	  FROM (
			SELECT (ROW_NUMBER() OVER(ORDER BY MNGR.QA_MNGR_ID ASC)) AS ROW_NUMBER
				  ,USR.LGN_ID
				  ,USR.USER_NM
				  ,O.FULL_PATH
				  ,MNGR.QA_MNGR_ID
				  ,PLAN.QA_PLAN_ID
				  ,UO.DEPT_ID
				  ,( CASE WHEN RSLT.CYCL1 IS NULL THEN 0 ELSE RSLT.CYCL1 END ) AS CYCL1
				  ,( CASE WHEN RSLT.CYCL2 IS NULL THEN 0 ELSE RSLT.CYCL2 END ) AS CYCL2
				  ,( CASE WHEN RSLT.CYCL3 IS NULL THEN 0 ELSE RSLT.CYCL3 END ) AS CYCL3
				  ,COUNT(DISTINCT ALTMNT.QA_TRGT_ID) AS CNT	
			  FROM PLT_QA_MNGR AS MNGR
			  	   LEFT JOIN PLT_QA_TRGT_ALTMNT AS ALTMNT 
			  	   	 ON MNGR.QA_MNGR_ID = ALTMNT.QA_MNGR_ID 
			  	   	AND ALTMNT.QA_PLAN_ID = MNGR.QA_PLAN_ID
			  	   LEFT JOIN PLT_QA_PLAN AS PLAN 
			       	 ON PLAN.QA_PLAN_ID = ALTMNT.QA_PLAN_ID
				   LEFT JOIN (
								SELECT A.QA_PLAN_ID, A.QA_MNGR_ID
									  ,SUM(CASE WHEN CYCL_NM = '1' THEN CNT ELSE 0 END) AS CYCL1
									  ,SUM(CASE WHEN CYCL_NM = '2' THEN CNT ELSE 0 END) AS CYCL2
									  ,SUM(CASE WHEN CYCL_NM = '3' THEN CNT ELSE 0 END) AS CYCL3
								  FROM (
										SELECT RSLT.QA_PLAN_ID 
											  ,RSLT.QA_CYCL_ID
											  ,RSLT.QA_MNGR_ID
											  ,CYCL.CYCL_NM
											  ,COUNT(DISTINCT QA_TRGT_ID) AS CNT
										  FROM PLT_QA_RSLT AS RSLT
										 	   LEFT JOIN PLT_QA_CYCL AS CYCL ON CYCL.QA_PLAN_ID = RSLT.QA_PLAN_ID AND CYCL.QA_CYCL_ID = RSLT.QA_CYCL_ID
										 WHERE RSLT.QA_PLAN_ID = #{QA_PLAN_ID}::INTEGER
										 GROUP BY RSLT.QA_PLAN_ID
										         ,RSLT.QA_CYCL_ID
										         ,RSLT.QA_MNGR_ID
										         ,CYCL.CYCL_NM
										) AS A
								  GROUP BY A.QA_PLAN_ID, A.QA_MNGR_ID
				   			 ) AS RSLT ON RSLT.QA_PLAN_ID = PLAN.QA_PLAN_ID AND RSLT.QA_MNGR_ID = MNGR.QA_MNGR_ID
			       	 LEFT JOIN PLT_USER AS USR
			         ON USR.USER_ID = MNGR.QA_MNGR_ID
				   LEFT JOIN PLT_USER_OGNZ AS UO 
				     ON UO.USER_ID = USR.USER_ID AND UO.CUSTCO_ID = #{CUSTCO_ID}::INTEGER AND UO.USE_YN = 'Y'
			       LEFT JOIN ( 
								WITH RECURSIVE CTE AS (
									SELECT DEPT_ID, CUSTCO_ID, DEPT_NM, UP_DEPT_ID, CAST(DEPT_NM AS VARCHAR) as FULL_PATH
								  	  FROM PLT_OGNZ AS TOP
									 WHERE UP_DEPT_ID IS NULL AND CUSTCO_ID = #{CUSTCO_ID}::INTEGER
									UNION ALL
									SELECT CHILD.DEPT_ID, CHILD.CUSTCO_ID, CHILD.DEPT_NM, CHILD.UP_DEPT_ID, CAST(CTE.FULL_PATH || '/' || CHILD.DEPT_NM AS VARCHAR)
									  FROM PLT_OGNZ AS CHILD INNER JOIN CTE AS CTE ON (CHILD.UP_DEPT_ID = CTE.DEPT_ID)
								)
							 	SELECT *
								  FROM CTE
							 ) AS O 
					 ON UO.DEPT_ID = O.DEPT_ID
			 WHERE MNGR.QA_PLAN_ID = #{QA_PLAN_ID}::INTEGER
			   <if test="SEARCH_WORD != null and SEARCH_WORD != ''">
		       AND ( USR.LGN_ID LIKE CONCAT('%', #{SEARCH_WORD}, '%') OR USR.USER_NM LIKE CONCAT('%', #{SEARCH_WORD}, '%') )	
			   </if>
			 GROUP BY USR.LGN_ID
				     ,USR.USER_NM
				     ,O.FULL_PATH
				     ,MNGR.QA_MNGR_ID
				     ,ALTMNT.QA_MNGR_ID
				     ,PLAN.QA_PLAN_ID
				     ,UO.DEPT_ID
				  	 ,RSLT.CYCL1
				  	 ,RSLT.CYCL2
				  	 ,RSLT.CYCL3
		   ) AS A
	</select>
	<select id="selectQaEvlRsltStat" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT COUNT(QA_MNGR_ID) AS TOTAL_CNT
	      ,SUM ( CASE WHEN CNT = Y THEN 1 ELSE 0 END ) AS COMPLETE_CNT
	      ,SUM ( CASE WHEN CNT <![CDATA[<>]]> Y THEN 1 ELSE 0 END ) AS ONGONG_CNT
		  FROM (
			  SELECT QA_PLAN_ID
				  ,QA_MNGR_ID
				  ,COUNT(EVL_CMPTN_YN) AS CNT
				  ,SUM( CASE WHEN EVL_CMPTN_YN = 'Y' THEN 1 ELSE 0 END ) AS Y
				  ,SUM( CASE WHEN EVL_CMPTN_YN = 'N' THEN 1 ELSE 0 END ) AS N
			  FROM PLT_QA_CYCL_STTS
			 WHERE QA_PLAN_ID = #{QA_PLAN_ID}::INTEGER
			 GROUP BY QA_PLAN_ID
					 ,QA_MNGR_ID
	       ) AS A
	</select>
	<select id="selectQaEvlRsltTrgtList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT (ROW_NUMBER() OVER(ORDER BY ALTMNT.QA_MNGR_ID ASC)) AS ROW_NUMBER
		       ,ALTMNT.QA_PLAN_ID
			   ,ALTMNT.QA_MNGR_ID
			   ,RSLT.QA_CYCL_ID
			   ,ALTMNT.QA_TRGT_ID
			   ,USR.USER_ID
			   ,USR.USER_NM
			   ,COALESCE(TO_DATE(RSLT.MDFCN_DT, 'YYYYMMDDHH24MISS'), TO_DATE(RSLT.REG_DT, 'YYYYMMDDHH24MISS')) AS EVL_DT
			   ,(CASE WHEN CUTT.PHN_HR <![CDATA[<]]> 3600 
				  	  THEN TO_CHAR((CUTT.PHN_HR||' second')::INTERVAL, 'MI:SS')
					  ELSE TO_CHAR((CUTT.PHN_HR||' second')::INTERVAL, 'HH24:MI:SS') 
					  END ) AS PHN_HR
			   ,COALESCE(SUM(RSLT.SCR), 0) AS SCR
			   ,COUNT(RSLT.SCR)
			   ,(CASE WHEN COUNT(RSLT.SCR)  >  0 
				 	  THEN 'Y'
					  ELSE 'N'
					  END ) AS COMPTN_YN
		  FROM PLT_QA_TRGT_ALTMNT AS ALTMNT
			   LEFT OUTER JOIN PLT_QA_RSLT AS RSLT
		  	   	 ON RSLT.QA_TRGT_ID = ALTMNT.QA_TRGT_ID
		  	   	 AND RSLT.QA_PLAN_ID = ALTMNT.QA_PLAN_ID
		  	   	 AND RSLT.QA_MNGR_ID = ALTMNT.QA_MNGR_ID
		  	   	 AND RSLT.QA_CYCL_ID = #{QA_CYCL_ID}::INTEGER
		  	   LEFT JOIN PLT_QA_TRGT_SLCTN AS SLCTN
				 ON SLCTN.QA_TRGT_ID = ALTMNT.QA_TRGT_ID
			   LEFT JOIN PLT_CUTT_ITGRT_HSTRY AS HSTRY
				 ON HSTRY.ITGRT_HSTRY_ID = SLCTN.ITGRT_HSTRY_ID
			   LEFT JOIN PLT_PHN_CUTT AS CUTT 
				 ON CUTT.PHN_CUTT_ID = HSTRY.PHN_CUTT_ID
			   LEFT JOIN PLT_USER AS USR
				 ON USR.USER_ID = CUTT.CUSL_ID
		 WHERE ALTMNT.QA_PLAN_ID = #{QA_PLAN_ID}::INTEGER
		   AND ALTMNT.QA_MNGR_ID = #{QA_MNGR_ID}::INTEGER
		 GROUP BY ALTMNT.QA_PLAN_ID
			  	 ,ALTMNT.QA_MNGR_ID
			  	 ,RSLT.QA_CYCL_ID
			  	 ,ALTMNT.QA_TRGT_ID
				 ,USR.USER_ID
				 ,USR.USER_NM
				 ,EVL_DT
				 ,PHN_HR	
	</select>
</mapper>