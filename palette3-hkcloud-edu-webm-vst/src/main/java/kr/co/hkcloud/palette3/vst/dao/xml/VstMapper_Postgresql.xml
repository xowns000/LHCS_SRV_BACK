<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="kr.co.hkcloud.palette3.vst.dao.VstMapper">

	<select id="prdctTypeList"  parameterType= "java.util.HashMap" resultType="java.util.HashMap">
		WITH RECURSIVE PRDCT_TREE AS ( /*AS 제품 유형 Tree 목록 (kr.co.hkcloud.palette3.vst.dao.VstMapper.prdctTypeList)*/
			SELECT PRDCT_TYPE_ID, UP_PRDCT_TYPE_ID, PRDCT_NM, SORT_ORD, 1 AS LVL, LPAD(CAST(SORT_ORD AS VARCHAR),5,'0') AS SORT, CAST(PRDCT_NM AS VARCHAR(300)) AS FULL_PATH
			FROM PLT_VST_PRDCT_TYPE
			WHERE UP_PRDCT_TYPE_ID IS NULL
			AND CUSTCO_ID = #{CUSTCO_ID}::INT
			AND DEL_YN = 'N'
			UNION ALL
			SELECT B.PRDCT_TYPE_ID, B.UP_PRDCT_TYPE_ID, B.PRDCT_NM, B.SORT_ORD, C.LVL + 1 AS LVL, C.SORT || ' > ' || LPAD(CAST(B.SORT_ORD AS VARCHAR),5,'0') AS SORT, CAST(CASE WHEN C.LVL >1 THEN C.FULL_PATH || ' > ' ELSE '' END || B.PRDCT_NM AS VARCHAR(300)) AS FULL_PATH
			FROM PLT_VST_PRDCT_TYPE B
			INNER JOIN PRDCT_TREE C ON C.PRDCT_TYPE_ID = B.UP_PRDCT_TYPE_ID
			AND B.CUSTCO_ID = #{CUSTCO_ID}::INT
			WHERE B.DEL_YN = 'N'
		)
		SELECT
			OT.PRDCT_TYPE_ID
			, OT.UP_PRDCT_TYPE_ID
			, OT.PRDCT_NM
			, OT.SORT_ORD
			, OT.SORT
			, OT.FULL_PATH
			, (SELECT COUNT(*) FROM PLT_VST_PRDCT_TYPE WHERE UP_PRDCT_TYPE_ID = OT.PRDCT_TYPE_ID) AS CHILD_CNT
		FROM PRDCT_TREE OT
		WHERE 1 = 1
		<if test='LVL != null and LVL != ""'>AND LVL > #{LVL}::INT</if>
		ORDER BY OT.SORT
	</select>

	<select id="vstDayTimeList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT /*일자별 예약 시간 목록 (kr.co.hkcloud.palette3.vst.dao.VstMapper.vstDayTimeList)*/
			TO_CHAR(ST_TIME_INTERVALS, 'YYYYMMDDHH24MISS') AS RSVT_BGNG_DT
			, TO_CHAR(ST_TIME_INTERVALS, 'HH24:MI') AS RSVT_ST_DT
			, TO_CHAR(END_TIME_INTERVALS, 'HH24:MI') AS RSVT_END_DT
			, (SELECT COUNT(USER_ID) FROM PLT_USER_AUTHRT WHERE AUTHRT_GROUP_ID = #{AUTHRT_GROUP_ID}::INT) AS USER_CNT
			, (SELECT COUNT(VST_RSVT_ID) FROM PLT_VST_RSVT WHERE CUSTCO_ID = #{CUSTCO_ID}::INT AND RSVT_BGNG_DT >= TO_CHAR(ST_TIME_INTERVALS, 'YYYYMMDDHH24MISS') AND RSVT_BGNG_DT <![CDATA[<]]> TO_CHAR(END_TIME_INTERVALS, 'YYYYMMDDHH24MISS')) AS VST_CNT
		FROM (
			SELECT GENERATE_SERIES(
						(TO_CHAR(TO_TIMESTAMP(#{DAY} || (SELECT CD_VL FROM PLT_COMM_CD WHERE CUSTCO_ID = #{CUSTCO_ID}::INT AND GROUP_CD_ID = 'VST_OPT' AND CD_ID = 'VO_ST_TIME'), 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP)
						, (TO_CHAR(TO_TIMESTAMP(#{DAY} || (SELECT CD_VL FROM PLT_COMM_CD WHERE CUSTCO_ID = #{CUSTCO_ID}::INT AND GROUP_CD_ID = 'VST_OPT' AND CD_ID = 'VO_END_TIME'), 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP)
						, CONCAT((SELECT CD_VL FROM PLT_COMM_CD WHERE CUSTCO_ID = #{CUSTCO_ID}::INT AND GROUP_CD_ID = 'VST_OPT' AND CD_ID = 'VO_JOB_MIN'), ' MINUTES')::INTERVAL
					) AS ST_TIME_INTERVALS
					, GENERATE_SERIES(
						(TO_CHAR(TO_TIMESTAMP(#{DAY} || (SELECT CD_VL FROM PLT_COMM_CD WHERE CUSTCO_ID = #{CUSTCO_ID}::INT AND GROUP_CD_ID = 'VST_OPT' AND CD_ID = 'VO_ST_TIME'), 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP + CONCAT((SELECT CD_VL FROM PLT_COMM_CD WHERE CUSTCO_ID = #{CUSTCO_ID}::INT AND GROUP_CD_ID = 'VST_OPT' AND CD_ID = 'VO_JOB_MIN'), ' MINUTES')::INTERVAL)
						, (TO_CHAR(TO_TIMESTAMP(#{DAY} || (SELECT CD_VL FROM PLT_COMM_CD WHERE CUSTCO_ID = #{CUSTCO_ID}::INT AND GROUP_CD_ID = 'VST_OPT' AND CD_ID = 'VO_END_TIME'), 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP + CONCAT((SELECT CD_VL FROM PLT_COMM_CD WHERE CUSTCO_ID = #{CUSTCO_ID}::INT AND GROUP_CD_ID = 'VST_OPT' AND CD_ID = 'VO_JOB_MIN'), ' MINUTES')::INTERVAL)
						, CONCAT((SELECT CD_VL FROM PLT_COMM_CD WHERE CUSTCO_ID = #{CUSTCO_ID}::INT AND GROUP_CD_ID = 'VST_OPT' AND CD_ID = 'VO_JOB_MIN'), ' MINUTES')::INTERVAL
					) AS END_TIME_INTERVALS
		) A
	</select>

	<select id="vstDayTimeVstrList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT /*일자 시간별 방문 가능자 목록 (kr.co.hkcloud.palette3.vst.dao.VstMapper.vstDayTimeVstrList)*/
			*
		FROM (
			SELECT
				PUA.USER_ID
				, PU.USER_NM
				, PU.ICON
				, (SELECT array_to_string(array_agg( FILE_PATH || '/' || STRG_FILE_NM ), '') FROM PLT_FILE WHERE FILE_GROUP_KEY = PU.ICON) as ICON_IMG_URI
				, PO.DEPT_NM
				, (
					SELECT ARRAY_TO_STRING(ARRAY_AGG(TO_CHAR(TO_TIMESTAMP(A.RSVT_BGNG_DT, 'YYYYMMDDHH24MISS'), 'HH24:MI')), ',') AS RSVT_BGNG_DT
					FROM (
					   SELECT
							A.RSVT_BGNG_DT
							, A.RSVT_END_DT
							, A.USER_ID
						FROM (
							SELECT TO_CHAR(ST_TIME_INTERVALS, 'YYYYMMDDHH24MISS') AS RSVT_BGNG_DT, TO_CHAR(END_TIME_INTERVALS, 'YYYYMMDDHH24MISS') AS RSVT_END_DT, PUA.USER_ID FROM (
								SELECT GENERATE_SERIES(
											(TO_CHAR(TO_TIMESTAMP(#{DAY} || (SELECT CD_VL FROM PLT_COMM_CD WHERE CUSTCO_ID = #{CUSTCO_ID}::INT AND GROUP_CD_ID = 'VST_OPT' AND CD_ID = 'VO_ST_TIME'), 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP)
											, (TO_CHAR(TO_TIMESTAMP(#{DAY} || (SELECT CD_VL FROM PLT_COMM_CD WHERE CUSTCO_ID = #{CUSTCO_ID}::INT AND GROUP_CD_ID = 'VST_OPT' AND CD_ID = 'VO_END_TIME'), 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP)
											, CONCAT((SELECT CD_VL FROM PLT_COMM_CD WHERE CUSTCO_ID = #{CUSTCO_ID}::INT AND GROUP_CD_ID = 'VST_OPT' AND CD_ID = 'VO_JOB_MIN'), ' MINUTES')::INTERVAL
										) AS ST_TIME_INTERVALS
										, GENERATE_SERIES(
											(TO_CHAR(TO_TIMESTAMP(#{DAY}|| (SELECT CD_VL FROM PLT_COMM_CD WHERE CUSTCO_ID = #{CUSTCO_ID}::INT AND GROUP_CD_ID = 'VST_OPT' AND CD_ID = 'VO_ST_TIME'), 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP) + CONCAT((SELECT CD_VL::INT * 60 FROM PLT_COMM_CD WHERE CUSTCO_ID = #{CUSTCO_ID}::INT AND GROUP_CD_ID = 'SRVC_TP' AND CD_ID = #{SRVC_TYPE_CD}), ' MINUTES')::INTERVAL
											, (TO_CHAR(TO_TIMESTAMP(#{DAY} || (SELECT CD_VL FROM PLT_COMM_CD WHERE CUSTCO_ID = #{CUSTCO_ID}::INT AND GROUP_CD_ID = 'VST_OPT' AND CD_ID = 'VO_END_TIME'), 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP) + CONCAT((SELECT CD_VL::INT * 60 FROM PLT_COMM_CD WHERE CUSTCO_ID = #{CUSTCO_ID}::INT AND GROUP_CD_ID = 'SRVC_TP' AND CD_ID = #{SRVC_TYPE_CD}), ' MINUTES')::INTERVAL
											, CONCAT((SELECT CD_VL FROM PLT_COMM_CD WHERE CUSTCO_ID = #{CUSTCO_ID}::INT AND GROUP_CD_ID = 'VST_OPT' AND CD_ID = 'VO_JOB_MIN'), ' MINUTES')::INTERVAL
										) AS END_TIME_INTERVALS
							) A
							CROSS JOIN PLT_USER_AUTHRT PUA WHERE USER_ID = PUA.USER_ID
						) A
						WHERE NOT EXISTS (SELECT 1 FROM PLT_VST_RSVT WHERE VSTR_ID = A.USER_ID AND (TO_TIMESTAMP(RSVT_BGNG_DT, 'YYYYMMDDHH24MISS'), TO_TIMESTAMP(RSVT_END_DT, 'YYYYMMDDHH24MISS')) OVERLAPS (TO_TIMESTAMP(A.RSVT_BGNG_DT, 'YYYYMMDDHH24MISS'), TO_TIMESTAMP(A.RSVT_END_DT, 'YYYYMMDDHH24MISS')))
						AND TO_TIMESTAMP(RSVT_BGNG_DT, 'YYYYMMDDHH24MISS') <![CDATA[<=]]>TO_TIMESTAMP(RSVT_BGNG_DT, 'YYYYMMDDHH24MISS') + CONCAT((SELECT CD_VL::INT * 60 FROM PLT_COMM_CD WHERE CUSTCO_ID = #{CUSTCO_ID}::INT AND GROUP_CD_ID = 'SRVC_TP' AND CD_ID = 'ST_INST'), ' MINUTES')::INTERVAL
					) A
					LEFT OUTER JOIN PLT_VST_RSVT PRA ON PRA.VSTR_ID = A.USER_ID AND PRA.RSVT_BGNG_DT = A.RSVT_BGNG_DT AND PRA.CUSTCO_ID = #{CUSTCO_ID}::INT
					WHERE 1 = 1
					<if test="TIME_LIST !=null and TIME_LIST.size != 0">
					AND A.RSVT_BGNG_DT IN
					<foreach collection="TIME_LIST" item="ITEM" open="(" separator="," close=")">
						#{ITEM}
					</foreach>
					</if>
					AND PRA.VST_RSVT_ID IS NULL
					AND A.USER_ID = PUA.USER_ID
					AND NOT EXISTS (SELECT 1 FROM PLT_VST_VSTR_RDY WHERE VSTR_ID = PUA.USER_ID AND RSVT_BGNG_DT = A.RSVT_BGNG_DT)
				) AS TIME_LIST
				, (SELECT COUNT(VSTR_ID) FROM PLT_VST_RSVT WHERE VSTR_ID = PUA.USER_ID AND SUBSTRING(RSVT_BGNG_DT,1,8) = #{DAY}) AS RSVT_CNT
			FROM PLT_USER_AUTHRT PUA
			INNER JOIN PLT_USER_OGNZ PUO ON PUO.USER_ID = PUA.USER_ID AND PUO.CUSTCO_ID = #{CUSTCO_ID}::INT
			INNER JOIN PLT_OGNZ PO ON PO.CUSTCO_ID = PUO.CUSTCO_ID AND PO.DEPT_ID = PUO.DEPT_ID
			INNER JOIN PLT_USER PU ON PU.USER_ID = PUO.USER_ID
			WHERE PUA.AUTHRT_GROUP_ID = #{AUTHRT_GROUP_ID}::INT
			AND EXISTS (SELECT 1 FROM PLT_OGNZ_RGN POR WHERE POR.CUSTCO_ID = PO.CUSTCO_ID AND POR.DEPT_ID = PO.DEPT_ID AND EXISTS (SELECT 1 FROM PLT_RGN_ZONE PRZ WHERE PRZ.RGN_CD = POR.RGN_CD AND PRZ.RGN_ZONE_CD = SUBSTRING(#{ZIP}, 1, 3)))
			<if test='CO_SE_CD != null and CO_SE_CD != ""'>AND PO.CO_SE_CD = #{CO_SE_CD}</if>
		) VSTR
		WHERE VSTR.TIME_LIST IS NOT NULL
	</select>
	
	<select id="vstVstrRdyStatChk" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT /*선택된 일자 시간의 방문자 상태 체크 (kr.co.hkcloud.palette3.vst.dao.VstMapper.vstVstrRdyStatChk)*/
			COUNT(VSTR_ID) AS CNT
			, CASE WHEN COUNT(VSTR_ID) > 0 THEN 'N' ELSE 'Y' END AS PSBLTY_STAT
		FROM PLT_VST_VSTR_RDY
		WHERE RSVT_BGNG_DT = #{RSVT_BGNG_DT} AND VSTR_ID = #{VSTR_ID}::INT
	</select>
	
	<insert id="vstVstrRdyReg" parameterType="java.util.HashMap">
		INSERT /*방문자 대기 저장 (kr.co.hkcloud.palette3.vst.dao.VstMapper.vstVstrRdyReg)*/
		INTO PLT_VST_VSTR_RDY (CUSL_ID, RSVT_BGNG_DT, VSTR_ID) 
		VALUES(#{USER_ID}::INT, #{RSVT_BGNG_DT}, #{VSTR_ID}::INT)
	</insert>

	<delete id="vstVstrRdyDel" parameterType="java.util.HashMap">
		DELETE /*방문자 대기 삭제 (kr.co.hkcloud.palette3.vst.dao.VstMapper.vstVstrRdyDel)*/
		FROM PLT_VST_VSTR_RDY WHERE 1 = 1
		<if test='CUSL_ID != null and CUSL_ID != ""'>AND CUSL_ID = #{CUSL_ID}::INT</if>
		<if test='RSVT_BGNG_DT != null and RSVT_BGNG_DT != ""'>AND RSVT_BGNG_DT = #{RSVT_BGNG_DT}</if>
		<if test='VSTR_ID != null and VSTR_ID != ""'>AND VSTR_ID = #{VSTR_ID}::INT</if>
	</delete>

	<insert id="vstRsvtReg" parameterType="java.util.HashMap">
		INSERT /*방문 예약 저장 (kr.co.hkcloud.palette3.vst.dao.VstMapper.vstRsvtReg)*/
		INTO PLT_VST_RSVT (
			VST_RSVT_ID
			, CUSTCO_ID
			, CUST_NM
			, REL_CD
			, CUST_TELNO
			, ZIP
			, ADDR
			, ADDR_DTL
			<if test='SRVC_TYPE_CD != null and SRVC_TYPE_CD != ""'>, SRVC_TYPE_CD</if>
			<if test='PRDCT_TYPE_ID != null and PRDCT_TYPE_ID != ""'>, PRDCT_TYPE_ID</if>
			, RSVT_BGNG_DT
			, RSVT_END_DT
			, VSTR_ID
			, STTS_CD
			<if test='STTS_DTL_CD != null and STTS_DTL_CD != ""'>, STTS_DTL_CD</if>
			<if test='DMND_MTTR != null and DMND_MTTR != ""'>, DMND_MTTR</if>
			<if test='EXCPTN_MTTR != null and EXCPTN_MTTR != ""'>, EXCPTN_MTTR</if>
			<if test='VIDEO_FILE_PATH != null and VIDEO_FILE_PATH != ""'>, VIDEO_FILE_PATH</if>
			, RGTR_ID
			, REG_DT
			, ALTMNT_RGTR_ID
			, ALTMNT_DT
			, IMG_FILE_GROUP_KEY
			, VDO_FILE_GROUP_KEY
		) 
		VALUES(
			#{VST_RSVT_ID}::INT
			, #{CUSTCO_ID}::INT
			, #{CUST_NM}
			, #{REL_CD}
			, #{CUST_TELNO}
			, #{ZIP}
			, #{ADDR}
			, #{ADDR_DTL}
			<if test='SRVC_TYPE_CD != null and SRVC_TYPE_CD != ""'>, #{SRVC_TYPE_CD}</if>
			<if test='PRDCT_TYPE_ID != null and PRDCT_TYPE_ID != ""'>, #{PRDCT_TYPE_ID}::INT</if>
			, #{RSVT_BGNG_DT}
			, TO_CHAR(TO_TIMESTAMP(#{RSVT_BGNG_DT}, 'YYYYMMDDHH24MISS')::TIMESTAMP + CONCAT((SELECT CD_VL::INT * 60 FROM PLT_COMM_CD WHERE CUSTCO_ID = #{CUSTCO_ID}::INT AND GROUP_CD_ID = 'SRVC_TP' AND CD_ID = #{SRVC_TYPE_CD}), ' MINUTES')::INTERVAL, 'YYYYMMDDHH24MISS')
			, #{VSTR_ID}::INT
			, #{STTS_CD}
			<if test='STTS_DTL_CD != null and STTS_DTL_CD != ""'>, #{STTS_DTL_CD}</if>
			<if test='DMND_MTTR != null and DMND_MTTR != ""'>, #{DMND_MTTR}</if>
			<if test='EXCPTN_MTTR != null and EXCPTN_MTTR != ""'>, #{EXCPTN_MTTR}</if>
			<if test='VIDEO_FILE_PATH != null and VIDEO_FILE_PATH != ""'>, #{VIDEO_FILE_PATH}</if>
			, #{USER_ID}::INT
			, TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
			, #{USER_ID}::INT
			, TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
			, #{IMG_FILE_GROUP_KEY}
			, #{VDO_FILE_GROUP_KEY}
		)
	</insert>
	
	<update id="vstRsvtMod"  parameterType= "java.util.HashMap">
		UPDATE PLT_VST_RSVT /*방문 예약 수정 (kr.co.hkcloud.palette3.vst.dao.VstMapper.vstRsvtMod)*/
		   SET MDFCN_DT = TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
		   		, MDFR_ID = #{USER_ID}::INTEGER
		   		<if test="CUST_NM != NULL and CUST_NM != ''">, CUST_NM = #{CUST_NM}</if>
		   		<if test="REL_CD != NULL and REL_CD != ''">, REL_CD = #{REL_CD}</if>
		   		<if test="CUST_TELNO != NULL and CUST_TELNO != ''">, CUST_TELNO = #{CUST_TELNO}</if>
		   		<if test="ZIP != NULL and ZIP != ''">, ZIP = #{ZIP}</if>
		   		<if test="ADDR != NULL and ADDR != ''">, ADDR = #{ADDR}</if>
		   		<if test="ADDR_DTL != NULL and ADDR_DTL != ''">, ADDR_DTL = #{ADDR_DTL}</if>
		   		, STTS_CD = #{STTS_CD}
		   		<if test='STTS_DTL_CD != null and STTS_DTL_CD != ""'>, STTS_DTL_CD = #{STTS_DTL_CD}</if>
		   		<if test="CN != NULL and CN != ''">, CN = #{CN}</if>
		   		<if test='SRVC_TYPE_CD != null and SRVC_TYPE_CD != ""'>, SRVC_TYPE_CD = #{SRVC_TYPE_CD}</if>
		   		<if test="PRDCT_TYPE_ID != NULL and PRDCT_TYPE_ID != ''">, PRDCT_TYPE_ID = #{PRDCT_TYPE_ID}::INT</if>
		   		<choose>
		   			<when test='STTS_CD == "VRS_RTRCN"'>
		   			, RSVT_BGNG_DT = NULL
		   			, RSVT_END_DT = NULL
		   			, VSTR_ID = NULL
		   			, ALTMNT_RGTR_ID = NULL
		   			, ALTMNT_DT = NULL
		   			</when>
		   			<otherwise>
			   			<if test="RSVT_BGNG_DT != NULL and RSVT_BGNG_DT != ''">, RSVT_BGNG_DT = #{RSVT_BGNG_DT}</if>
			   			<if test="RSVT_BGNG_DT != NULL and RSVT_BGNG_DT != ''">, RSVT_END_DT = TO_CHAR(TO_TIMESTAMP(#{RSVT_BGNG_DT}, 'YYYYMMDDHH24MISS')::TIMESTAMP + CONCAT((SELECT CD_VL::INT * 60 FROM PLT_COMM_CD WHERE CUSTCO_ID = #{CUSTCO_ID}::INT AND GROUP_CD_ID = 'SRVC_TP' AND CD_ID = #{SRVC_TYPE_CD}), ' MINUTES')::INTERVAL, 'YYYYMMDDHH24MISS')</if>
				   		<if test="VSTR_ID != NULL and VSTR_ID != ''">, VSTR_ID = #{VSTR_ID}::INT</if>
				   		<if test="ALTMNT_RGTR_ID != NULL and ALTMNT_RGTR_ID != ''">
				   		, ALTMNT_RGTR_ID = #{ALTMNT_RGTR_ID}::INT
				   		, ALTMNT_DT = TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
				   		</if>
		   			</otherwise>
		   		</choose>
		   		<if test='DMND_MTTR != null and DMND_MTTR != ""'>, DMND_MTTR = #{DMND_MTTR}</if>
		   		<if test='EXCPTN_MTTR != null and EXCPTN_MTTR != ""'>, EXCPTN_MTTR = #{EXCPTN_MTTR}</if>
		   		<if test='IMG_FILE_GROUP_KEY != null and IMG_FILE_GROUP_KEY != ""'>, IMG_FILE_GROUP_KEY = #{IMG_FILE_GROUP_KEY}</if>
				<if test='VDO_FILE_GROUP_KEY != null and VDO_FILE_GROUP_KEY != ""'>, VDO_FILE_GROUP_KEY = #{VDO_FILE_GROUP_KEY}</if>
		 WHERE VST_RSVT_ID = #{VST_RSVT_ID}::INT
	</update>
	
	<insert id="vstRsvtHstryReg" parameterType="java.util.HashMap">
		INSERT /*방문 예약 이력 저장 (kr.co.hkcloud.palette3.vst.dao.VstMapper.vstRsvtHstryReg)*/
		INTO PLT_VST_RSVT_HSTRY (
			VST_RSVT_HSTRY_ID
			, VST_RSVT_ID
			, CUSTCO_ID
			<if test='CUST_NM != null and CUST_NM != ""'>, CUST_NM</if>
			<if test='REL_CD != null and REL_CD != ""'>, REL_CD</if>
			<if test='CUST_TELNO != null and CUST_TELNO != ""'>, CUST_TELNO</if>
			<if test='ZIP != null and ZIP != ""'>, ZIP</if>
			<if test='ADDR != null and ADDR != ""'>, ADDR</if>
			<if test='ADDR_DTL != null and ADDR_DTL != ""'>, ADDR_DTL</if>
			<if test='SRVC_TYPE_CD != null and SRVC_TYPE_CD != ""'>, SRVC_TYPE_CD</if>
			<if test='PRDCT_TYPE_ID != null and PRDCT_TYPE_ID != ""'>, PRDCT_TYPE_ID</if>
			<if test='CN != null and CN != ""'>, CN</if>
			<if test='RSVT_BGNG_DT != null and RSVT_BGNG_DT != ""'>, RSVT_BGNG_DT</if>
			<if test='RSVT_BGNG_DT != null and RSVT_BGNG_DT != ""'>, RSVT_END_DT</if>
			<if test='VSTR_ID != null and VSTR_ID != ""'>, VSTR_ID</if>
			<if test='STTS_CD != null and STTS_CD != ""'>, STTS_CD</if>
			<if test='STTS_DTL_CD != null and STTS_DTL_CD != ""'>, STTS_DTL_CD</if>
			<if test='DMND_MTTR != null and DMND_MTTR != ""'>, DMND_MTTR</if>
			<if test='EXCPTN_MTTR != null and EXCPTN_MTTR != ""'>, EXCPTN_MTTR</if>
			, RGTR_ID
			, REG_DT
			, ALTMNT_RGTR_ID
			, ALTMNT_DT
		) 
		VALUES(
			#{VST_RSVT_HSTRY_ID}::INT
			, #{VST_RSVT_ID}::INT
			, #{CUSTCO_ID}::INT
			<if test='CUST_NM != null and CUST_NM != ""'>, #{CUST_NM}</if>
			<if test='REL_CD != null and REL_CD != ""'>, #{REL_CD}</if>
			<if test='CUST_TELNO != null and CUST_TELNO != ""'>, #{CUST_TELNO}</if>
			<if test='ZIP != null and ZIP != ""'>, #{ZIP}</if>
			<if test='ADDR != null and ADDR != ""'>, #{ADDR}</if>
			<if test='ADDR_DTL != null and ADDR_DTL != ""'>, #{ADDR_DTL}</if>
			<if test='SRVC_TYPE_CD != null and SRVC_TYPE_CD != ""'>, #{SRVC_TYPE_CD}</if>
			<if test='PRDCT_TYPE_ID != null and PRDCT_TYPE_ID != ""'>, #{PRDCT_TYPE_ID}::INT</if>
			<if test='CN != null and CN != ""'>, #{CN}</if>
			<if test='RSVT_BGNG_DT != null and RSVT_BGNG_DT != ""'>, #{RSVT_BGNG_DT}</if>
			<if test='RSVT_BGNG_DT != null and RSVT_BGNG_DT != ""'>, TO_CHAR(TO_TIMESTAMP(#{RSVT_BGNG_DT}, 'YYYYMMDDHH24MISS')::TIMESTAMP + CONCAT((SELECT CD_VL FROM PLT_COMM_CD WHERE CUSTCO_ID = #{CUSTCO_ID}::INT AND GROUP_CD_ID = 'VST_OPT' AND CD_ID = 'VO_JOB_MIN'), ' MINUTES')::INTERVAL, 'YYYYMMDDHH24MISS')</if>
			<if test='VSTR_ID != null and VSTR_ID != ""'>, #{VSTR_ID}::INT</if>
			<if test='STTS_CD != null and STTS_CD != ""'>, #{STTS_CD}</if>
			<if test='STTS_DTL_CD != null and STTS_DTL_CD != ""'>, #{STTS_DTL_CD}</if>
			<if test='DMND_MTTR != null and DMND_MTTR != ""'>, #{DMND_MTTR}</if>
			<if test='EXCPTN_MTTR != null and EXCPTN_MTTR != ""'>, #{EXCPTN_MTTR}</if>
			, #{USER_ID}::INT
			, TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
			, #{USER_ID}::INT
			, TO_CHAR(NOW(), 'YYYYMMDDHH24MISS')
		)
	</insert>

	<insert id="vstRsvtCuttReg" parameterType="java.util.HashMap">
		INSERT /*방문 상담 예약 저장 (kr.co.hkcloud.palette3.vst.dao.VstMapper.vstRsvtCuttReg)*/
		INTO PLT_VST_CUTT_RSVT (
			PHN_CUTT_ID
			, VST_RSVT_ID
		) 
		VALUES(
			#{PHN_CUTT_ID}::INT
			, #{VST_RSVT_ID}::INT
		)
	</insert>
	
	<select id="vstRsvtList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT /*방문 상담 이력 목록 (kr.co.hkcloud.palette3.vst.dao.VstMapper.vstRsvtList)*/
			ROW_NUMBER() OVER(ORDER BY ORD, RSVT_BGNG_DT ASC) AS RNUM, A.*
		FROM (
			SELECT
				PVR.VST_RSVT_ID
				, (SELECT PHN_CUTT_ID FROM PLT_VST_CUTT_RSVT WHERE VST_RSVT_ID = PVR.VST_RSVT_ID) AS PHN_CUTT_ID
				, CASE WHEN PVR.STTS_CD = 'VRS_RTRCN' THEN HSTRY2.VSTR_ID ELSE PVR.VSTR_ID END AS VSTR_ID
				, (SELECT array_to_string(array_agg( FILE_PATH || '/' || STRG_FILE_NM ), '') FROM PLT_FILE WHERE FILE_GROUP_KEY = (SELECT ICON FROM PLT_USER WHERE USER_ID = CASE WHEN PVR.STTS_CD = 'VRS_RTRCN' THEN HSTRY2.VSTR_ID ELSE PVR.VSTR_ID END)) as VSTR_IMG
				, (SELECT USER_NM FROM PLT_USER WHERE USER_ID = CASE WHEN PVR.STTS_CD = 'VRS_RTRCN' THEN HSTRY2.VSTR_ID ELSE PVR.VSTR_ID END) AS VSTR_NM
				, (SELECT MBL_PHN_NO FROM PLT_USER WHERE USER_ID = CASE WHEN PVR.STTS_CD = 'VRS_RTRCN' THEN HSTRY2.VSTR_ID ELSE PVR.VSTR_ID END) AS VSTR_PHN_NO
				, (SELECT PO.DEPT_NM FROM PLT_USER_OGNZ PUO INNER JOIN PLT_OGNZ PO ON PO.CUSTCO_ID = PUO.CUSTCO_ID AND PO.DEPT_ID = PUO.DEPT_ID WHERE PUO.USE_YN = 'Y' AND PUO.USER_ID = CASE WHEN PVR.STTS_CD = 'VRS_RTRCN' THEN HSTRY2.VSTR_ID ELSE PVR.VSTR_ID END) AS DEPT_NM
				, PVR.CUST_NM
				, PVR.REL_CD
				, PVR.CUST_TELNO
				, PVR.ZIP
				, PVR.ADDR
				, PVR.ADDR_DTL
				, PVR.REG_DT
				, CASE WHEN PVR.STTS_CD = 'VRS_RTRCN' THEN HSTRY2.RSVT_BGNG_DT ELSE PVR.RSVT_BGNG_DT END AS RSVT_BGNG_DT
				, (SELECT PRDCT_NM FROM PLT_VST_PRDCT_TYPE PVPT WHERE CUSTCO_ID = PVR.CUSTCO_ID AND PRDCT_TYPE_ID = (SELECT UP_PRDCT_TYPE_ID FROM PLT_VST_PRDCT_TYPE WHERE PRDCT_TYPE_ID = PVR.PRDCT_TYPE_ID)) AS UP_PRDCT_NM
				, PVR.PRDCT_TYPE_ID
				, (SELECT PRDCT_NM FROM PLT_VST_PRDCT_TYPE PVPT WHERE CUSTCO_ID = PVR.CUSTCO_ID AND PRDCT_TYPE_ID = PVR.PRDCT_TYPE_ID) AS PRDCT_NM
				, CASE WHEN PVR.STTS_CD = 'VRS_RTRCN' THEN HSTRY2.ALTMNT_DT ELSE PVR.ALTMNT_DT END AS ALTMNT_DT
				, CASE WHEN PVR.STTS_CD = 'VRS_RTRCN' THEN HSTRY2.ALTMNT_RGTR_ID ELSE PVR.ALTMNT_RGTR_ID END AS ALTMNT_RGTR_ID
				, (SELECT USER_NM FROM PLT_USER WHERE USER_ID = CASE WHEN PVR.STTS_CD = 'VRS_RTRCN' THEN HSTRY2.ALTMNT_RGTR_ID ELSE PVR.ALTMNT_RGTR_ID END) AS ALTMNT_RGTR_NM
				, PVR.STTS_CD
				, (SELECT CD_NM FROM PLT_COMM_CD WHERE CUSTCO_ID = PVR.CUSTCO_ID AND GROUP_CD_ID = 'VST_RSVT_STAT' AND CD_ID = PVR.STTS_CD) AS STTS_NM
				, HSTRY.REG_DT AS STTS_REG_DT
				, (SELECT PU.USER_NM FROM PLT_VST_CUTT_RSVT PVCR INNER JOIN PLT_PHN_CUTT PPC ON PPC.PHN_CUTT_ID = PVCR.PHN_CUTT_ID INNER JOIN PLT_USER PU ON PU.USER_ID = PPC.CUSL_ID WHERE VST_RSVT_ID = PVR.VST_RSVT_ID) AS CUSL_NM
				, PVR.STTS_DTL_CD
				, (SELECT CD_NM FROM PLT_COMM_CD WHERE CUSTCO_ID = PVR.CUSTCO_ID AND GROUP_CD_ID = PVR.STTS_CD AND CD_ID = PVR.STTS_DTL_CD) AS STTS_DTL_NM
				, PVR.CN
				, PVR.DMND_MTTR
				, PVR.EXCPTN_MTTR
				, PVR.SRVC_TYPE_CD
				, (SELECT CD_NM FROM PLT_COMM_CD WHERE CUSTCO_ID = PVR.CUSTCO_ID AND GROUP_CD_ID = 'SRVC_TP' AND CD_ID = PVR.SRVC_TYPE_CD) AS SRVC_TYPE_NM
				, PVR.VIDEO_FILE_PATH
				, (SELECT ARRAY_TO_STRING(ARRAY_AGG( FILE_PATH || '/' || STRG_FILE_NM ), '_##_') FROM PLT_FILE WHERE FILE_GROUP_KEY = PVR.IMG_FILE_GROUP_KEY) AS UPLOAD_IMG
				, CASE PVR.STTS_CD WHEN 'VRS_ALTMNT' THEN 1 WHEN 'VRS_REVST' THEN 1 WHEN 'VRS_CMPTN' THEN 2 WHEN 'VRS_RTRCN' THEN  3 ELSE 4 END ORD
			FROM PLT_VST_RSVT PVR
			LEFT OUTER JOIN (
				SELECT
					*
				FROM (
					SELECT
						ROW_NUMBER() OVER (PARTITION BY VST_RSVT_ID ORDER BY VST_RSVT_HSTRY_ID DESC) AS RNUM
						, *
					FROM PLT_VST_RSVT_HSTRY PVRH
				) A
				WHERE RNUM = 1
			) HSTRY ON HSTRY.VST_RSVT_ID = PVR.VST_RSVT_ID
			LEFT OUTER JOIN (
				SELECT
					*
				FROM (
					SELECT
						ROW_NUMBER() OVER (PARTITION BY VST_RSVT_ID ORDER BY VST_RSVT_HSTRY_ID DESC) AS RNUM
						, *
					FROM PLT_VST_RSVT_HSTRY PVRH
				) A
				WHERE RNUM = 2
			) HSTRY2 ON HSTRY2.VST_RSVT_ID = PVR.VST_RSVT_ID
			WHERE PVR.CUSTCO_ID = #{CUSTCO_ID}::INT
			<if test='CUST_ID != null and CUST_ID != ""'>
			AND EXISTS (SELECT 1 FROM PLT_VST_CUTT_RSVT PVCR INNER JOIN PLT_PHN_CUTT PPC ON PPC.PHN_CUTT_ID = PVCR.PHN_CUTT_ID WHERE PVCR.VST_RSVT_ID = PVR.VST_RSVT_ID AND PPC.CUST_ID = #{CUST_ID}::INT)
			</if>
			<if test='SCH_STTS_CD != null and SCH_STTS_CD != ""'>AND PVR.STTS_CD = #{SCH_STTS_CD}</if>
			<if test='(SCH_RSVT_ST_DTS != null and SCH_RSVT_ST_DTS!= "") or (SCH_RSVT_END_DTS != null and SCH_RSVT_END_DTS!= "")'>
				<if test='SCH_RSVT_ST_DTS != null and SCH_RSVT_ST_DTS != ""'>
				AND CASE WHEN PVR.STTS_CD = 'VRS_RTRCN' THEN HSTRY2.RSVT_BGNG_DT ELSE PVR.RSVT_BGNG_DT END <![CDATA[>=]]> CONCAT(#{SCH_RSVT_ST_DTS}, '000000')::VARCHAR(14)
				</if>
				<if test='SCH_RSVT_END_DTS != null and SCH_RSVT_END_DTS!= ""'>
				AND CASE WHEN PVR.STTS_CD = 'VRS_RTRCN' THEN HSTRY2.RSVT_BGNG_DT ELSE PVR.RSVT_BGNG_DT END <![CDATA[<=]]> CONCAT(#{SCH_RSVT_END_DTS}, '235959')::VARCHAR(14)
				</if>
			</if>
			<if test='SCH_PRDCT_TYPE != null and SCH_PRDCT_TYPE != ""'>AND PVR.PRDCT_TYPE_ID = #{SCH_PRDCT_TYPE}::INT</if>
			<if test='SCH_SRVC_TYPE_CD != null and SCH_SRVC_TYPE_CD != ""'>AND PVR.SRVC_TYPE_CD = #{SCH_SRVC_TYPE_CD}</if>
			<if test='SCH_KEYWORD != null and SCH_KEYWORD != ""'>
				<choose>
					<when test='SCH_KEY == "AST_CUST_NM"'>AND PVR.CUST_NM LIKE CONCAT(CONCAT('%', #{SCH_KEYWORD}), '%')</when>
					<when test='SCH_KEY == "AST_AS_USER_NM"'>AND (SELECT USER_NM FROM PLT_USER WHERE USER_ID = CASE WHEN PVR.STTS_CD = 'VRS_RTRCN' THEN HSTRY2.VSTR_ID ELSE PVR.VSTR_ID END) LIKE CONCAT(CONCAT('%', #{SCH_KEYWORD}), '%')</when>
					<when test='SCH_KEY == "AST_CUSL_NM"'>AND (SELECT PU.USER_NM FROM PLT_VST_CUTT_RSVT PVCR INNER JOIN PLT_PHN_CUTT PPC ON PPC.PHN_CUTT_ID = PVCR.PHN_CUTT_ID INNER JOIN PLT_USER PU ON PU.USER_ID = PPC.CUSL_ID WHERE VST_RSVT_ID = PVR.VST_RSVT_ID) LIKE CONCAT(CONCAT('%', #{SCH_KEYWORD}), '%')</when>
				</choose>
			</if>
		) A
	</select>
	
	<select id="vstRsvtHistList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT /*배정 및 처리이력 목록 (kr.co.hkcloud.palette3.vst.dao.VstMapper.vstRsvtHistList)*/
			ROW_NUMBER() OVER(ORDER BY PVRH.VST_RSVT_HSTRY_ID DESC) AS RNUM
			, PVRH.VST_RSVT_HSTRY_ID
			, PVRH.CUSTCO_ID
			, PVRH.VST_RSVT_ID
			, PVRH.CUST_NM
			, PVRH.REL_CD
			, (SELECT CD_NM FROM PLT_COMM_CD WHERE CUSTCO_ID = #{CUSTCO_ID}::INT AND GROUP_CD_ID = 'REL_TP' AND CD_ID = PVRH.REL_CD) AS REL_NM
			, PVRH.CUST_TELNO
			, PVRH.ZIP
			, PVRH.ADDR
			, PVRH.ADDR_DTL
			, PVRH.RGTR_ID
			, (SELECT USER_NM FROM PLT_USER WHERE USER_ID = PVRH.RGTR_ID) AS RGTR_NM
			, PVRH.REG_DT
			, PVRH.STTS_CD
			, (SELECT CD_NM FROM PLT_COMM_CD WHERE CUSTCO_ID = #{CUSTCO_ID}::INT AND GROUP_CD_ID = 'VST_RSVT_STAT' AND CD_ID = PVRH.STTS_CD) AS STTS_NM
			, PVRH.STTS_DTL_CD
			, (SELECT CD_NM FROM PLT_COMM_CD WHERE CUSTCO_ID = #{CUSTCO_ID}::INT AND GROUP_CD_ID = PVRH.STTS_CD AND CD_ID = PVRH.STTS_DTL_CD) AS STTS_DTL_NM
			, PVRH.CN
			, PVRH.RSVT_BGNG_DT
			, PVRH.RSVT_END_DT
			, PVRH.ALTMNT_RGTR_ID
			, (SELECT USER_NM FROM PLT_USER WHERE USER_ID = PVRH.ALTMNT_RGTR_ID) AS ALTMNT_RGTR_NM
			, PVRH.ALTMNT_DT
			, PVRH.VSTR_ID
			, (SELECT USER_NM FROM PLT_USER WHERE USER_ID = PVRH.VSTR_ID) AS VSTR_NM
			, (SELECT MBL_PHN_NO FROM PLT_USER WHERE USER_ID = PVRH.VSTR_ID) AS MBL_PHN_NO
			, (SELECT PO.DEPT_NM FROM PLT_USER_OGNZ PUO INNER JOIN PLT_OGNZ PO ON PO.CUSTCO_ID = PUO.CUSTCO_ID AND PO.DEPT_ID = PUO.DEPT_ID WHERE PUO.USE_YN = 'Y' AND PUO.USER_ID = PVRH.VSTR_ID) AS DEPT_NM
			, PVRH.SRVC_TYPE_CD
			, (SELECT CD_NM FROM PLT_COMM_CD WHERE CUSTCO_ID = #{CUSTCO_ID}::INT AND GROUP_CD_ID = 'SRVC_TP' AND CD_ID = PVRH.SRVC_TYPE_CD) AS SRVC_TYPE_NM
			, PVRH.PRDCT_TYPE_ID
			, (SELECT PRDCT_NM FROM PLT_VST_PRDCT_TYPE PVPT WHERE PRDCT_TYPE_ID = (SELECT UP_PRDCT_TYPE_ID FROM PLT_VST_PRDCT_TYPE PVPT WHERE PRDCT_TYPE_ID = PVRH.PRDCT_TYPE_ID)) AS UP_PRDCT_NM
			, (SELECT PRDCT_NM FROM PLT_VST_PRDCT_TYPE PVPT WHERE PRDCT_TYPE_ID = PVRH.PRDCT_TYPE_ID) AS PRDCT_NM
			, PVRH.DMND_MTTR
			, PVRH.EXCPTN_MTTR
		FROM PLT_VST_RSVT_HSTRY PVRH
		WHERE PVRH.VST_RSVT_ID = #{VST_RSVT_ID}::INT
	</select>

	<select id="getVstrToken" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT /*배정 기사 TOKEN 정보 조회 (kr.co.hkcloud.palette3.vst.dao.VstMapper.getVstrToken)*/
			PU.TOKEN
			, PU.USER_NM
			, PU.MBL_PHN_NO
			, PO.DEPT_NM
			, PO.OFC_NO
			<if test='VST_RSVT_ID != null and VST_RSVT_ID != ""'>
			, (SELECT RSVT_BGNG_DT FROM (SELECT ROW_NUMBER() OVER(ORDER BY REG_DT DESC) AS RNUM, RSVT_BGNG_DT FROM PLT_VST_RSVT_HSTRY WHERE VST_RSVT_ID = #{VST_RSVT_ID}::INT) A WHERE RNUM = 1) AS RSVT_BGNG_DT
			</if>
		FROM PLT_USER PU
		INNER JOIN PLT_USER_OGNZ PUO ON PUO.USER_ID = PU.USER_ID AND PUO.USE_YN = 'Y'
		INNER JOIN PLT_OGNZ PO ON PO.CUSTCO_ID = PUO.CUSTCO_ID AND PO.DEPT_ID = PUO.DEPT_ID
		WHERE PU.USER_ID = #{VSTR_ID}::INT
	</select>
</mapper>