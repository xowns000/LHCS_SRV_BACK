<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.hkcloud.palette3.km.clsf.dao.KmRightMapper">

	<!--	우측 지식 메뉴의 지식정보 목록 조회	 -->
	<select id="rightContsList" parameterType= "java.util.HashMap" resultType="java.util.HashMap">
		<if test=' PAGES_CNT != null and PAGES_CNT != "" '>

		</if>
		SELECT		/*		우측 지식 메뉴의 지식정보 목록 조회 ( kr.co.hkcloud.palette3.km.clsf.dao.KmRightMapper.rightContsList )	*/
			TD.*
			<choose>
				<when test=' ORDER_BY != null and ORDER_BY == "CLSF" '>
					, ROW_NUMBER() OVER(ORDER BY TD.SORT_ARR ASC) AS ROW_NUMBER
				</when>
				<otherwise>
					, ROW_NUMBER() OVER(ORDER BY TD.MDFCN_DT DESC) AS ROW_NUMBER
				</otherwise>
			</choose>
		FROM (
			SELECT
				KC.KMS_CONTS_ID
				, KC.KMS_CLSF_ID
				, CLSF.KMS_CLSF_NM
				, CLSF.CLSF_PATH
				, CLSF.SORT_ARR || ' > ' || CONCAT('CONTS', LPAD(CAST(KC.SORT_ORD AS VARCHAR),5,'0')) AS SORT_ARR
				, KC.KMS_CONTS_NM
				, KC.STTS_CD
				, KC.SE_CD
				, KC.ESNTL_YN
				, (SELECT CD_NM FROM PLT_COMM_CD WHERE CUSTCO_ID = #{CUSTCO_ID}::INT AND CD_ID = KC.STTS_CD AND GROUP_CD_ID = 'CONT_ST') AS STTS_CD_NM
				, KC.SORT_ORD
				, KC.MDFR_ID
				, KC.MDFCN_DT AS MDFCN_DT
				, K.KEY_WORD
				, CASE WHEN UC.KMS_CONTS_ID IS NOT NULL THEN 'Y' ELSE 'N' END AS BOOK_MARK_YN
				, TO_CHAR( TO_TIMESTAMP( KC.MDFCN_DT, 'YYYYMMDDHH24MISS' ) , 'YYYY-MM-DD HH24:MI') AS MDFCN_DT_F
				<if test=' (KMS_CONTS_ID != null and KMS_CONTS_ID != "") or (SE_CD != NULL and SE_CD == "SCRIPT") '>
				, KCC.KMS_CONTS_CN
				</if>
				, KC.COMM_YN
				, (SELECT USER_NM FROM PLT_USER WHERE USER_ID = KC.RGTR_ID) AS RGTR_NM
				, (SELECT CD_NM 
					FROM PLT_COMM_CD 
					WHERE CUSTCO_ID = #{CUSTCO_ID}::BIGINT AND GROUP_CD_ID='SHROTCUT_CD' 
						AND CD_ID IN(
							SELECT KEY_CD FROM PLT_SHORT_KEY 
							WHERE LNK_ID = KC.KMS_CONTS_ID::VARCHAR AND CUSTCO_ID = #{CUSTCO_ID}::BIGINT AND RGTR_ID = #{USER_ID}::BIGINT
				)) AS SHORTCUT_NM
			FROM PLT_KMS_CONTS KC
			INNER JOIN (
				WITH RECURSIVE CTE_CLSF AS (
					SELECT
						CONCAT( KMS_CLSF_NM  ) AS CLSF_PATH
<!--						, ARRAY[SORT_ORD] || KMS_CLSF_ID AS SORT-->
						, LPAD(CAST(SORT_ORD AS VARCHAR),5,'0') AS SORT_ARR
						, *
					FROM PLT_KMS_CLSF
					WHERE UP_KMS_CLSF_ID IS NULL
						AND DEL_YN = 'N'
						AND USE_YN = 'Y'
						AND CUSTCO_ID  = #{CUSTCO_ID}::INTEGER
					UNION ALL
					SELECT 
						CONCAT(CLSF_PATH, ' > ',  S.KMS_CLSF_NM)
<!--						, SORT || S.SORT_ORD || S.KMS_CLSF_ID-->
						, SORT_ARR || ' > ' || CONCAT('CLSF', LPAD(CAST(S.SORT_ORD AS VARCHAR),5,'0'))
						, S.*
					FROM CTE_CLSF R
					INNER JOIN PLT_KMS_CLSF S ON R.KMS_CLSF_ID = S.UP_KMS_CLSF_ID AND S.DEL_YN = 'N' AND S.USE_YN = 'Y'
						AND S.CUSTCO_ID  = #{CUSTCO_ID}::INTEGER
				)
				SELECT * FROM CTE_CLSF
			) CLSF ON CLSF.KMS_CLSF_ID = KC.KMS_CLSF_ID
			LEFT OUTER JOIN (
				SELECT
					ARRAY_TO_STRING(ARRAY_AGG( CASE  WHEN REPLACE( CGK.KMS_KEYWD_NM, ' ', '' ) = '' THEN NULL ELSE CGK.KMS_KEYWD_NM END ), ',') AS KEY_WORD
					, CGK.KMS_CONTS_ID 
				FROM PLT_KMS_CONTS_KEYWD CGK
				GROUP BY CGK.KMS_CONTS_ID
			) K ON K.KMS_CONTS_ID = KC.KMS_CONTS_ID
			<choose>
				<when test=' BOOK_MARK_YN != null and BOOK_MARK_YN == "Y" and USER_ID != null and USER_ID != "" '>
					INNER JOIN PLT_KMS_USER_CONTS UC ON UC.KMS_CONTS_ID = KC.KMS_CONTS_ID AND UC.USER_ID = #{USER_ID}::INTEGER
				</when>
				<otherwise>
					LEFT OUTER JOIN PLT_KMS_USER_CONTS UC ON UC.KMS_CONTS_ID = KC.KMS_CONTS_ID AND UC.USER_ID = #{USER_ID}::INTEGER
				</otherwise>
			</choose>
			<if test=' (KMS_CONTS_ID != null and KMS_CONTS_ID != "") or (SE_CD != NULL and SE_CD == "SCRIPT") '>
				LEFT OUTER JOIN PLT_KMS_CONTS_CN KCC ON KCC.KMS_CONTS_ID = KC.KMS_CONTS_ID
			</if>
			WHERE 1=1
				<choose>
					<when test=' KMS_CONTS_ID != null and KMS_CONTS_ID != "" '>
						AND KC.KMS_CONTS_ID = #{KMS_CONTS_ID}::INTEGER
					</when>
					<otherwise>
						AND KC.STTS_CD = 'PBIC'		/*		공개된 컨텐츠만 나오는게 맞는건지.	*/
					</otherwise>
				</choose>
				<if test=' NEW_YN != null and NEW_YN == "Y" '>
					AND ( TO_TIMESTAMP(KC.MDFCN_DT, 'YYYYMMDDHH24MISS') BETWEEN NOW() + INTERVAL '-7 DAY'  AND NOW() )		/*		새로운 지식 조건 - 7일	*/
				</if>
				<if test=' KEY_WORD != null and KEY_WORD != "" '>
					AND (UPPER(K.KEY_WORD) LIKE CONCAT('%', UPPER( #{KEY_WORD} ),'%') 
							OR UPPER(KC.KMS_CONTS_NM) LIKE CONCAT('%', UPPER( #{KEY_WORD} ),'%') 
							OR UPPER(CLSF.CLSF_PATH) LIKE CONCAT('%', UPPER( #{KEY_WORD} ),'%')
							<if test='SE_CD != NULL and SE_CD == "SCRIPT"'>
							OR UPPER(KCC.KMS_CONTS_CN) LIKE CONCAT('%', UPPER( #{KEY_WORD} ),'%')
							</if>
					)
							
				</if>
				<if test=' SE_CD != null and SE_CD != "" '>
					AND KC.SE_CD = #{SE_CD}
				</if>
				<if test=' LIKE_KMS_KEYWD_NM != null and LIKE_KMS_KEYWD_NM != "" '>
					AND UPPER(K.KEY_WORD) LIKE CONCAT('%', UPPER( #{LIKE_KMS_KEYWD_NM} ),'%') 
				</if>
				<if test=' SCRIPT_KMS_CLSF_ID != null and SCRIPT_KMS_CLSF_ID != "" '>
					AND KC.KMS_CLSF_ID IN (
						WITH RECURSIVE CTE_CLSF AS (
							SELECT
								KMS_CLSF_ID, UP_KMS_CLSF_ID
							FROM PLT_KMS_CLSF
							WHERE KMS_CLSF_ID = #{SCRIPT_KMS_CLSF_ID}::INTEGER
								AND DEL_YN = 'N'
								AND USE_YN = 'Y'
								AND CUSTCO_ID  = #{CUSTCO_ID}::INTEGER
							UNION ALL
							SELECT 
								S.KMS_CLSF_ID, S.UP_KMS_CLSF_ID
							FROM CTE_CLSF R
							INNER JOIN PLT_KMS_CLSF S ON R.KMS_CLSF_ID = S.UP_KMS_CLSF_ID AND S.DEL_YN = 'N' AND S.USE_YN = 'Y'
								AND S.CUSTCO_ID  = #{CUSTCO_ID}::INTEGER
						)
						SELECT KMS_CLSF_ID FROM CTE_CLSF
					) 
				</if>
				<choose>
					<when test=' COMM_YN != null and COMM_YN != ""'>
						AND KC.COMM_YN = #{COMM_YN}
						<if test='COMM_YN == "N"'>
							AND KC.RGTR_ID = #{USER_ID}::INTEGER
						</if>
					</when>
					<otherwise>
						AND (KC.COMM_YN = 'Y' OR (KC.COMM_YN = 'N' AND KC.RGTR_ID = #{USER_ID}::INTEGER))
					</otherwise>
				</choose>
				
		) TD
		<if test=' PAGES_CNT != null and PAGES_CNT != "" '>

		</if>
	</select>
	
	<!--	우측 지식 메뉴의 지식정보 Tree 형식으로 조회	 -->
	<select id="rightContsTreeList" parameterType= "java.util.HashMap" resultType="java.util.HashMap">
		
		WITH RECURSIVE CTE_F AS (		/*		우측 지식 메뉴의 지식정보 Tree 형식으로 조회 ( kr.co.hkcloud.palette3.km.clsf.dao.KmRightMapper.rightContsTreeList )	*/
			SELECT 
				A.*
			FROM (
				WITH RECURSIVE CTE_T AS (
					SELECT 
						1 AS LEVEL
						, LPAD(CAST(SORT_ORD AS VARCHAR),5,'0') AS SORT_ARR
						, CONCAT(KMS_CLSF_NM) AS BY_PATH
						, KMS_CLSF_ID
						, UP_KMS_CLSF_ID
						, KMS_CLSF_NM
						, SORT_ORD
						, NULL AS KMS_CONTS_ID
					FROM PLT_KMS_CLSF
					WHERE UP_KMS_CLSF_ID IS NULL
						AND DEL_YN = 'N'
						AND USE_YN = 'Y'
						AND CUSTCO_ID  = #{CUSTCO_ID}::INTEGER
					UNION ALL 
					SELECT 
						LEVEL + 1
						, SORT_ARR || ' > ' || CONCAT('CLSF', LPAD(CAST(S.SORT_ORD AS VARCHAR),5,'0'))
						, CONCAT(BY_PATH, ' > ', S.KMS_CLSF_NM)
						, S.KMS_CLSF_ID
						, S.UP_KMS_CLSF_ID
						, S.KMS_CLSF_NM
						, S.SORT_ORD
						, NULL AS KMS_CONTS_ID
					FROM CTE_T R 
					INNER JOIN PLT_KMS_CLSF S ON R.KMS_CLSF_ID = S.UP_KMS_CLSF_ID AND S.CUSTCO_ID  = #{CUSTCO_ID}::INTEGER
						AND S.DEL_YN = 'N' AND S.USE_YN = 'Y'
				)
				SELECT * FROM CTE_T
			) A
			UNION ALL
			SELECT 
				LEVEL + 1
				, SORT_ARR || ' > ' || CONCAT('CONTS', LPAD(CAST(C.SORT_ORD AS VARCHAR),5,'0'))
				, CONCAT( BY_PATH, ' > ', C.KMS_CONTS_NM  )
				, CONCAT(C.KMS_CONTS_ID, SUBSTRING(C.REG_DT,5))::BIGINT  AS KMS_CLSF_ID
				, C.KMS_CLSF_ID AS UP_KMS_CLSF_ID
				, C.KMS_CONTS_NM AS KMS_CLSF_NM
				, C.SORT_ORD
				, C.KMS_CONTS_ID::VARCHAR AS KMS_CONTS_ID
			FROM CTE_F R
			INNER JOIN PLT_KMS_CONTS C ON R.KMS_CLSF_ID = C.KMS_CLSF_ID
				AND C.STTS_CD = 'PBIC'		/*		상태값 확인 할 것 (공개된 컨텐츠만 보이게 할 것인지 확인 요망)		*/
				AND C.COMM_YN= 'Y'
				<if test=' SE_CD != null and SE_CD != "" '>
					AND C.SE_CD= #{SE_CD}
				</if>
		)
		SELECT 
			LEVEL
			, SORT_ARR
			, BY_PATH
			, KMS_CLSF_ID
			, UP_KMS_CLSF_ID
			, KMS_CLSF_NM
			, SORT_ORD
			, KMS_CONTS_ID
			, CASE WHEN KMS_CONTS_ID IS NULL THEN TRUE ELSE FALSE END AS LOCKED
		FROM CTE_F
		ORDER BY SORT_ARR
	</select>


	
	<!-- 	가이드(안내) 선택시 관련 파일 목록 조회		-->
	<select id="rightContsRelFileList" parameterType= "java.util.HashMap" resultType="java.util.HashMap">
		SELECT		/*		가이드(안내) 선택시 관련 파일 목록 조회 ( kr.co.hkcloud.palette3.km.clsf.dao.KmRightMapper.rightContsRelFileList )		*/
			F.FILE_GROUP_KEY
			, F.FILE_KEY
			, F.CUSTCO_ID
			, F.TASK_TYPE_CD
			, F.TRGT_TYPE_CD
			, F.PATH_TYPE_CD
			, F.MIME_TYPE_CD
			, F.ACTL_FILE_NM
			, F.STRG_FILE_NM
			, F.FILE_PATH
			, F.FILE_SZ
			, F.FILE_EXTN
			, F.DWNLD_CNT
			, F.FILE_URL
			, F.ACS_KEY
			, F.FILE_ACS_TYPE_CD
			, F.USE_YN
		FROM PLT_FILE F
		WHERE F.USE_YN = 'Y'
			AND F.FILE_GROUP_KEY = (
			SELECT FILE_GROUP_KEY FROM PLT_KMS_CONTS WHERE KMS_CONTS_ID = #{KMS_CONTS_ID}::INTEGER
		)
		ORDER BY F.FILE_GROUP_KEY, F.FILE_KEY
	</select>
	
	<!-- 	컨텐츠 북마크 등록	-->
	<insert id="INSERT_KMS_USER_CONTS" parameterType= "java.util.HashMap">
		INSERT 	/*		컨텐츠 북마크 등록 ( kr.co.hkcloud.palette3.km.clsf.dao.KmRightMapper.INSERT_KMS_USER_CONTS )		*/
		INTO PLT_KMS_USER_CONTS ( KMS_CONTS_ID , USER_ID )
		SELECT
			#{KMS_CONTS_ID}::INTEGER AS KMS_CONTS_ID
			, #{USER_ID}::INTEGER AS USER_ID
		WHERE NOT EXISTS (
			SELECT 1 FROM PLT_KMS_USER_CONTS
			WHERE KMS_CONTS_ID = #{KMS_CONTS_ID}::INTEGER
			AND USER_ID = #{USER_ID}::INTEGER
		)
	</insert>
	
	<!-- 	컨텐츠 북마크 삭제	-->
	<delete id="DELETE_KMS_USER_CONTS" parameterType= "java.util.HashMap">
		DELETE	/*		컨텐츠 북마크 삭제 ( kr.co.hkcloud.palette3.km.clsf.dao.KmRightMapper.DELETE_KMS_USER_CONTS )	*/
		FROM PLT_KMS_USER_CONTS
		WHERE KMS_CONTS_ID = #{KMS_CONTS_ID}::INTEGER 
			AND USER_ID = #{USER_ID}::INTEGER
	</delete>
	
	<!--		우측 지식정보 메뉴의 Badge 카운트 조회	 	-->
	<select id="rightContsBadgeConut" parameterType= "java.util.HashMap" resultType="java.util.HashMap">
		SELECT 	/*		우측 지식정보 메뉴의 Badge 카운트 조회 ( kr.co.hkcloud.palette3.km.clsf.dao.KmRightMapper.rightContsBadgeConut )	*/
			COALESCE((
				SELECT 
					COUNT(KC.KMS_CONTS_ID)
				FROM PLT_KMS_CONTS KC
				INNER JOIN  (
					WITH RECURSIVE CTE_CLSF AS (
						SELECT * FROM PLT_KMS_CLSF
						WHERE UP_KMS_CLSF_ID IS NULL AND DEL_YN = 'N' AND USE_YN = 'Y'
							AND CUSTCO_ID  = #{CUSTCO_ID}::INTEGER
						UNION ALL
						SELECT S.* FROM CTE_CLSF R
						INNER JOIN PLT_KMS_CLSF S ON R.KMS_CLSF_ID = S.UP_KMS_CLSF_ID AND S.DEL_YN = 'N' AND S.USE_YN = 'Y'
							AND S.CUSTCO_ID  = #{CUSTCO_ID}::INTEGER
					)
					SELECT * FROM CTE_CLSF
				) CLSF ON CLSF.KMS_CLSF_ID = KC.KMS_CLSF_ID
				WHERE KC.STTS_CD = 'PBIC'
				AND KC.SE_CD='KNOWLEDGE'
				AND ( TO_TIMESTAMP( KC.MDFCN_DT, 'YYYYMMDDHH24MISS') BETWEEN NOW() + INTERVAL '-7 DAY'  AND NOW() )
			),0) AS NEW_CNT
			, COALESCE((
				SELECT 
					COUNT(KC.KMS_CONTS_ID)
				FROM PLT_KMS_CONTS KC
				INNER JOIN  (
					WITH RECURSIVE CTE_CLSF AS (
						SELECT * FROM PLT_KMS_CLSF
						WHERE UP_KMS_CLSF_ID IS NULL AND DEL_YN = 'N' AND USE_YN = 'Y'
							AND CUSTCO_ID  = #{CUSTCO_ID}::INTEGER
						UNION ALL
						SELECT S.* FROM CTE_CLSF R
						INNER JOIN PLT_KMS_CLSF S ON R.KMS_CLSF_ID = S.UP_KMS_CLSF_ID AND S.DEL_YN = 'N' AND S.USE_YN = 'Y'
							AND S.CUSTCO_ID  = #{CUSTCO_ID}::INTEGER
					)
					SELECT * FROM CTE_CLSF
				) CLSF ON CLSF.KMS_CLSF_ID = KC.KMS_CLSF_ID
				INNER JOIN PLT_KMS_USER_CONTS UC ON UC.KMS_CONTS_ID = KC.KMS_CONTS_ID AND UC.USER_ID = #{USER_ID}::INTEGER
				WHERE KC.STTS_CD = 'PBIC'
				AND KC.SE_CD='KNOWLEDGE'
			),0) AS MY_CNT

	</select>
	
	
	<!-- 	지식 콘텐츠 조회	-->
	<select id="rightContsDetail" parameterType= "java.util.HashMap" resultType="java.util.HashMap">
		SELECT		/*		지식 콘텐츠 조회 ( kr.co.hkcloud.palette3.km.clsf.dao.KmRightMapper.rightContsInfo )		*/
			C.KMS_CONTS_ID
			, C.KMS_CONTS_NM
			, C.SE_CD
			, (SELECT CD_NM FROM PLT_COMM_CD WHERE CUSTCO_ID = #{CUSTCO_ID}::INT AND CD_ID = C.SE_CD AND GROUP_CD_ID = 'KMS_CL') AS SE_CD_NM
			, C.ESNTL_YN 		/*		필수여부	*/
			, CN.KMS_CONTS_CN
		FROM PLT_KMS_CONTS C
		INNER JOIN PLT_KMS_CONTS_CN CN ON C.KMS_CONTS_ID = CN.KMS_CONTS_ID
		WHERE C.USE_YN  = 'Y'
			AND STTS_CD = 'PBIC'
			AND C.KMS_CONTS_ID  = #{KMS_CONTS_ID}::INTEGER
	</select>
	
</mapper>