ALTER TABLE PLT_KMS_CONTS ADD COMM_YN CHAR(1)  NULL;
COMMENT ON COLUMN PLT_KMS_CONTS.COMM_YN IS '공통_여부';




CREATE OR REPLACE FUNCTION getusercustcolist(p_lgn_id character varying)
 RETURNS SETOF record
 LANGUAGE plpgsql
AS $function$
DECLARE
	SCHEMA_RECORD RECORD;
	shema_list text;
	dynamic_query text;
	result_row record;
	loopCnt int ;
BEGIN
	
	loopCnt := 1;
	dynamic_query := 'SELECT SCHEMA_ID, CD, CD_NM, ASP_CUST_KEY, API_URI, USER_ID, EXT_NO, PDS_EXT_NO, DSPTCH_NO FROM (';
	
	FOR SCHEMA_RECORD IN
		SELECT
			PCC.SCHEMA_ID
			, PCC.ASP_CUST_KEY
		FROM custco.PLT_CERT_CUSTCO_USER PCCU
		INNER JOIN custco.PLT_CERT_CUSTCO PCC ON PCC.CERT_CUSTCO_ID = PCCU.CERT_CUSTCO_ID AND PCC.SRVC_STTS_CD = 'ON' --서비스 중인 고객사
		LEFT OUTER JOIN CUSTCO.PLT_CERT_IPCC_SRVR PCIS ON PCIS.IPCC_SRVR_ID = PCC.IPCC_SRVR_ID
		WHERE EXISTS (SELECT 1 FROM custco.PLT_CERT_USER WHERE CERT_USER_ID = PCCU.CERT_USER_ID AND LGN_ID = P_LGN_ID)
	LOOP
		
		IF loopCnt > 1 THEN
			dynamic_query := dynamic_query || ' UNION ALL ';
		END IF;
		
		dynamic_query := dynamic_query || 'SELECT '
				||loopCnt||' AS ORD
			 	, '''||SCHEMA_RECORD.SCHEMA_ID||''' AS SCHEMA_ID
				, PUO.USER_ID
			 	, PC.CUSTCO_ID AS CD
			 	, PC.CO_NM AS CD_NM
			 	, PC.ASP_CUST_KEY
			 	, PC.API_URI
			 	, PPIE.EXT_NO
			 	, PPIE.PDS_EXT_NO
			 	, (SELECT ARRAY_TO_STRING(ARRAY_AGG(DSPTCH_NO), '','') FROM PLT_CUSTCO_DSPTCH_NO WHERE CUSTCO_ID = PC.CUSTCO_ID) AS DSPTCH_NO
				, PUO.SORT_ORD
			 FROM '||SCHEMA_RECORD.SCHEMA_ID||'.PLT_USER_OGNZ PUO 
			 INNER JOIN '||SCHEMA_RECORD.SCHEMA_ID||'.PLT_CUSTCO PC ON PC.CUSTCO_ID = PUO.CUSTCO_ID
			 LEFT OUTER JOIN '||SCHEMA_RECORD.SCHEMA_ID||'.PLT_PHN_IP_EXT PPIE ON PPIE.CUSTCO_ID = PC.CUSTCO_ID AND PPIE.USER_ID = PUO.USER_ID
			 WHERE PUO.USE_YN = ''Y''
			 AND PUO.USER_ID = (SELECT USER_ID FROM '||SCHEMA_RECORD.SCHEMA_ID||'.PLT_USER WHERE LGN_ID = '''||P_LGN_ID||''')
			';
		
		loopCnt := loopCnt + 1;
		
	END LOOP;

	dynamic_query := dynamic_query || ') A ORDER BY A.ORD, A.SORT_ORD';
	
	RAISE NOTICE 'dynamic_query: %', dynamic_query;

  -- 동적 쿼리 실행 및 결과 반환
  FOR result_row IN EXECUTE dynamic_query LOOP
    RETURN NEXT result_row;
  END LOOP;

  RETURN;
END;
$function$
;